{"version":3,"sources":["utility/local/authStorage.js","api/auth.js","contexts/AuthContext.js","hooks/useAuth.js","hooks/useResource.js","api/util.js","api/issues.js","api/projects.js","contexts/ProjectsContext.js","utility/route/PrivateRoute.js","components/display/Button/LinkButton.js","components/display/NavBar/NavBar.js","logo.svg","components/app/Navigation/TopNavBar.js","utility/schema/validation.js","components/form/LoginForm.js","pages/LoginPage/LoginPage.js","components/form/SignupForm.js","pages/SignupPage/SignupPage.js","pages/Dashboard/Dashboard.js","components/app/Navigation/ProjectsNavBar.js","components/display/List/ListItem.js","components/display/List/ListItemGroup.js","hooks/useFilteredItems.js","hooks/useGroupedItems.js","components/display/List/List.js","components/app/ProjectList/ProjectListOverviewCard.js","components/app/ProjectList/ProjectList.js","components/form/NewProjectForm.js","contexts/NotificationBannerContext.js","hooks/useNotificationBanner.js","pages/NewProjectPage/NewProjectPage.js","components/form/inputs/Dropzone/Dropzone.js","components/form/inputs/Upload/Upload.js","components/form/NewIssueForm.js","pages/NewIssuePage/NewIssuePage.js","components/app/Navigation/IssueNavBar.js","components/display/TableList/TableList.js","components/app/IssueList/IssueListButtonToolbar.js","components/app/IssueList/IssueListOverviewCard.js","components/app/IssueList/IssueList.js","components/app/IssueFilterControl/IssueFilterControl.js","components/hocs/withEdit/withEdit.js","utility/strings.js","images/edit-icon-png-small.png","components/app/CommentList/CommentList.js","components/display/DialogBox/DialogBox.js","hooks/useDialogBox.js","components/app/Navigation/IssueDetailNavBar.js","components/app/Attachments/Attachments.js","components/form/EditIssueDetailsForm.js","pages/IssueDetails/IssueDetails.js","utility/local/paramStorage.js","hooks/useListParams.js","components/form/SelectForm.js","components/form/InlineSearch.js","components/display/Button/ToggleButton.js","utility/CollabInfo.js","utility/log.js","pages/IssueLog/IssueLog.js","pages/IssueDashboard/IssueDashboard.js","pages/ProjectDetails/ProjectDetails.js","pages/ProjectDashboard/ProjectDashboard.js","hooks/useProjects.js","components/app/UserInfo/UserInfo.js","components/form/ChangePasswordForm.js","pages/UserAccountPage/UserAccountPage.js","components/display/NotificationBanner/NotificationBanner.js","IssueTracker.js","App.js","reportWebVitals.js","index.js"],"names":["authTokenKey","auth","isAuthenticated","login","credentials","cb","axios","post","userName","password","response","token","data","localStorage","setItem","user","message","tokenLogin","getItem","console","log","get","headers","signup","logout","removeItem","changePassword","currentPassword","newPassword","patch","authContext","createContext","ProvideAuth","props","useState","setUser","isLoading","setIsLoading","error","setError","useEffect","loginWithToken","a","authApi","userInfo","err","useProvideAuth","Provider","value","children","useAuth","useContext","useResource","path","authToken","forkedPaths","isError","resource","setResource","refresh","setRefresh","getResource","prev","fetchResource","length","promises","forEach","fork","push","Promise","all","responseData","map","res","filename","authHeader","projectId","issueInfo","issue","issueId","update","delete","assigneeId","status","comment","result","commentId","config","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","attachmentId","issuesApi","createIssue","updateIssue","deleteIssue","assignIssue","advanceIssue","addComment","updateComment","deleteComment","createAttachment","getAttachment","deleteAttachment","projectInfo","project","collaboratorId","projectsApi","createProject","updateProject","deleteProject","addProjectCollaborator","removeProjectCollaborator","projectsContext","ProvideProjects","projects","setProjects","handleDeleteProject","slice","index","findIndex","elem","id","splice","handleAddProject","newProject","issues","handleEditProject","updates","handleAddCollaborator","values","handleCreateIssue","issueDetails","newIssue","projectIdx","proj","Number","handleDeleteIssue","issueIdx","handleEditIssue","issueUpdates","Object","keys","updatedIssue","handleAssignIssue","handleStartIssue","handleCloseIssue","handleIssueAttachmentRequest","addIssueAttachmentHandles","attachmentHandles","currHandles","concat","useProvideProjects","PrivateRoute","component","Component","render","to","pathname","state","from","location","LinkButton","text","Button","as","Link","variant","NavBar","title","logo","Navbar","className","Brand","href","alt","src","Toggle","Collapse","TopNavBar","bg","expand","Nav","onClick","SignupSchema","Yup","shape","firstName","min","max","required","lastName","email","confirmPassword","oneOf","LoginSchema","ChangePasswordSchema","confirmNewPassword","ProjectSchema","name","description","IssueSchema","LoginForm","onSubmit","initialValues","validationSchema","setSubmitting","isSubmitting","Row","Col","htmlFor","type","disabled","LoginPage","fromState","Container","fluid","SignupForm","form","autoComplete","lg","SignupPage","redirect","setRedirect","Dashboard","ProjectsNavBar","ListItem","item","ListItemGroup","items","collapse","setCollapse","idx","useFilteredItems","filter","searchText","searchKeys","allowedValues","mapValues","obj","selectedFilters","pickBy","filteredItems","isAllowed","key","includes","toLowerCase","useGroupedItems","groupKey","groupedItems","groupBy","List","listItems","groupValues","orderBy","listComponentArray","groupComponents","reverse","keyValue","listComponents","ProjectListOverviewCard","onDelete","onEdit","onAddCollaborator","Card","Body","Title","Text","ButtonGroup","DropdownButton","Dropdown","Item","style","borderLeft","ProjectList","projectList","NewProjectForm","notificationBannerContext","ProvideNotificationBanner","notificationBanner","setText","show","setShow","showNotificationWithText","setTimeout","useProvideNotificationBanner","useNotificationBanner","NewProjectPage","createNewProject","Dropzone","onFilesAdded","highlight","setHighlight","fileInputRef","useRef","fileListToArray","fileList","array","i","onDragOver","e","preventDefault","onDragLeave","onDrop","files","dataTransfer","current","click","cursor","ref","multiple","onChange","target","initialUpload","isUploading","progress","successful","Upload","sendRequest","onClose","setUploadCallbacks","upload","setUpload","uploadCallbacks","uploadFiles","file","callbacks","FormData","append","progressCb","then","responses","successCb","catch","failureCb","onComplete","copy","percentage","uploading","renderProgress","uploadProgress","ProgressBar","now","opacity","updatedFiles","fileIndex","display","NewIssueForm","collaborators","category","priority","setFieldValue","submitForm","resetForm","val","NewIssuePage","match","params","addIssueAttachment","attachmentData","onCreateAttachmentRequest","addNewIssue","attachments","createAnother","onAddAttachment","IssueNavBar","MyTable","Table","bordered","striped","responsive","colSpan","groupName","headerKeys","TableList","renderButtons","groupNames","group","IssueListButtonToolbar","onAssign","onStart","ButtonToolbar","width","IssueListOverviewCard","height","flexDirection","alignItems","flex","assignee","issueDisplayParameters","groups","IssueList","issueList","viewAs","Checkmark","checked","IssueFilterControl","isOpen","setOpen","setAllFiltersTo","newValue","filterKeys","filters","filterKey","onSelect","checkAllFilters","uncheckAllFilters","isCleared","cleared","handleToggleFilterKey","eventKey","order","menuAlign","split","filterValue","newValues","onToggle","open","event","meta","source","Header","bug","feature","task","other","ItemText","critical","high","regular","low","trivial","unassigned","inprogress","resolved","closed","withEdit","WrappedComponent","isEditing","editing","setEditing","setValue","inputRef","focus","handleKeyPress","handleSubmit","handleChange","xs","sm","md","onBlur","defaultValue","rows","cols","onKeyPress","options","opt","removeTimezoneFromDateString","dateString","string","searchTerm","n","indexOf","getNthIndexOf","commentBoxStyle","margin","CustomToggle","React","forwardRef","editIcon","CommentList","editId","setEditId","EditArea","showEditArea","handleEditComment","comments","creator","Date","created_at","toString","evt","Menu","body","DialogBox","heading","closeButtonText","submitButtonText","renderData","formId","Modal","onHide","closeButton","Footer","useDialogBox","visible","setVisible","setData","hide","RenderDialogBox","nodeList","input","extractInputValues","childNodes","IssueDetailNavBar","linkUrl","sticky","Attachments","setUploading","attachment","download","renderAttachmentItems","onCreate","EditIssueDetailsForm","initialTitle","initialDescription","initialCategory","initialPriority","IssueDetails","getAttachments","setComments","editMode","setEditMode","showDeleteCommentDialogBox","DeleteCommentDialogBox","EditSelect","handleAddComment","commentData","newComment","document","querySelector","handleDeleteComment","commentIdx","advanceButtonText","history","goBack","size","hidden","opened_at","closed_at","Form","Group","controlId","Control","placeholder","paramKey","setLocalParamStorage","JSON","stringify","useListParams","initialParams","listParams","setListParams","store","parse","param","SelectForm","fieldName","selectItems","itemKey","selectOptions","InlineSearch","inline","noValidate","firstChild","FormControl","ToggleButton","radioValue","toggle","radios","radio","currentTarget","CollabInfo","collabArray","this","collabId","find","collab","issueLogItemText","logAction","logCreatedBy","logDate","logDataOld","logDataNew","changes","oldData","newData","_oldData","_newData","getChanges","changedKeys","IssueLog","date","createdAt","createdBy","action","initialFilterValue","IssueDashboard","showDeleteIssueDialogBox","DeleteIssueDialogBox","showAssignIssueDialogBox","AssignIssueDialogBox","showStartIssueDialogBox","StartIssueDialogBox","showCloseIssueDialogBox","CloseIssueDialogBox","search","changeListParams","issueView","setIssueView","handleSelectIssueView","view","exact","routerProps","iss","urlParts","url","pop","join","ProjectDetails","EditBox","handleEdit","textAlign","justifyContent","collabInfo","collaborator","logCollaborator","logData","projectLogItemText","ProjectDashboard","showDeleteProjectDialogBox","DeleteDialogBox","showAddCollaboratorDialogBox","AddCollaboratorDialogBox","UserInfo","s","ChangePasswordForm","UserAccountPage","handlePasswordChange","NotificationBanner","banner","IssueTracker","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"uoBAAMA,EAAe,uBCGrB,IAAMC,EAAO,CACTC,iBAAiB,EACXC,MAFG,SAEGC,EAAaC,GAAK,OAAD,mIAEEC,IAAMC,KACzB,kBACA,CACIC,SAAUJ,EAAYI,SACtBC,SAAUL,EAAYK,WANT,cAEfC,EAFe,OASrBT,EAAKC,iBAAkB,EDZDS,ECaJD,EAASE,KAAKD,MDZxCE,aAAaC,QAAQd,EAAcW,GCa3BN,EAAG,2BAAKK,EAASE,KAAKG,MAApB,IAA0BJ,MAAOD,EAASE,KAAKD,QAAS,MAXrC,kBAYdD,EAASE,MAZK,kCAcrBX,EAAKC,iBAAkB,EACvBG,EAAG,KAAM,CAAEW,QAAS,KAAIN,SAASE,KAAKI,UAfjB,kCDH1B,IAA2BL,ICGD,wBAkBvBM,WApBG,SAoBQZ,GAAK,OAAD,+GACXM,EDjBHE,aAAaK,QAAQlB,GCgBP,uBAIbC,EAAKC,iBAAkB,EACvBiB,QAAQC,IAAI,mBACZf,EAAG,MANU,iCAUjBc,QAAQC,IAAI,eACRV,EAAW,KAXE,mBAaIJ,IAAMe,IACnB,kBACA,CAAEC,QAAS,CAAE,cAAgB,UAAhB,OAA2BX,MAf/B,QAabD,EAba,OAiBbT,EAAKC,iBAAkB,EACvBG,EAAG,2BAAKK,EAASE,MAAf,IAAqBD,UAAS,MAlBnB,kDAoBbV,EAAKC,iBAAkB,EACvBG,EAAG,KAAM,CAAEW,QAAS,KAAIA,UArBX,iCAwBVN,GAxBU,6DA0Bfa,OA9CG,SA8CIR,EAAMV,GAAK,OAAD,mIAEQC,IAAMC,KACzB,qBADmB,eAEdQ,IAJM,cAETL,EAFS,OAMfS,QAAQC,IAAIV,GACZL,EAAGK,EAASE,KAAM,MAPH,kBAQRF,EAASE,MARD,gCAUfP,EAAG,KAAM,CAAEW,QAAS,KAAIA,UAVT,4DAajBQ,OA3DG,SA2DInB,GAAK,OAAD,oGACbJ,EAAKC,iBAAkB,EDpD3BW,aAAaY,WAAWzB,GCsDpBK,IAHa,8CAKXqB,eAhEG,SAgEYC,EAAiBC,EAAajB,EAAON,GAAK,OAAD,0HAEtDc,QAAQC,IAAI,UAAW,CAAEO,kBAAiBC,gBAFY,SAG/BtB,IAAMuB,MACzB,2BACA,CAAEF,kBAAiBC,eACnB,CAAEN,QAAS,CAAE,cAAgB,UAAhB,OAA2BX,MANU,cAGhDD,EAHgD,OAQtDS,QAAQC,IAAIV,GACZL,EAAG,MATmD,kBAU/CK,EAASE,MAVsC,kCAYtDP,EAAG,CAAEW,QAAS,KAAIN,SAASE,KAAKI,UAZsB,8DAiBnDf,I,OCjFF6B,EAAcC,wBAAc,IAE1B,SAASC,EAAYC,GAChC,IAAMhC,EASV,WACI,MAAwBiC,mBAAS,MAAjC,mBAAOnB,EAAP,KAAaoB,EAAb,KACA,EAAkCD,oBAAS,GAA3C,mBAAOE,EAAP,KAAkBC,EAAlB,KACA,EAA0BH,mBAAS,MAAnC,mBAAOI,EAAP,KAAcC,EAAd,KAEAC,qBAAU,WACN,IAAMC,EAAc,uCAAG,sBAAAC,EAAA,sEACbC,EAAQ1B,YAAW,SAACF,GACtBA,EAAOI,QAAQC,IAAI,gBAAkBL,EAAKP,UAAYW,QAAQC,IAAI,iBAClEe,EAAQpB,GACRwB,EAAS,MACTF,GAAa,MALE,2CAAH,qDAQpBlB,QAAQC,IAAI,yBACZiB,GAAa,GACbI,MAED,IAEH,IAOMtC,EAAQ,SAACC,EAAaC,GACxBc,QAAQC,IAAI,cACZiB,GAAa,GACbM,EAAQxC,MAAMC,GAAa,SAACW,EAAMuB,GAC3BA,EAAOC,EAASD,IAEfH,EAAQpB,GACRwB,EAAS,MACTlC,EAAGU,OAGXsB,GAAa,IAuBjB,MAAO,CACHtB,OACAqB,YACAE,QACAf,OA7CW,SAACqB,EAAUvC,GACtB,OAAOsC,EAAQpB,OAAOqB,GAAU,SAAChC,GAC7BO,QAAQC,IAAIR,GACZP,EAAGO,OA2CPT,QACAqB,OA1BW,SAAAnB,GACX,OAAOsC,EAAQnB,QAAO,WAClBW,EAAQ,MACRI,EAAS,MACTlC,GAAMA,QAuBVqB,eAnBmB,SAACC,EAAiBC,EAAavB,GAClD,OAAOsC,EAAQjB,eAAeC,EAAiBC,EAAab,EAAKJ,OAAO,SAACkC,GAClEA,GACCN,EAASM,GACTxC,EAAGwC,KAEHN,EAAS,MACTlC,EAAG,YAjEFyC,GAEb,OACI,cAAChB,EAAYiB,SAAb,CAAsBC,MAAO/C,EAA7B,SACKgC,EAAMgB,WCPJ,SAASC,IACpB,OAAOC,qBAAWrB,GCmDPsB,MApDf,SAAqBC,EAAMC,GAAgC,IAArBC,EAAoB,uDAAN,KAChD,EAAgCrB,mBAAS,CACrCtB,KAAM,GACNwB,WAAW,EACXoB,SAAS,IAHb,mBAAOC,EAAP,KAAiBC,EAAjB,KAMA,EAA8BxB,oBAAS,GAAvC,mBAAOyB,EAAP,KAAgBC,EAAhB,KAEMC,EAAc,kBAAMD,GAAW,SAAAE,GAAI,OAAKA,MAwC9C,OAtCAtB,qBAAU,WAEN,IAAMuB,EAAa,uCAAG,kCAAArB,EAAA,yDAClBgB,EAAY,CAAE9C,KAAM,GAAIwB,WAAW,EAAMoB,SAAS,IADhC,SAGRlC,EAAUgC,EAAY,CAAE,cAAgB,UAAhB,OAA2BA,IAAgB,IAEtEC,EALW,oBAMgB,IAAvBA,EAAYS,OANL,yCAM0BN,EAAY,CAAE9C,KAAM,GAAIwB,WAAW,EAAOoB,SAAS,KAN7E,cAQJS,EAAW,GACjBV,EAAYW,SAAQ,SAAAC,GAChBF,EAASG,KAAK9D,IAAMe,IAAIgC,EAAO,IAAMc,EAAM,CAAE7C,gBAVvC,UAaO+C,QAAQC,IAAIL,GAbnB,QAaVvD,EAbU,OAeJ6D,EAAe7D,EAAS8D,KAAI,SAAAC,GAAG,MAAK,CACtCC,SAAUD,EAAInD,QAAQ,oBACtBV,KAAM6D,EAAI7D,SAGd8C,EAAY,CAAE9C,KAAM2D,EAAcnC,WAAW,EAAOoB,SAAS,IApBnD,yCAsBOlD,IAAMe,IAAIgC,EAAM,CAAE/B,YAtBzB,QAsBVZ,EAtBU,OAuBVgD,EAAY,CAAE9C,KAAMF,EAASE,KAAMwB,WAAW,EAAOoB,SAAS,IAvBpD,0DA2BdrC,QAAQC,IAAR,MACAsC,EAAY,CAAE9C,KAAK,EAAD,GAAOwB,WAAW,EAAOoB,SAAS,IA5BtC,0DAAH,qDAgCnBO,MAED,CAACV,EAAMC,EAAWK,IAEd,CAACF,EAAUC,EAAaG,ICpD5B,SAASc,EAAWrB,GACvB,MAAO,CAAE,cAAgB,UAAhB,OAA2BA,I,4CCExC,WAA2BsB,EAAWC,EAAWvB,GAAjD,iBAAAZ,EAAA,sEAEcpB,EAAUqD,EAAWrB,GAFnC,SAG4BhD,IAAMC,KAAN,wBAA4BqE,EAA5B,WAAgDC,EAAW,CAAEvD,YAHzF,cAGcwD,EAHd,yBAIeA,EAAMlE,MAJrB,gCAMQO,QAAQC,IAAR,MANR,0D,kEAUA,WAA2BwD,EAAWG,EAASC,EAAQ1B,GAAvD,iBAAAZ,EAAA,sEAEcpB,EAAUqD,EAAWrB,GAFnC,SAG4BhD,IAAMuB,MAAN,wBAA6B+C,EAA7B,mBAAiDG,GAAWC,EAAQ,CAAE1D,YAHlG,cAGcwD,EAHd,yBAIeA,EAAMlE,MAJrB,gCAMQO,QAAQC,IAAR,MANR,0D,kEAUA,WAA2BwD,EAAWG,EAASzB,GAA/C,iBAAAZ,EAAA,sEAEcpB,EAAUqD,EAAWrB,GAFnC,SAG4BhD,IAAM2E,OAAN,wBAA8BL,EAA9B,mBAAkDG,GAAW,CAAEzD,YAH3F,cAGcwD,EAHd,yBAIeA,EAAMlE,MAJrB,gCAMQO,QAAQC,IAAR,MANR,0D,kEAUA,WAA2BwD,EAAWG,EAASG,EAAY5B,GAA3D,iBAAAZ,EAAA,sEAEcpB,EAAUqD,EAAWrB,GAFnC,SAG4BhD,IAAMuB,MAAN,wBACC+C,EADD,mBACqBG,EADrB,WAEhB,CAAEG,cACF,CAAE5D,YANd,cAGcwD,EAHd,yBAQeA,EAAMlE,MARrB,gCAUQO,QAAQC,IAAR,MAVR,0D,kEAcA,WAA4BwD,EAAWG,EAASI,EAAQ7B,GAAxD,iBAAAZ,EAAA,sEAEcpB,EAAUqD,EAAWrB,GAFnC,SAG4BhD,IAAMuB,MAAN,wBACC+C,EADD,mBACqBG,EADrB,YAEhB,CAAEI,UACF,CAAE7D,YANd,cAGcwD,EAHd,yBAQeA,EAAMlE,MARrB,gCAUQO,QAAQC,IAAR,MAVR,0D,kEAcA,WAA0BwD,EAAWG,EAASK,EAAS9B,GAAvD,iBAAAZ,EAAA,sEAEcpB,EAAUqD,EAAWrB,GAFnC,SAG6BhD,IAAMC,KAAN,wBACAqE,EADA,mBACoBG,EADpB,aAEjB,CAAEK,WACF,CAAE9D,YANd,cAGc+D,EAHd,OAQQlE,QAAQC,IAAIiE,GARpB,kBASeA,EAAOzE,MATtB,gCAWQO,QAAQC,IAAR,MAXR,0D,kEAeA,WAA6BwD,EAAWG,EAASO,EAAWF,EAAS9B,GAArE,iBAAAZ,EAAA,sEAEcpB,EAAUqD,EAAWrB,GAFnC,SAG6BhD,IAAMuB,MAAN,wBACA+C,EADA,mBACoBG,EADpB,qBACwCO,GACzD,CAAEF,WACF,CAAE9D,YANd,cAGc+D,EAHd,OAQQlE,QAAQC,IAAIiE,GARpB,kBASeA,EAAOzE,MATtB,gCAWQO,QAAQC,IAAR,MAXR,0D,kEAeA,WAA6BwD,EAAWG,EAASO,EAAWhC,GAA5D,iBAAAZ,EAAA,sEAEcpB,EAAUqD,EAAWrB,GAFnC,SAG6BhD,IAAM2E,OAAN,wBACAL,EADA,mBACoBG,EADpB,qBACwCO,GACzD,CAAEhE,YALd,cAGc+D,EAHd,OAOQlE,QAAQC,IAAIiE,GAPpB,kBAQeA,EAAOzE,MARtB,gCAUQO,QAAQC,IAAR,MAVR,0D,kEAgBA,WAAgCwD,EAAWG,EAASnE,EAAM0C,EAAWjD,GAArE,iBAAAqC,EAAA,sEAEcpB,EAAUqD,EAAWrB,GACvBiC,EAAS,CACTC,iBAAkB,SAASC,GACvB,IAAIC,EAAmBC,KAAKC,MAA+B,IAAvBH,EAAcI,OAAgBJ,EAAcK,OAChFzF,GAAqB,oBAAPA,GAAsBA,EAAGqF,IAE3CpE,WARZ,kBAUehB,IAAMC,KAAN,wBACcqE,EADd,mBACkCG,EADlC,gBAEHnE,EACA2E,IAbZ,gCAgBQpE,QAAQC,IAAR,MAhBR,yD,kEAqBA,WAA6BwD,EAAWG,EAASgB,EAAczC,GAA/D,eAAAZ,EAAA,sEAEcpB,EAAUqD,EAAWrB,GAFnC,kBAGehD,IAAMe,IAAN,wBACcuD,EADd,mBACkCG,EADlC,wBACyDgB,GAC5D,CAAEzE,aALd,gCAQQH,QAAQC,IAAR,MARR,yD,kEAYA,WAAgCwD,EAAWG,EAASgB,EAAczC,GAAlE,iBAAAZ,EAAA,sEAEcpB,EAAUqD,EAAWrB,GACrB+B,EAAS/E,IAAM2E,OAAN,wBACML,EADN,mBAC0BG,EAD1B,wBACiDgB,GAC5D,CAAEzE,YAENH,QAAQC,IAAIiE,GAPpB,kBAQeA,GARf,gCAUQlE,QAAQC,IAAR,MAVR,0D,sBAcA,IAAM4E,EAAY,CACdC,Y,gDAAaC,Y,kDAAaC,Y,gDAAaC,Y,kDAAaC,a,kDACpDC,W,kDAAYC,c,oDAAeC,c,kDAC3BC,iB,oDAAkBC,c,kDAAeC,iB,mDAGtBX,I,4CC7Jf,WAA6BY,EAAatD,GAA1C,iBAAAZ,EAAA,sEAEcpB,EAAUqD,EAAWrB,GAFnC,SAG8BhD,IAAMC,KAAK,gBAAiBqG,EAAa,CAAEtF,YAHzE,cAGcuF,EAHd,yBAIeA,GAJf,gCAMQ1F,QAAQC,IAAR,MANR,0D,kEAUA,WAA6BwD,EAAWtB,EAAW0B,GAAnD,iBAAAtC,EAAA,sEAEcpB,EAAUqD,EAAWrB,GAFnC,SAG8BhD,IAAMuB,MAAN,wBAA6B+C,GAAaI,EAAQ,CAAE1D,YAHlF,cAGcuF,EAHd,yBAIeA,GAJf,gCAMQ1F,QAAQC,IAAR,MANR,0D,kEAUA,WAA6BwD,EAAWtB,GAAxC,iBAAAZ,EAAA,sEAEcpB,EAAUqD,EAAWrB,GAFnC,SAG8BhD,IAAM2E,OAAN,wBAA8BL,GAAa,CAAEtD,YAH3E,cAGcuF,EAHd,yBAIeA,GAJf,gCAMQ1F,QAAQC,IAAR,MANR,0D,kEAUA,WAAsCwD,EAAWkC,EAAgBxD,GAAjE,iBAAAZ,EAAA,sEAEcpB,EAAUqD,EAAWrB,GAFnC,SAG6BhD,IAAMC,KAAN,wBAA4BqE,EAA5B,kBAAuD,CAAEkC,kBAAkB,CAAExF,YAH1G,cAGc+D,EAHd,yBAIeA,GAJf,gCAMQlE,QAAQC,IAAR,MANR,0D,kEAUA,WAAyCwD,EAAWkC,EAAgBxD,GAApE,iBAAAZ,EAAA,sEAEcpB,EAAUqD,EAAWrB,GAFnC,SAG6BhD,IAAM2E,OAAN,wBAA8BL,EAA9B,kBAAyD,CAAEkC,kBAAkB,CAAExF,YAH5G,cAGc+D,EAHd,yBAIeA,GAJf,gCAMQlE,QAAQC,IAAR,MANR,0D,sBAUA,IAAM2F,EAAc,CAChBC,c,8CAAeC,c,gDAAeC,c,8CAAeC,uB,gDAAwBC,0B,iDAG1DL,IClDFM,EAAkBtF,wBAAc,IAE9B,SAASuF,EAAgBrF,GACpC,IAAMsF,EASV,WACI,IAAMtH,EAAOiD,IACb,EAAgCE,EAAY,gBAAiBnD,EAAKc,KAAOd,EAAKc,KAAKJ,MAAQ,MAA3F,mBAAO4G,EAAP,KAAiBC,EAAjB,KAEMC,EAAmB,uCAAG,6BAAA/E,EAAA,6DAAS9B,EAAT,EAASA,KAAT,SAClBmG,EAAYG,cAActG,EAAKgE,UAAW3E,EAAKc,KAAKJ,OADlC,OAExB6G,GAAY,SAAA1D,GACR,IAAMyD,EAAWzD,EAAKlD,KAAK8G,QACrBC,EAAQJ,EAASK,WAAU,SAAAC,GAAI,OAAIA,EAAKC,KAAOlH,EAAKgE,aAE1D,OADA2C,EAASQ,OAAOJ,EAAO,GAChB,2BAAK7D,GAAZ,IAAkBlD,KAAM2G,OANJ,2CAAH,sDAUnBS,EAAgB,uCAAG,WAAOC,GAAP,eAAAvF,EAAA,sEACCqE,EAAYC,cAAciB,EAAYhI,EAAKc,KAAKJ,OADjD,OACfkG,EADe,OAErBW,GAAY,SAAA1D,GACR,IAAMyD,EAAWzD,EAAKlD,KAAK8G,QAE3B,OADAH,EAASnD,KAAT,2BAAmByC,EAAQjG,MAA3B,IAAiCsH,OAAQ,MAClC,2BAAKpE,GAAZ,IAAkBlD,KAAM2G,OALP,2CAAH,sDAShBY,EAAiB,uCAAG,WAAOvD,EAAWwD,GAAlB,SAAA1F,EAAA,0FAAH,wDAIjB2F,EAAqB,uCAAG,+BAAA3F,EAAA,6DAAS9B,EAAT,EAASA,KAAM0H,EAAf,EAAeA,OAAf,SACpBvB,EAAYI,uBAAuBvG,EAAKgE,UAAW0D,EAAOxB,eAAgB7G,EAAKc,KAAKJ,OADhE,2CAAH,sDAIrB4H,EAAiB,uCAAG,WAAO3D,EAAW4D,GAAlB,eAAA9F,EAAA,sEACCsD,EAAUC,YAAYrB,EAAW4D,EAAcvI,EAAKc,KAAKJ,OAD1D,cAChB8H,EADgB,OAEtBjB,GAAY,SAAA1D,GACR,IAAMyD,EAAWzD,EAAKlD,KAAK8G,QACrBgB,EAAanB,EAASK,WAAU,SAAAe,GAAI,OAAIA,EAAKb,KAAOc,OAAOhE,MAEjE,OADA2C,EAASmB,GAAYR,OAAO9D,KAAKqE,GAC1B,2BAAK3E,GAAZ,IAAkBlD,KAAM2G,OANN,kBAQfkB,GARe,2CAAH,wDAWjBI,EAAiB,uCAAG,WAAOjE,EAAWG,GAAlB,SAAArC,EAAA,sEAChBsD,EAAUG,YAAYvB,EAAWG,EAAS9E,EAAKc,KAAKJ,OADpC,OAEtB6G,GAAY,SAAA1D,GACR,IAAMyD,EAAWzD,EAAKlD,KAAK8G,QACrBgB,EAAanB,EAASK,WAAU,SAAAe,GAAI,OAAIA,EAAKb,KAAOc,OAAOhE,MAC3DkE,EAAWvB,EAASmB,IACnBnB,EAASmB,GAAYR,QACrBX,EAASmB,GAAYR,OAAOlE,OAAS,GACrCuD,EAASmB,GAAYR,OAAON,WAAU,SAAA9C,GAAK,OAAIA,EAAMgD,KAAOc,OAAO7D,MAE1E,OADAwC,EAASmB,GAAYR,OAAOH,OAAOe,EAAU,GACtC,2BAAKhF,GAAZ,IAAkBlD,KAAM2G,OAVN,2CAAH,wDAcjBwB,EAAe,uCAAG,WAAOnE,EAAWG,EAASiE,GAA3B,eAAAtG,EAAA,yDAEoB,IAArCuG,OAAOC,KAAKF,GAAchF,OAFT,iEAIOgC,EAAUE,YAAYtB,EAAWG,EAASiE,EAAc/I,EAAKc,KAAKJ,OAJzE,OAIdwI,EAJc,OAKpB3B,GAAY,SAAA1D,GACR,IAAMyD,EAAWzD,EAAKlD,KAAK8G,QACrBgB,EAAanB,EAASK,WAAU,SAAAe,GAAI,OAAIA,EAAKb,KAAOc,OAAOhE,MAC3DkE,EAAWvB,EAASmB,IACnBnB,EAASmB,GAAYR,QACrBX,EAASmB,GAAYR,OAAOlE,OAAS,GACrCuD,EAASmB,GAAYR,OAAON,WAAU,SAAA9C,GAAK,OAAIA,EAAMgD,KAAOc,OAAO7D,MAE1E,OADAwC,EAASmB,GAAYR,OAAOY,GAAYK,EACjC,2BAAKrF,GAAZ,IAAkBlD,KAAM2G,OAbR,2CAAH,0DAiBf6B,EAAiB,uCAAG,WAAOxE,EAAWG,EAAS+B,GAA3B,eAAApE,EAAA,sEACKsD,EAAUI,YAAYxB,EAAWG,EAAS+B,EAAgB7G,EAAKc,KAAKJ,OADzE,OAChBwI,EADgB,OAEtB3B,GAAY,SAAA1D,GACR,IAAMyD,EAAWzD,EAAKlD,KAAK8G,QACrBgB,EAAanB,EAASK,WAAU,SAAAe,GAAI,OAAIA,EAAKb,KAAOc,OAAOhE,MAC3DkE,EAAWvB,EAASmB,IACnBnB,EAASmB,GAAYR,QACrBX,EAASmB,GAAYR,OAAOlE,OAAS,GACrCuD,EAASmB,GAAYR,OAAON,WAAU,SAAA9C,GAAK,OAAIA,EAAMgD,KAAOc,OAAO7D,MAE1E,OADAwC,EAASmB,GAAYR,OAAOY,GAAYK,EACjC,2BAAKrF,GAAZ,IAAkBlD,KAAM2G,OAVN,2CAAH,0DAcjB8B,EAAgB,uCAAG,WAAOzE,EAAWG,GAAlB,eAAArC,EAAA,sEACMsD,EAAUK,aAAazB,EAAWG,EAAS,aAAc9E,EAAKc,KAAKJ,OADzE,OACfwI,EADe,OAErB3B,GAAY,SAAA1D,GACR,IAAMyD,EAAWzD,EAAKlD,KAAK8G,QACrBgB,EAAanB,EAASK,WAAU,SAAAe,GAAI,OAAIA,EAAKb,KAAOc,OAAOhE,MAC3DkE,EAAWvB,EAASmB,IACnBnB,EAASmB,GAAYR,QACrBX,EAASmB,GAAYR,OAAOlE,OAAS,GACrCuD,EAASmB,GAAYR,OAAON,WAAU,SAAA9C,GAAK,OAAIA,EAAMgD,KAAOc,OAAO7D,MAE1E,OADAwC,EAASmB,GAAYR,OAAOY,GAAYK,EACjC,2BAAKrF,GAAZ,IAAkBlD,KAAM2G,OAVP,2CAAH,wDAchB+B,EAAgB,uCAAG,WAAO1E,EAAWG,EAASI,GAA3B,eAAAzC,EAAA,sEACMsD,EAAUK,aAAazB,EAAWG,EAASI,EAAQlF,EAAKc,KAAKJ,OADnE,OACfwI,EADe,OAErB3B,GAAY,SAAA1D,GACR,IAAMyD,EAAWzD,EAAKlD,KAAK8G,QACrBgB,EAAanB,EAASK,WAAU,SAAAe,GAAI,OAAIA,EAAKb,KAAOc,OAAOhE,MAC3DkE,EAAWvB,EAASmB,IACnBnB,EAASmB,GAAYR,QACrBX,EAASmB,GAAYR,OAAOlE,OAAS,GACrCuD,EAASmB,GAAYR,OAAON,WAAU,SAAA9C,GAAK,OAAIA,EAAMgD,KAAOc,OAAO7D,MAE1E,OADAwC,EAASmB,GAAYR,OAAOY,GAAYK,EACjC,2BAAKrF,GAAZ,IAAkBlD,KAAM2G,OAVP,2CAAH,0DAchBgC,EAA4B,uCAAG,WAAO3E,EAAWG,EAASnE,EAAMP,GAAjC,SAAAqC,EAAA,6DACjCvB,QAAQC,IAAI,cADqB,kBAE1B4E,EAAUS,iBAAiB7B,EAAWG,EAASnE,EAAMX,EAAKc,KAAKJ,MAAON,IAF5C,2CAAH,4DAK5BmJ,EAA4B,SAAC5E,EAAWG,EAAS0E,GACnDjC,GAAY,SAAA1D,GACR,IAAMyD,EAAWzD,EAAKlD,KAAK8G,QACrBgB,EAAanB,EAASK,WAAU,SAAAe,GAAI,OAAIA,EAAKb,KAAOc,OAAOhE,MAC3DkE,EAAWvB,EAASmB,IACnBnB,EAASmB,GAAYR,QACrBX,EAASmB,GAAYR,OAAOlE,OAAS,GACrCuD,EAASmB,GAAYR,OAAON,WAAU,SAAA9C,GAAK,OAAIA,EAAMgD,KAAOc,OAAO7D,MACpE2E,EAAcnC,EAASmB,GAAYR,OAAOY,GAAUW,mBAAqB,GAE/E,OADAlC,EAASmB,GAAYR,OAAOY,GAAUW,kBAAoBC,EAAYC,OAAOF,GACtE,2BAAK3F,GAAZ,IAAkBlD,KAAM2G,QAIhC,MAAO,CACH3G,KAAM2G,EAAS3G,KACf6G,sBACAU,oBACAH,mBACAK,wBACAQ,oBACAE,kBACAR,oBACAa,oBACAC,mBACAC,mBACAC,+BACAC,6BA5JaI,GAEjB,OACI,cAACvC,EAAgBtE,SAAjB,CAA0BC,MAAOuE,EAAjC,SACKtF,EAAMgB,W,uCCaJ4G,MArBf,YAA0D,IAAlC5G,EAAiC,EAAjCA,SAAU6G,EAAuB,EAAvBA,UAAc7H,EAAS,iBACjDhC,EAAOiD,IACL6G,EAAYD,EAClB,OACI,cAAC,IAAD,2BACQ7H,GADR,IAEI+H,OAAQ,SAAC/H,GAAD,OACRhC,EAAKc,KACDkC,GAAY,cAAC8G,EAAD,eAAe9H,IAE3B,cAAC,IAAD,CACIgI,GAAI,CACAC,SAAU,SACVC,MAAO,CAAEC,KAAMnI,EAAMoI,kB,iCCP9BC,MARf,YAA6C,IAAvBL,EAAsB,EAAtBA,GAAIM,EAAkB,EAAlBA,KAAStI,EAAS,iBACxC,OACI,cAACuI,EAAA,EAAD,yBAAQC,GAAIC,IAAMT,GAAIA,GAAU,IAAKU,QAAQ,mBAAsB1I,GAAnE,aACKsI,GAAQtI,EAAMgB,a,gDCkBZ2H,OAtBf,YAAoD,IAAlCC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,KAAMd,EAAoB,EAApBA,OAAW/H,EAAS,kBAC/C,OACI,eAAC8I,GAAA,EAAD,yBAAQC,UAAU,UAAa/I,GAA/B,cACI,eAAC8I,GAAA,EAAOE,MAAR,CAAcnD,GAAG,QAAQoD,KAAK,IAA9B,UACKJ,EACG,qBACIK,IAAI,GACJC,IAAKN,EACLE,UAAU,SAEd,KAEHH,KAEL,cAACE,GAAA,EAAOM,OAAR,CAAe,gBAAc,qBAC7B,cAACN,GAAA,EAAOO,SAAR,CAAiBxD,GAAG,mBAAmBkD,UAAU,sBAAjD,SACKhB,WCnBF,OAA0B,iCC+B1BuB,OAtBf,SAAmBtJ,GACf,IAAMhC,EAAOiD,IAEP1B,EAAS,WACXvB,EAAKuB,QAAO,WACRL,QAAQC,IAAI,kBAIpB,OACI,cAAC,GAAD,CAAQyJ,MAAM,gBAAgBC,KAAMA,GAAMU,GAAG,OAAOC,OAAO,KAAKzB,OAAQ,kBACpE,eAAC0B,EAAA,EAAD,WACOzL,EAAKc,KAAsE,KAA/D,cAAC,EAAD,CAAYiK,UAAU,SAASf,GAAG,QAAlC,mBACZhK,EAAKc,KAAwE,KAAjE,cAAC,EAAD,CAAYiK,UAAU,SAASf,GAAG,SAAlC,oBACbhK,EAAKc,KAAO,cAAC,EAAD,CAAYiK,UAAU,SAASf,GAAG,aAAlC,uBAAwE,KACpFhK,EAAKc,KAAO,cAAC,EAAD,CAAYiK,UAAU,SAASf,GAAG,WAAlC,qBAAoE,KAChFhK,EAAKc,KAAO,cAAC,EAAD,CAAYiK,UAAU,SAASW,QAASnK,EAAxC,oBAAsE,Y,+CCvBvFoK,GAAeC,OAAaC,MAAM,CAC3CC,UAAWF,OACNG,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,YACdC,SAAUN,OACLG,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,YACd1L,SAAUqL,OACLG,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,YACdE,MAAOP,OACFO,MAAM,iBACNF,SAAS,YACdzL,SAAUoL,OACLG,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,YACdG,gBAAiBR,OAAaS,MAAM,CAACT,KAAQ,YAAa,IAAK,4BAGtDU,GAAcV,OAAaC,MAAM,CAC1CtL,SAAUqL,OACLG,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,YACdzL,SAAUoL,OACLG,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,cAGLM,GAAuBX,OAAaC,MAAM,CACnDnK,gBAAiBkK,OACZG,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,YACdtK,YAAaiK,OACRG,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,YACdO,mBAAoBZ,OACfS,MAAM,CAACT,KAAQ,eAAgB,MAAO,0BAGlCa,GAAgBb,OAAaC,MAAM,CAC5Ca,KAAMd,OACDG,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,YACdU,YAAaf,OACRG,IAAI,EAAG,cACPC,IAAI,IAAK,aACTC,SAAS,cAGLW,GAAchB,OAAaC,MAAM,CAC1CjB,MAAOgB,OACFG,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,YACdU,YAAaf,OACRG,IAAI,EAAG,cACPC,IAAI,IAAK,aACTC,SAAS,c,gBCRHY,OArDf,YAA4C,IAAvBC,EAAsB,EAAtBA,SAAa9K,EAAS,kBACvC,OACI,cAAC,KAAD,CACI+K,cAAe,CAAExM,SAAU,GAAIC,SAAU,IACzCwM,iBAAkBV,GAClBQ,SAAQ,uCAAE,WAAOzE,EAAP,kBAAA5F,EAAA,6DAAiBwK,EAAjB,EAAiBA,gBACT,GADR,kBAGIH,EAASzE,GAHb,uDAKFnH,QAAQC,IAAR,MALE,QAON8L,GAAc,GAPR,yDAAF,wDAHZ,SAaK,gBAAGC,EAAH,EAAGA,aAAH,OACG,eAAC,KAAD,CAAMnC,UAAU,OAAhB,UACI,cAACoC,GAAA,EAAD,CAAK3C,GAAG,KAAR,oBACA,eAAC2C,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,UACI,uBAAOC,QAAQ,WAAf,wBAEJ,eAACD,GAAA,EAAD,WACI,cAAC,KAAD,CAAOV,KAAK,WAAWY,KAAK,OAAOvC,UAAU,eAC7C,cAAC,KAAD,CAAc2B,KAAK,WAAW3B,UAAU,qBAIhD,eAACoC,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,UACI,uBAAOC,QAAQ,WAAf,wBAEJ,eAACD,GAAA,EAAD,WACI,cAAC,KAAD,CAAOV,KAAK,WAAWY,KAAK,WAAWvC,UAAU,eACjD,cAAC,KAAD,CAAc2B,KAAK,WAAW3B,UAAU,qBAI/C/I,EAAMK,OAAS,qBAAK0I,UAAU,aAAf,SAA6B/I,EAAMK,MAAMtB,UAEzD,cAACoM,GAAA,EAAD,UACI,cAAC5C,EAAA,EAAD,CAAQG,QAAQ,UAAU4C,KAAK,SAASC,SAAUL,EAAlD,sBAKJ,mEAAqC,cAAC,IAAD,CAAMlD,GAAG,SAAT,qBAArC,0B,OCxBLwD,OArBf,SAAmBxL,GACf,IAAMhC,EAAOiD,IAQPwK,EAAYzL,EAAMoI,SAASF,MAAQlI,EAAMoI,SAASF,MAAMC,KAAO,KAErE,OAAGnK,EAAKmC,UAAkB,6CACvBnC,EAAKc,KAAa,cAAC,IAAD,CAAUkJ,GAAIyD,EAAYA,EAAUxD,SAAW,MAGhE,cAACyD,GAAA,EAAD,CAAWC,OAAK,EAAC5C,UAAU,OAA3B,SACI,cAAC,GAAD,CAAW+B,SAbL,SAAC3M,GAAD,OACVH,EAAKE,MAAMC,GAAa,SAACW,GACrBI,QAAQC,IAAI,gBAAkBL,EAAKP,SAAW,SAWlB8B,MAAOrC,EAAKqC,W,OC0ErCuL,OA1Ff,SAAoB5L,GAChB,OACI,cAAC,KAAD,CACI+K,cAAe,CAAEjB,UAAW,GAAII,SAAU,GAAIC,MAAO,GAAI5L,SAAU,GAAIC,SAAU,GAAI4L,gBAAiB,IACtGY,iBAAkBrB,GAClBmB,SAAQ,uCAAE,WAAOzE,EAAQwF,GAAf,SAAApL,EAAA,6DACNoL,EAAKZ,eAAc,GADb,kBAGIjL,EAAM8K,SAASzE,GAHnB,sDAKFnH,QAAQC,IAAR,MALE,OAON0M,EAAKZ,eAAc,GAPb,yDAAF,wDAHZ,SAaK,gBAAGC,EAAH,EAAGA,aAAH,OACG,eAAC,KAAD,CAAMnC,UAAU,OAAO+C,aAAa,QAApC,UACI,cAACX,GAAA,EAAD,CAAK3C,GAAG,KAAKuD,GAAI,EAAjB,qBAEA,eAACZ,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,UACI,uBAAOC,QAAQ,YAAf,0BAEJ,eAACD,GAAA,EAAD,WACI,cAAC,KAAD,CAAOV,KAAK,YAAYY,KAAK,OAAOvC,UAAU,eAC9C,cAAC,KAAD,CAAc2B,KAAK,YAAY3B,UAAU,qBAIjD,eAACoC,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,UACI,uBAAOC,QAAQ,WAAf,yBAEJ,eAACD,GAAA,EAAD,WACI,cAAC,KAAD,CAAOV,KAAK,WAAWY,KAAK,OAAOvC,UAAU,eAC7C,cAAC,KAAD,CAAc2B,KAAK,WAAW3B,UAAU,qBAIhD,eAACoC,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,UACI,uBAAOC,QAAQ,QAAf,6BAEJ,eAACD,GAAA,EAAD,WACI,cAAC,KAAD,CAAOV,KAAK,QAAQY,KAAK,OAAOvC,UAAU,eAC1C,cAAC,KAAD,CAAc2B,KAAK,QAAQ3B,UAAU,qBAI7C,eAACoC,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,UACI,uBAAOC,QAAQ,WAAf,4BAEJ,eAACD,GAAA,EAAD,WACI,cAAC,KAAD,CAAOV,KAAK,WAAWY,KAAK,OAAOvC,UAAU,aAAa+C,aAAa,QACvE,cAAC,KAAD,CAAcpB,KAAK,WAAW3B,UAAU,qBAIhD,eAACoC,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,UACI,uBAAOC,QAAQ,WAAf,wBAEJ,eAACD,GAAA,EAAD,WACI,cAAC,KAAD,CAAOV,KAAK,WAAWY,KAAK,WAAWvC,UAAU,aAAa+C,aAAa,QAC3E,cAAC,KAAD,CAAcpB,KAAK,WAAW3B,UAAU,qBAIhD,eAACoC,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,UACI,uBAAOC,QAAQ,kBAAf,gCAEJ,eAACD,GAAA,EAAD,WACI,cAAC,KAAD,CAAOV,KAAK,kBAAkBY,KAAK,WAAWvC,UAAU,eACxD,cAAC,KAAD,CAAc2B,KAAK,kBAAkB3B,UAAU,qBAIvD,cAACoC,GAAA,EAAD,UACI,cAAC5C,EAAA,EAAD,CAAQG,QAAQ,UAAU4C,KAAK,SAASC,SAAUL,EAAlD,sBAGJ,0DAA4B,cAAC,IAAD,CAAMlD,GAAG,QAAT,oBAA5B,0BC5DLgE,OAtBf,WACI,IAAMhO,EAAOiD,IACb,EAAgChB,oBAAS,GAAzC,mBAAOgM,EAAP,KAAiBC,EAAjB,KAEM5M,EAAM,uCAAG,WAAOqB,GAAP,SAAAF,EAAA,sEACLzC,EAAKsB,OAAOqB,GAAU,SAAChC,GACzBO,QAAQC,IAAIR,MAFL,OAIXuN,GAAY,GAJD,2CAAH,sDAOZ,OACIlO,EAAKmC,UACD,6CACCnC,EAAKc,MAAQmN,EACV,cAAC,IAAD,CAAUjE,GAAG,MACb,cAAC0D,GAAA,EAAD,CAAWC,OAAK,EAAC5C,UAAU,OAA3B,SACI,cAAC,GAAD,CAAY+B,SAAUxL,O,OCV3B6M,OAVf,WAEI,OACI,eAACT,GAAA,EAAD,CAAW3C,UAAU,iBAArB,UACI,cAAC,EAAD,CAAYf,GAAG,YAAYe,UAAU,OAArC,6BACA,cAACR,EAAA,EAAD,CAAQQ,UAAU,OAAlB,uCCKGqD,OAVf,WACI,OACI,cAAC,GAAD,CAAQxD,MAAM,WAAWW,GAAG,QAAQxB,OAAQ,kBACxC,cAAC0B,EAAA,EAAD,UACI,cAAC,EAAD,CAAYzB,GAAG,gBAAgBe,UAAU,SAAzC,mCCFDsD,OANf,YAAqC,IAAjBC,EAAgB,EAAhBA,KAAMvE,EAAU,EAAVA,OACtB,OACI,qBAAKgB,UAAU,YAAf,SAA6BhB,EAAOuE,MCe7BC,OAhBf,YAAwD,IAA/B7B,EAA8B,EAA9BA,KAAM3J,EAAwB,EAAxBA,MAAOyL,EAAiB,EAAjBA,MAAOzE,EAAU,EAAVA,OACzC,EAAgC9H,oBAAS,GAAzC,mBAAOwM,EAAP,KAAiBC,EAAjB,KACA,OACI,sBAAK3D,UAAW,mBAAqB2B,EAArC,UACI,qBAAK3B,UAAW,iBAAmB0D,EAAW,YAAc,IAAK/C,QAAS,kBAAMgD,GAAY,SAAA7K,GAAI,OAAKA,MAArG,SAA6Gd,IAEzG0L,EAAW,KACVD,GAASA,EAAMzK,OAAS,EACrByK,EAAMjK,KAAI,SAAC+J,EAAMK,GAAP,OAAe,cAAC,GAAD,CAAkCL,KAAMA,EAAMvE,OAAQA,GAAtD,UAAkBhH,EAAlB,YAA2B4L,OAEpD,qBAAK5D,UAAU,sBAAf,8D,2BCXP6D,GAAmB,SAACJ,GAA4D,IAArDK,EAAoD,uDAA3C,KAAMC,EAAqC,uDAAxB,GAAIC,EAAoB,uDAAP,GACjF,IAAIF,EAAQ,OAAOL,EAGnB,IAAMQ,EAAgBC,qBAAUJ,GAAQ,SAACK,GACrC,IAAMC,EAAkBC,kBAAOF,GAAK,SAACnM,GAAD,OAAqB,IAAVA,KAC/C,OAAOiG,OAAOC,KAAKkG,MAGjBE,EAAgBb,GAASA,EAAMzK,OAAS,GAAKyK,EAAMK,QAAO,SAAAP,GAI5D,IAHA,IACIgB,GAAY,EAEhB,MAHoBtG,OAAOC,KAAK+F,GAGhC,eAA4B,CAAxB,IAAIO,EAAG,MACwC,IAA5CC,oBAASR,EAAcO,GAAMjB,EAAKiB,MACjCD,GAAY,GAIpB,GAAGA,GAA4B,KAAfR,EAAmB,CAAC,IAAD,iBAChBC,GADgB,IAC/B,IAAI,EAAJ,qBAA2B,CAAC,IAApBQ,EAAmB,QACvB,IAAmE,IAAhEC,oBAASlB,EAAKiB,GAAKE,cAAeX,EAAWW,eAAyB,CACrEH,GAAY,EACZ,MACGA,GAAY,GALQ,+BAQnC,OAAOA,KAGX,OAAOD,GAAgCb,GC9B9BkB,GAAkB,SAAClB,GAA4B,IAArBmB,EAAoB,uDAAT,KAC9C,IAAIA,EAAU,OAAOnB,EACrB,IAAMoB,EAAeC,mBAAQrB,GAAO,SAACzL,GAAD,OAAWA,EAAM4M,MACrD,OAAOC,GCgCIE,OA5Bf,YAA6I,IAA7HC,EAA4H,EAA5HA,UAA4H,IAAjHJ,gBAAiH,MAAtG,KAAsG,MAAhGK,mBAAgG,MAAlF,KAAkF,MAA5EC,eAA4E,MAAlE,MAAkE,MAA3DpB,cAA2D,MAAlD,KAAkD,MAA5CC,kBAA4C,MAA/B,GAA+B,MAA3BC,kBAA2B,MAAd,GAAc,EAAVhF,EAAU,EAAVA,OAExHsF,EAAgBT,GAAiBmB,EAAWlB,EAAQC,EAAYC,GAChEa,EAAeF,GAAgBL,EAAeM,GAkBpD,OACI,qBAAK5E,UAAU,iBAAf,SAjBmB,WACnB,IAAImF,EACJ,GAAGP,GAAYK,EAAa,CACxB,IAAMG,EAAkB,GACxBH,EAAY/L,SAAQ,SAAAlB,GAChB,IAAMsF,EAASuH,EAAa7M,GAC5BoN,EAAgBhM,KAAK,cAAC,GAAD,CAA4CuI,KAAMiD,EAAU5M,MAAOA,EAAOyL,MAAOnG,EAAQ0B,OAAQA,GAAjG,UAAuB4F,EAAvB,YAAmC5M,QAE5DmN,EAAiC,SAAZD,EAAqBE,EAAgBC,UAAYD,OAEtED,EAAqBb,GAAiBA,EAAc9K,KAAI,SAAC+J,EAAMK,GAAP,OAAe,cAAC,GAAD,CAAUL,KAAMA,EAAgB+B,SAAU1B,EAAK5E,OAAQA,GAA5B4E,MAGtG,OAAOuB,EAKDI,M,wCCICC,OAhCf,YAAoF,IAAjD3J,EAAgD,EAAhDA,QAAS4J,EAAuC,EAAvCA,SAAUC,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,kBAC1D,OACI,eAACC,GAAA,EAAD,CAAM5F,UAAU,oBAAhB,UACI,eAAC4F,GAAA,EAAKC,KAAN,CAAW7F,UAAU,YAArB,UACI,cAAC4F,GAAA,EAAKE,MAAN,UAAajK,EAAQ8F,OACrB,cAACiE,GAAA,EAAKG,KAAN,UACKlK,EAAQ+F,cAEb,eAACoE,GAAA,EAAD,CAAahG,UAAU,UAAvB,UACI,cAAC,EAAD,CAAYL,QAAQ,UAAUV,GAAE,oBAAepD,EAAQiB,IAAvD,0BACA,eAACmJ,GAAA,EAAD,CAAgBtG,QAAQ,YAAYE,MAAM,WAA1C,UACI,cAACqG,GAAA,EAASC,KAAV,CAAexF,QAAS,kBAAM+E,EAAO7J,EAAQiB,KAA7C,0BACA,cAACoJ,GAAA,EAASC,KAAV,CAAexF,QAAS,kBAAM8E,EAAS,CAAE7L,UAAWiC,EAAQiB,MAA5D,4BACA,cAACoJ,GAAA,EAASC,KAAV,CAAexF,QAAS,kBAAMgF,EAAkB,CAAE/L,UAAWiC,EAAQiB,MAArE,uCAKZ,eAAC8I,GAAA,EAAKC,KAAN,CAAW7F,UAAU,aAAaoG,MAAO,CAAEC,WAAY,mBAAvD,UACI,cAACT,GAAA,EAAKE,MAAN,4BACA,cAACF,GAAA,EAAKG,KAAN,UACK,aAAelK,EAAQqB,OAAOlE,OAAS,oCAE5C,eAACgN,GAAA,EAAD,CAAahG,UAAU,UAAvB,UACI,cAAC,EAAD,CAAYL,QAAQ,UAAUV,GAAE,oBAAepD,EAAQiB,GAAvB,WAAhC,yBACA,cAAC,EAAD,CAAY6C,QAAQ,YAAYV,GAAE,oBAAepD,EAAQiB,GAAvB,eAAlC,qC,4BCfLwJ,OARf,YAAiD,IAA1BC,EAAyB,EAAzBA,YAAgBtP,EAAS,kBAC5C,OAAOsP,EACH,cAAC,GAAD,CAAMvB,UAAWuB,EAAavH,OAAQ,SAAAuE,GAAI,OACtC,cAAC,GAAD,aAAyB1H,QAAS0H,GAAUtM,OAEhD,eC6COuP,OAnDf,YAAuC,IAAbzE,EAAY,EAAZA,SACtB,OACI,cAAC,KAAD,CACIC,cAAe,CAAEL,KAAM,GAAIC,YAAa,IACxCK,iBAAkBP,GAClBK,SAAQ,uCAAE,WAAOzE,EAAP,kBAAA5F,EAAA,6DAAiBwK,EAAjB,EAAiBA,gBACT,GADR,kBAGIH,EAASzE,GAHb,uDAKFnH,QAAQC,IAAR,MALE,QAON8L,GAAc,GAPR,yDAAF,wDAHZ,SAaK,gBAAGC,EAAH,EAAGA,aAAH,OACG,eAAC,KAAD,CAAMnC,UAAU,OAAhB,UACI,cAACoC,GAAA,EAAD,CAAK3C,GAAG,KAAR,gCAEA,eAAC2C,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,UACI,uBAAOC,QAAQ,OAAf,4BAEJ,eAACD,GAAA,EAAD,WACI,cAAC,KAAD,CAAOV,KAAK,OAAOY,KAAK,OAAOvC,UAAU,eACzC,cAAC,KAAD,CAAc2B,KAAK,OAAO3B,UAAU,qBAI5C,eAACoC,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,UACI,uBAAOC,QAAQ,cAAf,2BAEJ,eAACD,GAAA,EAAD,WACI,cAAC,KAAD,CAAOV,KAAK,cAAclC,GAAG,WAAWO,UAAU,eAClD,cAAC,KAAD,CAAc2B,KAAK,cAAc3B,UAAU,qBAInD,cAACoC,GAAA,EAAD,UACI,cAAC5C,EAAA,EAAD,CAAQG,QAAQ,UAAU4C,KAAK,SAASC,SAAUL,EAAlD,qCC3CXsE,GAA4B1P,wBAAc,IAExC,SAAS2P,GAA0BzP,GAC9C,IAAM0P,EASV,WACI,MAAwBzP,mBAAS,uBAAjC,mBAAOqI,EAAP,KAAaqH,EAAb,KACA,EAAwB1P,oBAAS,GAAjC,mBAAO2P,EAAP,KAAaC,EAAb,KAWA,MAAO,CACHvH,OACAsH,OACAE,yBAZ6B,SAAC/O,GAC9B4O,EAAQ5O,GACR8O,GAAQ,GACRE,YAAW,WACPF,GAAQ,GACRF,EAAQ,MACT,OAnBoBK,GAE3B,OACI,cAACR,GAA0B1O,SAA3B,CAAoCC,MAAO2O,EAA3C,SACK1P,EAAMgB,WCNJ,SAASiP,KACpB,OAAO/O,qBAAWsO,ICyBPU,OArBf,SAAwBlQ,GACpB,IAAMhC,EAAOiD,IACPyO,EAAqBO,KAC3B,EAAgChQ,oBAAS,GAAzC,mBAAOgM,EAAP,KAAiBC,EAAjB,KAEMiE,EAAgB,uCAAG,WAAOnK,GAAP,SAAAvF,EAAA,6DACrBvB,QAAQC,IAAI,+BAAiCnB,EAAKc,KAAKJ,OADlC,SAEfsB,EAAM8K,SAAS9E,GAFA,OAGrB0J,EAAmBI,yBAAyB,iCAC5C5D,GAAY,GAJS,2CAAH,sDAOtB,OACiB,IAAbD,EACA,cAAC,IAAD,CAAUjE,GAAG,cACb,cAAC0D,GAAA,EAAD,CAAWC,OAAK,EAAC5C,UAAU,OAA3B,SACI,cAAC,GAAD,CAAgB+B,SAAUqF,O,iBCsDvBC,OA3Ef,YAAqD,IAAjC1F,EAAgC,EAAhCA,KAAMa,EAA0B,EAA1BA,SAAU8E,EAAgB,EAAhBA,aAChC,EAAkCpQ,oBAAS,GAA3C,mBAAOqQ,EAAP,KAAkBC,EAAlB,KACMC,EAAeC,iBAAO,MAsCtBC,EAAkB,SAACC,GAErB,IADA,IAAMC,EAAQ,GACLC,EAAI,EAAGA,EAAIF,EAAS5O,OAAQ8O,IACjCD,EAAMzO,KAAKwO,EAASrE,KAAKuE,IAE7B,OAAOD,GAGX,OACI,sBACI7H,UAAS,mBAAcuH,EAAY,YAAc,IACjDQ,WAjCe,SAACC,GACpBA,EAAEC,iBACFT,GAAa,IAgCTU,YA7BgB,WACpBV,GAAa,IA6BTW,OA1BW,SAACH,GAEhB,GADAA,EAAEC,kBACCzF,EAAH,CAEA,IAAM4F,EAAQJ,EAAEK,aAAaD,MAC7B,GAAGd,EAAc,CACb,IAAMO,EAAQF,EAAgBS,GAC9Bd,EAAaO,GAGjBL,GAAa,KAiBT7G,QAlDe,WAChB6B,GACHiF,EAAaa,QAAQC,SAiDjBnC,MAAO,CAAEoC,OAAQhG,EAAW,UAAY,WAN5C,UAQI,uBACIiG,IAAKhB,EACL9F,KAAMA,EACN3B,UAAU,aACVuC,KAAK,OACLmG,UAAQ,EACRC,SAtDa,SAACX,GACtB,IAAGxF,EAAH,CACA,IAAM4F,EAAQJ,EAAEY,OAAOR,MACvB,GAAGd,EAAc,CACb,IAAMO,EAAQF,EAAgBS,GAC9Bd,EAAaO,QAmDb,qBACI1H,IAAI,SACJH,UAAU,OACVI,IAAI,gCAER,oD,sECnENyI,GAAgB,CAClBT,MAAO,GACPU,aAAa,EACbC,SAAU,GACVC,YAAY,GA6LDC,OA1Lf,YAAmF,IAAjEN,EAAgE,EAAhEA,SAAUO,EAAsD,EAAtDA,YAAaC,EAAyC,EAAzCA,QAASC,EAAgC,EAAhCA,mBAAuBnS,EAAS,kBAC9E,EAA4BC,mBAAS2R,IAArC,mBAAOQ,EAAP,KAAeC,EAAf,KAEA9R,qBAAU,WACN4R,GAAsBA,GAAmB,kBAAMG,OAChD,CAACH,IAEJ,IAwBMI,EAAW,uCAAG,gCAAA9R,EAAA,6DAChB4R,GAAU,SAAAxQ,GAAI,kCAAUA,GAAV,IAAgBiQ,SAAU,GAAID,aAAa,OAEnD7P,EAAW,GACjB9C,QAAQC,IAAIiT,GAEZA,EAAOjB,OAASiB,EAAOjB,MAAMlP,SAAQ,SAAAuQ,GACjCtT,QAAQC,IAAI,+BACZsT,EAAYH,EAAgBE,GAC5B,IAAM7T,EAAO,IAAI+T,SACjB/T,EAAKgU,OAAO,cAAeH,GAC3BxQ,EAASG,KAAK8P,EAAYtT,EAAM8T,EAAUG,gBAX9B,kBAeoBxQ,QAAQC,IAAIL,GACvC6Q,MAAK,SAAAC,GAAS,OAAIA,EAAUvQ,KAAI,SAAA9D,GAAQ,OAAIA,EAASE,KAAKkH,SAC1DgN,MAAK,SAAAlU,GAEF,OADA8T,EAAUM,YACHpU,KAEVqU,OAAM,SAAApS,GAAG,OAAI6R,EAAUQ,UAAUrS,MArB1B,OAeN4G,EAfM,OAuBZxH,EAAMkT,WAAW1L,GAvBL,kDAyBZiL,EAAUQ,UAAV,MAzBY,0DAAH,qDAoDXX,EAAkB,SAACE,GAErB,OADAH,GAAU,SAAAxQ,GAAI,kCAAUA,GAAV,IAAgBiQ,SAAU,GAAID,aAAa,OAClD,CACHe,WAAY,SAACnP,GACNA,GAAyC,MAArBA,GACnBvE,QAAQC,IAAI,eACZkT,GAAU,SAAAxQ,GACN,IAAMsR,EAAI,eAAQtR,EAAKiQ,UAKvB,OAJAqB,EAAKX,EAAK9H,MAAQ,CACdxC,MAAO,UACPkL,WAAY3P,GAET,2BAAK5B,GAAZ,IAAkBiQ,SAAUqB,QAE1B1P,IACNvE,QAAQC,IAAI,gBACZkT,GAAU,SAAAxQ,GACN,IAAMsR,EAAI,eAAQtR,EAAKiQ,UAKvB,OAJAqB,EAAKX,EAAK9H,MAAQ,CACdxC,MAAO,OACPkL,WAAY3P,GAET,2BAAK5B,GAAZ,IAAkBiQ,SAAUqB,SAIxCJ,UAAW,WACP7T,QAAQC,IAAI,mBACZkT,GAAU,SAAAxQ,GAAI,kCAASA,GAAT,IAAekQ,YAAY,EAAMsB,WAAW,QAE9DJ,UAAW,SAACrS,GACR1B,QAAQC,IAAI,kBAAmByB,GAC/ByR,GAAU,SAAAxQ,GAAI,kCAASA,GAAT,IAAekQ,YAAY,EAAOsB,WAAW,UAKjEC,EAAiB,SAACd,GACpB,IAAMe,EAAiBnB,EAAON,UAAYM,EAAON,SAASU,EAAK9H,MAC/D,GAAG0H,EAAOP,aAAeO,EAAOL,WAC5B,OACI,sBAAKhJ,UAAU,mBAAf,UACI,cAACyK,GAAA,EAAD,CAAaC,IAAKF,EAAiBA,EAAeH,WAAa,IAC/D,qBACIrK,UAAU,kBACVG,IAAI,aACJC,IAAI,qCACJgG,MAAO,CACHuE,QACIH,GAA2C,SAAzBA,EAAerL,MAAmB,GAAM,SAQtF,OACI,sBAAKa,UAAU,SAAf,UACI,sBAAKA,UAAU,SAAf,UACI,sBAAMA,UAAU,QAAhB,0BACEmJ,GACE,wBACInJ,UAAU,oBACVW,QAAS,kBAAMwI,KAFnB,kBAQR,sBAAKnJ,UAAU,UAAf,UACI,8BACI,cAAC,GAAD,CACI2B,KAAM1K,EAAM0K,KACZ2F,aAtJK,SAACc,GACtBkB,GAAU,SAAAxQ,GACN,IAAM8R,EAAe9R,EAAKsP,MAAMzJ,OAAOyJ,GAEvC,OADAO,GAAYA,EAASiC,GACd,2BACA9R,GADP,IAEIsP,MAAOwC,QAiJCpI,SAAU6G,EAAOP,aAAeO,EAAOL,eAG/C,qBAAKhJ,UAAU,QAAf,SAEQqJ,EAAOjB,OAASiB,EAAOjB,MAAM5O,KAAI,SAACiQ,EAAM7F,GAAP,OAC7B,sBAAK5D,UAAU,gBAAf,UACI,sBAAMA,UAAU,WAAhB,SAA4ByJ,EAAK9H,OAChC4I,EAAed,GAAO,IACvB,wBACIzJ,UAAU,yBACVW,QAAS,kBAvJbkK,EAuJsCjH,OAtJ9D0F,GAAU,SAAAxQ,GACN3C,QAAQC,IAAI,iBAAkByU,GAC9B,IAAMD,EAAe9R,EAAKsP,MAAM1L,QAEhC,OADAkO,EAAa7N,OAAO8N,EAAW,GACxB,2BACA/R,GADP,IAEIsP,MAAOwC,OAPQ,IAACC,GAwJIzE,MAAO,CACH0E,QAASzB,EAAOP,aAAeO,EAAOL,WAAa,OAAS,UAJpE,iBAHJ,oBAAiDpF,YAiBjE,qBAAK5D,UAAU,UAAf,SAxHAkJ,EAEDG,EAAOL,WAEF,cAACxJ,EAAA,EAAD,CACImB,QAAS,kBAAM2I,EAAUT,KAD7B,mBAQA,cAACrJ,EAAA,EAAD,CACIgD,UAAW6G,EAAOjB,OAASiB,EAAOjB,MAAMpP,OAAS,GAAKqQ,EAAOP,YAC7DnI,QAAS6I,EAFb,oBAZgB,WC8EjBuB,OAjJf,YAAoD,IAA5BhJ,EAA2B,EAA3BA,SAAUiJ,EAAiB,EAAjBA,cAC9B,EAA8C9T,mBAAS,CACnD2S,WAAY,SAACnP,GAAuBvE,QAAQC,IAAIsE,IAChDsP,UAAW,WAAQ7T,QAAQC,IAAI,sBAC/B8T,UAAW,WAAQ/T,QAAQC,IAAI,oBAHnC,mBAAOmT,EAAP,KAAwBH,EAAxB,KAMA,OACI,cAAC,KAAD,CACIpH,cAAe,CAAEnC,MAAO,GAAI+B,YAAa,GAAIqJ,SAAU,QAASC,SAAU,UAAW/Q,OAAQ,aAAcD,WAAY,IACvH+H,iBAAkBJ,GAClBE,SAAQ,uCAAE,WAAOzE,EAAP,oBAAA5F,EAAA,6DAAiBwK,EAAjB,EAAiBA,gBACT,GADR,SAGIzE,EAAWH,EAHf,SAKIyE,EAAStE,EAAU8L,GALvB,uDAQFpT,QAAQC,IAAR,MARE,QAUN8L,GAAc,GAVR,yDAAF,wDAHZ,SAgBK,gBAAGC,EAAH,EAAGA,aAAcgJ,EAAjB,EAAiBA,cAAeC,EAAhC,EAAgCA,WAAYC,EAA5C,EAA4CA,UAA5C,OACG,eAAC,KAAD,CAAMrL,UAAU,OAAOlD,GAAG,iBAA1B,UACI,cAACsF,GAAA,EAAD,CAAK3C,GAAG,KAAR,2BAEA,eAAC2C,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,UACI,uBAAOC,QAAQ,QAAf,2BAEJ,eAACD,GAAA,EAAD,WACI,cAAC,KAAD,CAAOV,KAAK,QAAQY,KAAK,OAAOvC,UAAU,eAC1C,sBAAMA,UAAU,aAAhB,SACI,cAAC,KAAD,CAAc2B,KAAK,kBAK/B,eAACS,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,UACI,uBAAOC,QAAQ,cAAf,2BAEJ,eAACD,GAAA,EAAD,WACI,cAAC,KAAD,CAAOV,KAAK,cAAclC,GAAG,WAAWO,UAAU,eAClD,sBAAMA,UAAU,aAAhB,SACI,cAAC,KAAD,CAAc2B,KAAK,cAAc3B,UAAU,uBAKvD,eAACoC,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,UACI,uBAAOC,QAAQ,WAAf,wBAEJ,eAACD,GAAA,EAAD,WACI,eAAC,KAAD,CAAOV,KAAK,WAAWlC,GAAG,SAASO,UAAU,aAA7C,UACI,wBAAQhI,MAAM,MAAd,iBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,QAAd,8BAEJ,sBAAMgI,UAAU,aAAhB,SACI,cAAC,KAAD,CAAc2B,KAAK,WAAW3B,UAAU,uBAKpD,eAACoC,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,UACI,uBAAOC,QAAQ,WAAf,wBAEJ,eAACD,GAAA,EAAD,WACI,eAAC,KAAD,CAAOV,KAAK,WAAWlC,GAAG,SAASO,UAAU,aAA7C,UACI,wBAAQhI,MAAM,UAAd,qBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,WAAd,yBAEJ,sBAAMgI,UAAU,aAAhB,SACI,cAAC,KAAD,CAAc2B,KAAK,WAAW3B,UAAU,uBAKpD,eAACoC,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,UACI,uBAAOC,QAAQ,cAAf,2BAEJ,cAACD,GAAA,EAAD,UACI,cAAC,KAAD,CACIV,KAAK,cACLlC,GAAIwJ,GACJN,SAAU,SAAA2C,GAAG,OAAIH,EAAc,cAAeG,IAC9ClC,mBAAoBA,EACpBpJ,UAAU,oBAKtB,eAACoC,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,UACI,uBAAOC,QAAQ,SAAf,sBAEJ,eAACD,GAAA,EAAD,WACI,eAAC,KAAD,CAAOV,KAAK,aAAalC,GAAG,SAASO,UAAU,aAA/C,UACI,wBAAQhI,MAAM,GAAd,wBAEIgT,EAAcxR,KAAI,SAAAzD,GAAI,OAAI,wBAAsBiC,MAAOjC,EAAK+G,GAAlC,SAAuC/G,EAAKP,UAA/BO,EAAK+G,UAGpD,sBAAMkD,UAAU,aAAhB,SACI,cAAC,KAAD,CAAc2B,KAAK,SAAS3B,UAAU,uBAKlD,cAAC,KAAD,CAAO2B,KAAK,gBAAgBY,KAAK,WAAW6D,MAAO,CAAE0E,QAAS,UAE9D,eAAC1I,GAAA,EAAD,WACI,cAAC5C,EAAA,EAAD,CAAQG,QAAQ,UAAU4C,KAAK,SAASC,SAAUL,EAAlD,uBAGA,cAAC3C,EAAA,EAAD,CACIG,QAAQ,kBACRK,UAAU,OACVwC,SAAUL,EACVxB,QAAO,sBAAE,sBAAAjJ,EAAA,6DACLyT,EAAc,iBAAiB,GAD1B,SAECC,IAFD,OAGLC,IAHK,2CAJb,8CCnETE,OAxDf,SAAsBtU,GAClB,IAAMhC,EAAOiD,IACPyO,EAAqBO,KAC3B,EAA0C9O,EAAY,iBAAD,OAChCnB,EAAMuU,MAAMC,OAAO7R,UADa,kBAEjD3E,EAAKc,KAAOd,EAAKc,KAAKJ,MAAQ,MAFlC,mBAAOqV,EAAP,KAIA,GAJA,KAIgC9T,oBAAS,IAAzC,mBAAOgM,EAAP,KAAiBC,EAAjB,KAEMuI,EAAkB,uCAAG,WAAO3R,EAAS4R,EAAgBtW,GAAhC,SAAAqC,EAAA,6DACvBvB,QAAQC,IAAI,qBADW,kBAEhBa,EAAM2U,0BAA0B3U,EAAMuU,MAAMC,OAAO7R,UAAWG,EAAS4R,EAAgBtW,IAFvE,2CAAH,0DAKlBwW,EAAW,uCAAG,WAAOpO,EAAUpI,GAAjB,yBAAAqC,EAAA,6DACVoU,EAAcrO,EAASqO,mBACtBrO,EAASqO,YAEVC,EAAgBtO,EAASsO,qBACxBtO,EAASsO,cALA,SAOI9U,EAAM8K,SAAS9K,EAAMuU,MAAMC,OAAO7R,UAAW6D,GAPjD,cAOV3D,EAPU,OASZ4P,EAAYrU,EAAG,MACb4D,EAAW,GACjB6S,GAAeA,EAAY5S,SAAQ,SAAAuQ,GAC/BC,EAAYrU,EAAGoU,GACf,IAAM7T,EAAO,IAAI+T,SACjB/T,EAAKgU,OAAO,cAAeH,GAC3BxQ,EAASG,KAAKsS,EAAmB5R,EAAMgD,GAAIlH,EAAM8T,EAAUG,gBAf/C,UAkBgBxQ,QAAQC,IAAIL,GACvC6Q,MAAK,SAAAC,GAAS,OAAIA,EAAUvQ,KAAI,SAAA9D,GAAQ,OAAIA,EAASE,KAAKkH,SAC1DgN,MAAK,SAAAlU,GAEF,OADA8T,EAAUM,YACHpU,KAEVqU,OAAM,SAAApS,GAAG,OAAI6R,EAAUQ,UAAUrS,MAxBtB,QAkBV4G,EAlBU,OA0BhBxH,EAAM+U,gBAAgB/U,EAAMuU,MAAMC,OAAO7R,UAAWE,EAAMgD,GAAI2B,GAE9DkI,EAAmBI,yBAAyB,6BAE5C5D,GAAY4I,GA9BI,4CAAH,wDAiCjB,OACiB,IAAb7I,EACI,cAAC,IAAD,CAAUjE,GAAE,oBAAehI,EAAMuU,MAAMC,OAAO7R,UAAlC,aACZ,cAAC+I,GAAA,EAAD,CAAWC,OAAK,EAAC5C,UAAU,OAA3B,SACI,cAAC,GAAD,CAAc+B,SAAU8J,EAAab,cAAeA,EAAcpV,UC3CnEqW,OAXf,YAAkC,IAAXjN,EAAU,EAAVA,OACnB,OACI,cAAC,GAAD,CAAQa,MAAM,SAASW,GAAG,QAAQC,OAAO,KAAKzB,OAAQ,kBAClD,eAAC0B,EAAA,EAAD,WACK1B,IACD,cAAC,EAAD,CAAYC,GAAG,aAAaU,QAAQ,eAAeK,UAAU,SAA7D,kC,UCHVkM,I,OAAU,SAACjV,GAAD,OACZ,eAACkV,GAAA,EAAD,CAAOC,UAAQ,EAACC,SAAO,EAACC,YAAU,EAACtM,UAAU,QAA7C,UACI,wBAAOA,UAAU,eAAjB,UACI,oBAAIA,UAAU,qBAAd,SAAmC,oBAAIuM,QAAQ,IAAZ,SAAiBtV,EAAMuV,cAC1D,+BAEQvV,EAAMwV,WAAWjT,KAAI,SAAAgL,GAAG,OAAI,6BAAiCA,GAAjC,uBAAyBA,OAEzD,yBAJI,mBAOZ,uBAAOxE,UAAU,aAAjB,SAEQ/I,EAAMrB,KAAK4D,KAAI,SAAA+J,GAAI,OACf,+BAEQtM,EAAMwV,WAAWjT,KAAI,SAAAgL,GAAG,OACpB,6BAA+BjB,EAAKiB,IAApC,UAAYjB,EAAKzG,GAAjB,YAAuB0H,OAG/B,6BACKvN,EAAMgB,SAAWhB,EAAMgB,SAASsL,GAAQ,MAD7C,UAAYA,EAAKzG,GAAjB,eANKyG,EAAKzG,cA8CnB4P,OA9Bf,YAUI,IATA1H,EASD,EATCA,UACAyH,EAQD,EARCA,WAQD,IAPC7H,gBAOD,MAPY,KAOZ,OANCK,YAMD,EALCC,QAKD,EAJCpB,eAID,MAJU,KAIV,MAHCC,kBAGD,MAHc,GAGd,MAFCC,kBAED,MAFc,GAEd,EADC2I,EACD,EADCA,cAEMrI,EAAgBT,GAAiBmB,EAAWlB,EAAQC,EAAYC,GAChEa,EAAeF,GAAgBL,EAAeM,GAEhDgI,EAAa3O,OAAOC,KAAK2G,GAE7B,OAAOA,GAAiB+H,EAAW5T,OAAS,EACxC4T,EAAWpT,KAAI,SAAAqT,GAAK,OAChB,cAAC,GAAD,CAASJ,WAAYA,EAAY7W,KAAMiP,EAAagI,GAAQL,UAAWK,EAAQ,IAA/E,SACKF,OAIT,cAAC,GAAD,CAASF,WAAYA,EAAY7W,KAAMiP,EAAc2H,UAAW,MAAhE,SACKG,K,UCnBEG,GAvCgB,SAAC,GAAgE,IAA9DlT,EAA6D,EAA7DA,UAAWE,EAAkD,EAAlDA,MAAO2L,EAA2C,EAA3CA,SAAUsH,EAAiC,EAAjCA,SAAUC,EAAuB,EAAvBA,QAAS7D,EAAc,EAAdA,QAkB7E,OACI,cAAC8D,GAAA,EAAD,CAAe7G,MAAO,CAAC8G,MAAO,QAA9B,SACI,eAAClH,GAAA,EAAD,WACI,cAAC,EAAD,CAAYrG,QAAQ,UAAUV,GAAE,oBAAerF,EAAf,mBAAmCE,EAAMgD,IAAzE,kBACA,cAAC0C,EAAA,EAAD,CACIG,QAAQ,UACRgB,QAnBgB,SAACqH,GAC7B,MAAoB,eAAjBlO,EAAMK,OAJmB4S,EAAS,CAAEnT,UAAWA,EAAWG,QAASD,EAAMgD,KAKxD,SAAjBhD,EAAMK,OAJkB6S,EAAQ,CAAEpT,UAAWA,EAAWG,QAASD,EAAMgD,KAKtD,eAAjBhD,EAAMK,OAJkBgP,EAAQ,CAAEvP,UAAWA,EAAWG,QAASD,EAAMgD,UAI1E,GAiBY0F,SAA2B,aAAjB1I,EAAMK,QAA0C,WAAjBL,EAAMK,OAHnD,SAVY,eAAjBL,EAAMK,OAAgC,SACrB,SAAjBL,EAAMK,QAAsC,eAAjBL,EAAMK,OAAgC,UAChD,aAAjBL,EAAMK,OAA8B,WAChC,WAeC,eAAC8L,GAAA,EAAD,CAAgBxG,GAAIuG,KAAarG,QAAQ,YAAYE,MAAM,WAA3D,UACI,cAACqG,GAAA,EAASC,KAAV,yBACA,cAACD,GAAA,EAASC,KAAV,CAAexF,QA/BL,kBAAM8E,EAAS,CAAE7L,UAAWA,EAAWG,QAASD,EAAMgD,MA+BhE,mC,yBCeLqQ,OA/Cf,YAAgE,IAA/BvT,EAA8B,EAA9BA,UAAWE,EAAmB,EAAnBA,MAAU7C,EAAS,kBAC3D,OACI,eAAC2O,GAAA,EAAD,CAAMQ,MAAO,CAAEgH,OAAQ,OAAQF,MAAO,OAAQpC,QAAS,OAAQuC,cAAe,MAAOC,WAAY,UAAjG,UACI,eAAC1H,GAAA,EAAKC,KAAN,CAAWO,MAAO,CAAEmH,KAAM,GAA1B,UACI,cAAC3H,GAAA,EAAKE,MAAN,UAAahM,EAAM+F,QACnB,cAAC+F,GAAA,EAAKG,KAAN,UACKjM,EAAM8H,iBAIf,eAACgE,GAAA,EAAKC,KAAN,CAAWO,MAAO,CAAEmH,KAAM,EAAGH,OAAQ,OAAQ/G,WAAY,mBAAzD,UACI,cAACT,GAAA,EAAKE,MAAN,uBACA,cAACF,GAAA,EAAKG,KAAN,UACKjM,EAAMmR,cAIf,eAACrF,GAAA,EAAKC,KAAN,CAAWO,MAAO,CAAEmH,KAAM,EAAGlH,WAAY,mBAAzC,UACI,cAACT,GAAA,EAAKE,MAAN,uBACA,cAACF,GAAA,EAAKG,KAAN,UACKjM,EAAMoR,cAIf,eAACtF,GAAA,EAAKC,KAAN,CAAWO,MAAO,CAAEmH,KAAM,EAAGlH,WAAY,mBAAzC,UACI,cAACT,GAAA,EAAKE,MAAN,qBACA,cAACF,GAAA,EAAKG,KAAN,UACKjM,EAAMK,YAIf,eAACyL,GAAA,EAAKC,KAAN,CAAWO,MAAO,CAAEmH,KAAM,EAAGlH,WAAY,mBAAzC,UACI,cAACT,GAAA,EAAKE,MAAN,uBACA,cAACF,GAAA,EAAKG,KAAN,UACKjM,EAAM0T,SAAW1T,EAAM0T,SAAW,YAI3C,cAAC5H,GAAA,EAAKC,KAAN,CAAWO,MAAO,CAAEmH,KAAM,EAAGH,OAAQ,OAAQ/G,WAAY,mBAAzD,SACI,cAAC,GAAD,aACIzM,UAAWA,EAAWE,MAAOA,GAAW7C,U,oFCtCtDwW,GAAyB,CAAC,QAAS,WAAY,WAAY,SAAU,YAErEC,GAAS,CACXxC,SAAU,CAAC,UAAW,MAAO,UAAW,OAAQ,YAChDD,SAAU,CAAC,QAAS,OAAQ,UAAW,OACvC9Q,OAAQ,CAAC,SAAU,WAAY,cAAe,OAAQ,eAmC3CwT,OAhCf,YAA0G,IAArF/T,EAAoF,EAApFA,UAAWgU,EAAyE,EAAzEA,UAAW9I,EAA8D,EAA9DA,QAASI,EAAqD,EAArDA,QAASpB,EAA4C,EAA5CA,OAAQC,EAAoC,EAApCA,WAAYC,EAAwB,EAAxBA,WAAe/M,EAAS,kBACrG,OAAO2W,GAAaA,EAAU5U,OAAS,EACjB,MAAjB/B,EAAM4W,OACH,cAAC,GAAD,CACI7I,UAAW4I,EACXnB,WAAYgB,GACZ7I,SAAUE,EACVG,YAAayI,GAAO5I,GACpBI,QAASA,EACTpB,OAAQA,EACRC,WAAYA,EACZC,WAAYA,EACZ2I,cAAe,SAAApJ,GAAI,OAAI,cAAC,GAAD,aAAwB3J,UAAWA,EAAWE,MAAOyJ,GAAUtM,OACrF,cAAC,GAAD,CACD+N,UAAW4I,EACXhJ,SAAUE,EACVG,YAAayI,GAAO5I,GACpBI,QAASA,EACTpB,OAAQA,EACRC,WAAYA,EACZC,WAAYA,EACZhF,OAAQ,SAAAuE,GAAI,OAAI,cAAC,GAAD,aAAuB3J,UAAWA,EAAWE,MAAOyJ,GAAUtM,OAItF,sBAAK+I,UAAU,qBAAf,UACI,+FACA,mBAAGE,KAAK,aAAR,yBACA,2D,gBCtCZ,SAAS4N,GAAT,GAAoD,IAA/BC,EAA8B,EAA9BA,QAASpM,EAAqB,EAArBA,KAAM7E,EAAe,EAAfA,GAAI6D,EAAW,EAAXA,QACpC,OACI,qBAAKX,UAAU,YAAYlD,GAAIA,EAAI6E,KAAMA,EAAMhB,QAASA,EAAxD,SACKoN,EAAU,SAAW,KAuKnBC,OAlKf,SAA4B/W,GACxB,MAA0BC,oBAAS,GAAnC,mBAAO+W,EAAP,KAAeC,EAAf,KAsBMC,EAAkB,SAAC3J,EAAK4J,GAC1B,IAAMC,EAAapQ,OAAOC,KAAKjH,EAAMqX,SAC/BA,EAAO,eAAQrX,EAAMqX,SAChB,KAAR9J,EACC6J,EAAWnV,SAAQ,SAAAqV,GACftQ,OAAOC,KAAKjH,EAAMqX,QAAQC,IAAYrV,SAAQ,SAAAlB,GAC1CsW,EAAQC,GAAWvW,GAASoW,QAIpCnQ,OAAOC,KAAKjH,EAAMqX,QAAQ9J,IAAMtL,SAAQ,SAAAlB,GACpCsW,EAAQ9J,GAAKxM,GAASoW,KAG9BnX,EAAMuX,SAAS,SAAUF,IAGvBG,EAAkB,WAAe,IAAdjK,EAAa,uDAAP,GAAS2J,EAAgB3J,GAAK,IACvDkK,EAAoB,WAAe,IAAdlK,EAAa,uDAAP,GAAS2J,EAAgB3J,GAAK,IAEzDmK,EAAY,WAAe,IAAdnK,EAAa,uDAAP,GACf8J,EAAO,eAAQrX,EAAMqX,SACvBM,GAAU,EACd,GAAW,KAARpK,EAAY,CACX,IAAM6J,EAAapQ,OAAOC,KAAKjH,EAAMqX,SACrCD,EAAWnV,SAAQ,SAAAqV,GACftQ,OAAOC,KAAKjH,EAAMqX,QAAQC,IAAYrV,SAAQ,SAAAlB,IACT,IAA9BsW,EAAQC,GAAWvW,KAAiB4W,GAAU,cAIzD3Q,OAAOC,KAAKjH,EAAMqX,QAAQ9J,IAAMtL,SAAQ,SAAAlB,IACT,IAAxBsW,EAAQ9J,GAAKxM,KAAiB4W,GAAU,MAGnD,OAAOA,GAOLC,EAAwB,SAACrK,GAC3BmK,EAAUnK,GAAOiK,EAAgBjK,GAAOkK,EAAkBlK,IAG9D,OACI,eAACwB,GAAA,EAAD,CAAahG,UAAW/I,EAAM+I,UAA9B,UACI,eAACiG,GAAA,EAAD,CAAgBjG,UAAU,MAAML,QAAQ,kBAAkBE,MAAM,WAAW2O,SAhEzD,SAAC3B,GACvB5V,EAAMuX,SAAS,QAAS3B,IA+DpB,UACI,cAAC3G,GAAA,EAASC,KAAV,CAAe2I,SAAS,OAAxB,kBACA,cAAC5I,GAAA,EAASC,KAAV,CAAe2I,SAAS,WAAxB,sBACA,cAAC5I,GAAA,EAASC,KAAV,CAAe2I,SAAS,SAAxB,oBACA,cAAC5I,GAAA,EAASC,KAAV,CAAe2I,SAAS,WAAxB,yBAGJ,eAAC7I,GAAA,EAAD,CAAgBjG,UAAU,MAAML,QAAQ,kBAAkBE,MAAM,QAAQ2O,SAnEtD,SAACO,GACvB9X,EAAMuX,SAAS,QAASO,IAkEpB,UACI,cAAC7I,GAAA,EAASC,KAAV,CAAe2I,SAAS,MAAxB,uBACA,cAAC5I,GAAA,EAASC,KAAV,CAAe2I,SAAS,OAAxB,4BAGJ,cAAC7I,GAAA,EAAD,CAAgBY,KAAMoH,EAAQjO,UAAU,qBAAqBL,QAAQ,kBAAkBE,MAAM,SAASmP,UAAU,QAAQR,SApErG,SAAC1K,GACxB,MAAiCA,EAAOmL,MAAM,KAA9C,mBAAOV,EAAP,KAAkBW,EAAlB,KACMC,EAAS,eAAQlY,EAAMqX,QAAQC,IACrCY,EAAUD,IAAgBC,EAAUD,GACpC,IAAMZ,EAAO,2BAAQrX,EAAMqX,SAAd,mBAAwBC,EAAYY,IACjDlY,EAAMuX,SAAS,SAAUF,IA+DiIc,SAhF3I,SAACC,EAAMC,EAAOC,GACV,WAAhBA,EAAKC,QAAqBtB,EAAQmB,IA+EjC,SACI,sBAAKrP,UAAU,UAAf,UACI,sBAAKA,UAAU,sBAAf,UACI,cAACkG,GAAA,EAASuJ,OAAV,uBACA,eAACvJ,GAAA,EAASC,KAAV,CAAe2I,SAAS,eAAxB,UACI,cAAChB,GAAD,CAAWnM,KAAK,MAAM7E,GAAG,eAAeiR,QAAS9W,EAAMqX,QAAQrD,SAASyE,MACxE,uBAAOpN,QAAQ,eAAf,oBAEJ,eAAC4D,GAAA,EAASC,KAAV,CAAe2I,SAAS,mBAAxB,UACI,cAAChB,GAAD,CAAWnM,KAAK,UAAU7E,GAAG,mBAAmBiR,QAAS9W,EAAMqX,QAAQrD,SAAS0E,UAChF,uBAAOrN,QAAQ,mBAAf,wBAEJ,eAAC4D,GAAA,EAASC,KAAV,CAAe2I,SAAS,gBAAxB,UACI,cAAChB,GAAD,CAAWnM,KAAK,OAAO7E,GAAG,gBAAgBiR,QAAS9W,EAAMqX,QAAQrD,SAAS2E,OAC1E,uBAAOtN,QAAQ,gBAAf,qBAEJ,eAAC4D,GAAA,EAASC,KAAV,CAAe2I,SAAS,iBAAxB,UACI,cAAChB,GAAD,CAAWnM,KAAK,QAAQ7E,GAAG,iBAAiBiR,QAAS9W,EAAMqX,QAAQrD,SAAS4E,QAC5E,uBAAOvN,QAAQ,iBAAf,sBAEJ,cAAC4D,GAAA,EAAS4J,SAAV,CAAmBnP,QAAS,WAAQkO,EAAsB,aAA1D,SAA0EF,IAAc,MAAQ,aAGpG,sBAAK3O,UAAU,sBAAf,UACI,cAACkG,GAAA,EAASuJ,OAAV,uBACA,eAACvJ,GAAA,EAASC,KAAV,CAAe2I,SAAS,oBAAxB,UACI,cAAChB,GAAD,CAAWnM,KAAK,WAAW7E,GAAG,oBAAoBiR,QAAS9W,EAAMqX,QAAQpD,SAAS6E,WAClF,uBAAOzN,QAAQ,oBAAf,yBAEJ,eAAC4D,GAAA,EAASC,KAAV,CAAe2I,SAAS,gBAAxB,UACI,cAAChB,GAAD,CAAWnM,KAAK,OAAO7E,GAAG,gBAAgBiR,QAAS9W,EAAMqX,QAAQpD,SAAS8E,OAC1E,uBAAO1N,QAAQ,gBAAf,qBAEJ,eAAC4D,GAAA,EAASC,KAAV,CAAe2I,SAAS,mBAAxB,UACI,cAAChB,GAAD,CAAWnM,KAAK,UAAU7E,GAAG,mBAAmBiR,QAAS9W,EAAMqX,QAAQpD,SAAS+E,UAChF,uBAAO3N,QAAQ,mBAAf,wBAEJ,eAAC4D,GAAA,EAASC,KAAV,CAAe2I,SAAS,eAAxB,UACI,cAAChB,GAAD,CAAWnM,KAAK,MAAM7E,GAAG,eAAeiR,QAAS9W,EAAMqX,QAAQpD,SAASgF,MACxE,uBAAO5N,QAAQ,eAAf,oBAEJ,eAAC4D,GAAA,EAASC,KAAV,CAAe2I,SAAS,mBAAxB,UACI,cAAChB,GAAD,CAAWnM,KAAK,UAAU7E,GAAG,mBAAmBiR,QAAS9W,EAAMqX,QAAQpD,SAASiF,UAChF,uBAAO7N,QAAQ,mBAAf,wBAEJ,cAAC4D,GAAA,EAAS4J,SAAV,CAAmBnP,QAAS,WAAQkO,EAAsB,aAA1D,SAA0EF,IAAc,MAAQ,aAGpG,sBAAK3O,UAAU,sBAAf,UACI,cAACkG,GAAA,EAASuJ,OAAV,qBACA,eAACvJ,GAAA,EAASC,KAAV,CAAe2I,SAAS,oBAAxB,UACI,cAAChB,GAAD,CAAWnM,KAAK,aAAa7E,GAAG,sBAAsBiR,QAAS9W,EAAMqX,QAAQnU,OAAOiW,aACpF,uBAAO9N,QAAQ,sBAAf,2BAEJ,eAAC4D,GAAA,EAASC,KAAV,CAAe2I,SAAS,cAAxB,UACI,cAAChB,GAAD,CAAWnM,KAAK,OAAO7E,GAAG,gBAAgBiR,QAAS9W,EAAMqX,QAAQnU,OAAOkV,OACxE,uBAAO/M,QAAQ,gBAAf,qBAEJ,eAAC4D,GAAA,EAASC,KAAV,CAAe2I,SAAS,oBAAxB,UACI,cAAChB,GAAD,CAAWnM,KAAK,aAAa7E,GAAG,sBAAsBiR,QAAS9W,EAAMqX,QAAQnU,OAAOkW,aACpF,uBAAO/N,QAAQ,sBAAf,4BAEJ,eAAC4D,GAAA,EAASC,KAAV,CAAe2I,SAAS,kBAAxB,UACI,cAAChB,GAAD,CAAWnM,KAAK,WAAW7E,GAAG,oBAAoBiR,QAAS9W,EAAMqX,QAAQnU,OAAOmW,WAChF,uBAAOhO,QAAQ,oBAAf,yBAEJ,eAAC4D,GAAA,EAASC,KAAV,CAAe2I,SAAS,gBAAxB,UACI,cAAChB,GAAD,CAAWnM,KAAK,SAAS7E,GAAG,kBAAkBiR,QAAS9W,EAAMqX,QAAQnU,OAAOoW,SAC5E,uBAAOjO,QAAQ,kBAAf,uBAEJ,cAAC4D,GAAA,EAAS4J,SAAV,CAAmBnP,QAAS,WAAQkO,EAAsB,WAA1D,SAAwEF,IAAc,MAAQ,aAElG,cAACzI,GAAA,EAAS4J,SAAV,CAAmBnP,QA9FX,WACpBgO,IAAcF,IAAoBC,KA6FtB,SAA8CC,IAAc,YAAc,uB,oDCnE/E6B,GAhGE,SAACC,EAAkBlO,GAAnB,OACb,YAAoD,IAAjDmD,EAAgD,EAAhDA,OAAQ/D,EAAwC,EAAxCA,KAAwC,IAAlC+O,iBAAkC,SAAZzZ,EAAY,kBAC/C,EAA8BC,mBAASwZ,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA0B1Z,mBAASD,EAAMe,OAAzC,mBAAOA,EAAP,KAAc6Y,EAAd,KACMC,EAAWpJ,mBAEjBlQ,qBAAU,WACNsZ,GAAYA,EAASxI,SAAWwI,EAASxI,QAAQyI,UAClD,CAACJ,EAASD,IAEb,IAKMM,EAAiB,SAAChJ,GACP,UAAVA,EAAExD,KACDyM,EAAajJ,IAIfkJ,EAAe,SAAClJ,GAClB6I,EAAS7I,EAAEY,OAAO5Q,QAOhBiZ,EAAe,SAACjJ,GAClBA,EAAEC,iBACFvC,EAAO,gBAAGoL,EAASxI,QAAQ3G,KAAO3J,IAClC4Y,GAAW,IAgDf,OAAOD,EACH,cAACtO,GAAA,EAAD,CAAK8O,GAAIla,EAAMka,GAAIC,GAAIna,EAAMma,GAAIC,GAAIpa,EAAMoa,GAAIrO,GAAI/L,EAAM+L,GAAzD,SACI,sBAAMsO,OAzDK,WACdra,EAAMqa,QAAUra,EAAMqa,UAAaV,GAAW,IAwDjB7O,SAAUkP,EAApC,SA9CQ,SAAT1O,EAEK,uBACIkG,IAAKqI,EACLnP,KAAMA,EACNY,KAAMA,EACNgP,aAAcvZ,EACd2Q,SAAUuI,IAGH,aAAT3O,EAEF,0BACIkG,IAAKqI,EACLnP,KAAMA,EACN4P,aAAcvZ,EACdwZ,KAAM,EACNC,KAAM,GACN9I,SAAUuI,EACVQ,WAAYV,IAGL,WAATzO,EAEF,wBACIkG,IAAKqI,EACLnP,KAAMA,EACN4P,aAAcvZ,EACd2Q,SAAUuI,EACVQ,WAAYV,EALhB,SAQQ/Z,EAAM0a,SAAW1a,EAAM0a,QAAQnY,KAAI,SAACoY,EAAKhO,GAAN,OAC/B,wBAAkB5L,MAAO4Z,EAAzB,SACKA,GADQhO,QAQ1B,SAUP,qBAAK5D,UAAU,oBAAf,SACI,cAACyQ,EAAD,2BAAsBxZ,GAAtB,IAA6B0J,QA9EjB,WACb+P,GACHE,GAAW,IA4EP,SACK3Z,EAAMgB,gBClFd4Z,GAA+B,SAACC,GACzC,IAAMnV,EAZY,SAACoV,EAAQC,EAAYC,GAGvC,IAFA,IAAInK,EAAI,EAAGnL,EAAQ,EAEbmL,EAAImK,GAAKtV,GAAS,GACpBA,EAAQoV,EAAOG,QAAQF,EAAYrV,EAAQ,GAC3CmL,IAGJ,OAAOnL,EAIOwV,CAAcL,EAAY,IAAK,GAE7C,OADYA,EAAWpV,MAAM,EAAGC,ICbrB,OAA0B,gDCQnCyV,GAAkB,CACpBlF,MAAO,OACPE,OAAQ,OACRiF,OAAQ,OAGNC,GAAeC,IAAMC,YAAW,WAAc/J,GAAd,IAAG9H,EAAH,EAAGA,QAAH,OAClC,qBACIR,IAAI,GACJC,IAAKqS,GACLvF,MAAM,KACNE,OAAO,KAEP3E,IAAKA,EACL9H,QAASA,OA2DF+R,OAvDf,SAAqBzb,GACjB,MAA4BC,mBAAS,MAArC,mBAAOyb,EAAP,KAAeC,EAAf,KAEMC,EAAWrC,GAASnO,KAAK,YAOzByQ,EAAe,SAACxY,GAClBsY,EAAUtY,IAGRyY,EAAoB,SAAC3Y,GACvBnD,EAAMyO,OAAOiN,EAAQvY,GACrBwY,EAAU,OAGd,OACI,cAAC,GAAD,CAAM5N,UAAW/N,EAAM+b,SAAUhU,OAAQ,SAACuE,GAAD,OACrC,eAACnB,GAAA,EAAD,CAAKgE,MAAOgM,GAAZ,UACI,cAAC/P,GAAA,EAAD,CAAKW,GAAI,GAAIqO,GAAI,GAAID,GAAI,GAAID,GAAI,EAAjC,SAEI,cACA5N,EAAK0P,QACL,OACApB,GAA6B,IAAIqB,KAAK3P,EAAK4P,YAAYC,cAG3D,cAAC/Q,GAAA,EAAD,CAAKW,GAAI,EAAGqO,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAA9B,SACI,eAACjL,GAAA,EAAD,CAAUsI,SAAU,SAAA6E,GAAG,OA1BTrL,EA0BkCqL,EA1B/BvW,EA0BoCyG,EAAKzG,GAzB7D,WAANkL,EAAuB/Q,EAAMwO,SAAS,CAAEnL,UAAWwC,IAC7C,SAANkL,EAAqB8K,EAAahW,QAArC,EAFyB,IAACkL,EAAGlL,GA0BjB,UACI,cAACoJ,GAAA,EAAS7F,OAAV,CAAiBZ,GAAI6S,KAErB,eAACpM,GAAA,EAASoN,KAAV,WACI,cAACpN,GAAA,EAASC,KAAV,CAAe2I,SAAS,OAAxB,kBACA,cAAC5I,GAAA,EAASC,KAAV,CAAe2I,SAAS,SAAxB,4BAIZ,cAAC+D,EAAD,CACI7P,GAAI,GAAIqO,GAAI,GAAID,GAAI,GAAID,GAAI,GAC5BxP,KAAK,OACL3J,MAAOuL,EAAKgQ,KACZ7C,UAAWiC,IAAWpP,EAAKzG,GAC3B4I,OAAQqN,EACRzB,OAAQ,kBAAMsB,EAAU,OAN5B,SAQKrP,EAAKgQ,SA3BoBhQ,EAAKzG,Q,UCdpC0W,OA9Bf,YAUI,IATA3M,EASD,EATCA,KACA4M,EAQD,EARCA,QACAC,EAOD,EAPCA,gBACAC,EAMD,EANCA,iBACA5R,EAKD,EALCA,SACAoH,EAID,EAJCA,QACAnK,EAGD,EAHCA,OACA4U,EAED,EAFCA,WAED,IADCC,cACD,MADU,KACV,EACC,OACI,eAACC,GAAA,EAAD,CAAOjN,KAAMA,EAAMkN,OAAQ5K,EAA3B,UACI,cAAC2K,GAAA,EAAMrE,OAAP,CAAcuE,aAAW,EAAzB,SACI,cAACF,GAAA,EAAMhO,MAAP,UAAc2N,GAAoB,OAEtC,cAACK,GAAA,EAAMjO,KAAP,UAAa7G,EAAO,CAAEpJ,KAAMge,MAC5B,eAACE,GAAA,EAAMG,OAAP,WACI,cAACzU,EAAA,EAAD,CAAQG,QAAQ,YAAYgB,QAASwI,EAArC,SACKuK,GAAoC,UAEzC,cAAClU,EAAA,EAAD,CAAQG,QAAQ,UAAU4C,KAAK,SAASO,KAAM+Q,EAAQlT,QAASoB,EAA/D,SACK4R,GAAsC,kBCmB5CO,OA9Bf,WACI,MAA8Bhd,oBAAS,GAAvC,mBAAOid,EAAP,KAAgBC,EAAhB,KACA,EAAwBld,mBAAS,IAAjC,mBAAOtB,EAAP,KAAaye,EAAb,KAOMC,EAAO,WACTF,GAAW,IAef,MAAO,CACHvN,KAtBS,SAACjR,GACVye,EAAQze,GACRwe,GAAW,IAoBLG,gBAbc,SAACtd,GASrB,OAAO,cAAC,GAAD,2BAAeA,GAAf,IAAsB8K,SARR,SAACuN,GAClB,IAAM+D,EAAM/D,EACZ+D,EAAIpL,iBACJ,IAAM3K,EAAS+V,EAAIzK,OAAO9F,MA5BtC,SAA4B0R,GACxB,GAAuB,IAApBA,EAASxb,OAAc,MAAO,GACjC,IAAMsE,EAAS,GAMf,OAJAkX,EAAStb,SAAQ,SAAAub,GACbnX,EAAOmX,EAAM9S,MAAQ8S,EAAMzc,SAGxBsF,EAoBmCoX,CAAmBrB,EAAIzK,OAAO9F,KAAK6R,YAC3C,oBAAnB1d,EAAM8K,UAA2B9K,EAAM8K,SAAS,CAAEnM,OAAM0H,WAC/DgX,KAGiDzN,KAAMsN,EAASP,WAAYhe,EAAMuT,QAASmL,Q,gCCfxFM,OAdf,YAA0D,IAA7B/U,EAA4B,EAA5BA,MAAOgV,EAAqB,EAArBA,QAAY5d,EAAS,kBACrD,OACI,cAAC,GAAD,yBAAQ4I,MAAO,UAAYA,GAAW5I,GAAtC,IAA6CuJ,GAAG,QAAQsU,OAAO,MAAM9V,OAAQ,kBACzE,eAAC0B,EAAA,EAAD,WACKzJ,EAAM+H,QAAkC,oBAAjB/H,EAAM+H,QAAyB/H,EAAM+H,SAC7D,cAAC,EAAD,CAAYW,QAAQ,eAAeV,GAAI4V,EAAUA,EAAU,OAAS,QAApE,mC,OCgCDE,OAxCf,SAAqB9d,GACjB,MAAkCC,oBAAS,GAA3C,mBAAOoT,EAAP,KAAkB0K,EAAlB,KAeA,OACI,qCACI,oBAAIhV,UAAU,mBAAd,SAhBsB,WAC1B,IAAMyD,EAAQ,GAUd,OATAxM,EAAM6U,aAAe7U,EAAM6U,YAAY5S,SAAQ,SAAC+b,EAAYrR,GACxDH,EAAMrK,KACF,+BACI,+BAAO6b,EAAWvb,WAAiB,IACnC,mBAAGwG,KAAM+U,EAAWrf,KAAMsf,SAAUD,EAAWvb,SAA/C,sBAAsE,IACtE,wBAAQsG,UAAU,OAAOW,QAAS,kBAAM1J,EAAMwO,SAASwP,EAAWnY,KAAlE,sBAHJ,qBAAuB8G,QAOxBH,EAOK0R,KAGP7K,EACG,cAAC,GAAD,CACIpB,YAAajS,EAAMme,SACnBjL,WAAYlT,EAAMkT,WAClBhB,QAAS,WAAQ6L,GAAa,MAEhC,wBACEhV,UAAU,OACVW,QAAS,WAAQqU,GAAa,IAFhC,gC,OCkDHK,OA7Ef,SAA8Bpe,GAC1B,OACI,cAAC,KAAD,CACI+K,cAAe,CACXnC,MAAO5I,EAAMqe,aACb1T,YAAa3K,EAAMse,mBACnBtK,SAAUhU,EAAMue,gBAChBtK,SAAUjU,EAAMwe,iBAEpB1T,SAAU,SAACzE,GACPrG,EAAM8K,SAASzE,IAEnB2E,iBAAkBJ,GAVtB,SAYK,kBACG,eAAC,KAAD,CAAM/E,GAAG,kBAAT,UACI,cAACsF,GAAA,EAAD,CAAKpC,UAAU,+BAAf,SACI,eAACqC,GAAA,EAAD,WACI,cAAC,KAAD,CAAOV,KAAK,QAAQY,KAAK,OAAOvC,UAAU,eAC1C,sBAAMA,UAAU,aAAhB,SACI,cAAC,KAAD,CAAc2B,KAAK,iBAK/B,eAACS,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAKW,GAAI,EAAGqO,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAA9B,SACI,uBAAO7O,QAAQ,cAAf,2BAEJ,eAACD,GAAA,EAAD,CAAKW,GAAI,EAAGqO,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAA9B,UACI,cAAC,KAAD,CAAOxP,KAAK,cAAclC,GAAG,WAAWO,UAAU,eAClD,sBAAMA,UAAU,aAAhB,SACI,cAAC,KAAD,CAAc2B,KAAK,cAAc3B,UAAU,uBAKvD,eAACoC,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAKW,GAAI,EAAGqO,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAA9B,SACI,uBAAO7O,QAAQ,WAAf,wBAEJ,eAACD,GAAA,EAAD,CAAKW,GAAI,EAAGqO,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAA9B,UACI,eAAC,KAAD,CAAOxP,KAAK,WAAWlC,GAAG,SAASO,UAAU,aAA7C,UACI,wBAAQhI,MAAM,MAAd,iBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,QAAd,sBAEJ,sBAAMgI,UAAU,aAAhB,SACI,cAAC,KAAD,CAAc2B,KAAK,WAAW3B,UAAU,uBAKpD,eAACoC,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAKW,GAAI,EAAGqO,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAA9B,SACI,uBAAO7O,QAAQ,WAAf,wBAEJ,eAACD,GAAA,EAAD,CAAKW,GAAI,EAAGqO,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAA9B,UACI,eAAC,KAAD,CAAOxP,KAAK,WAAWlC,GAAG,SAASO,UAAU,aAA7C,UACI,wBAAQhI,MAAM,UAAd,qBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,WAAd,yBAEJ,sBAAMgI,UAAU,aAAhB,SACI,cAAC,KAAD,CAAc2B,KAAK,WAAW3B,UAAU,8B,sBCwNzD0V,OAlRf,YAAoD,IAA5B5b,EAA2B,EAA3BA,MAAO4L,EAAoB,EAApBA,OAAWzO,EAAS,kBACzChC,EAAOiD,IACb,EAAsDE,EAAY,iBAAD,OAC5CnB,EAAMuU,MAAMC,OAAO7R,UADyB,mBACL3C,EAAMuU,MAAMC,OAAO1R,QADd,gBAE7D9E,EAAKc,KAAOd,EAAKc,KAAKJ,MAAQ,KAC9BmE,EAAM2E,mBAHV,mBAAOqN,EAAP,KAAoC6J,GAApC,WAKA,EAAgCvd,EAAY,iBAAD,OACtBnB,EAAMuU,MAAMC,OAAO7R,UADG,mBACiB3C,EAAMuU,MAAMC,OAAO1R,QADpC,aAEvC9E,EAAKc,KAAOd,EAAKc,KAAKJ,MAAQ,MAFlC,mBAAOqd,EAAP,KAAiB4C,EAAjB,KAIA,EAAgC1e,oBAAS,GAAzC,mBAAO2e,EAAP,KAAiBC,EAAjB,KACA,EAAsF5B,KAAxE6B,EAAd,EAAQlP,KAAmDmP,EAA3D,EAA0CzB,gBAEpC0B,EAAazF,GAASnO,KAAK,UAE3BtE,EAAe,uCAAG,WAAOT,GAAP,eAAA5F,EAAA,sDAEpB,IAAQ8M,KAAOlH,EACRA,EAAOkH,KAAS1K,EAAM0K,WAAalH,EAAOkH,GAH7B,gBAKdkB,EAAOzO,EAAMuU,MAAMC,OAAO7R,UAAWE,EAAMgD,GAAIQ,GALjC,OAOpBwY,GAAY,GAPQ,2CAAH,sDAUfI,EAAgB,uCAAG,WAAOlO,GAAP,iBAAAtQ,EAAA,6DACrBsQ,EAAEC,iBACIkO,EAAcnO,EAAEY,OAAO,GAAG5Q,MAFX,SAGIgD,EAAUM,WAAWrE,EAAMuU,MAAMC,OAAO7R,UAAWE,EAAMgD,GAAIqZ,EAAalhB,EAAKc,KAAKJ,OAHxF,OAGfygB,EAHe,OAIrBR,GAAY,SAAA9c,GACR,IAAMka,EAAWla,EAAKlD,KAAK8G,QAE3B,OADAsW,EAAS5Z,KAAKgd,GACP,2BAAKtd,GAAZ,IAAkBlD,KAAMod,OAETqD,SAASC,cAAc,oBAC/Bte,MAAQ,GAVE,2CAAH,sDAahBue,EAAmB,uCAAG,6BAAA7e,EAAA,6DAAS9B,EAAT,EAASA,KACjCO,QAAQC,IAAI,mBAAoBR,GADR,SAElBoF,EAAUQ,cAAcvE,EAAMuU,MAAMC,OAAO7R,UAAWE,EAAMgD,GAAIlH,EAAK0E,UAAWrF,EAAKc,KAAKJ,OAFxE,OAGxBigB,GAAY,SAAA9c,GACR,IAAMka,EAAWla,EAAKlD,KAAK8G,QACrB8Z,EAAaxD,EAASpW,WAAU,SAAAxC,GAAO,OAAIA,EAAQ0C,KAAOlH,EAAK0E,aAErE,OADmB,IAAhBkc,GAAmBxD,EAASjW,OAAOyZ,EAAY,GAC3C,2BAAK1d,GAAZ,IAAkBlD,KAAMod,OAPJ,2CAAH,sDAWnBD,EAAiB,uCAAG,WAAOzY,EAAW6b,GAAlB,eAAAze,EAAA,sEACAsD,EAAUO,cAC5BtE,EAAMuU,MAAMC,OAAO7R,UACnBE,EAAMgD,GACNxC,EACA6b,EAAY5C,KACZte,EAAKc,KAAKJ,OANQ,OAChByE,EADgB,OAQtBwb,GAAY,SAAA9c,GACR,IAAMka,EAAWla,EAAKlD,KAAK8G,QACrB8Z,EAAaxD,EAASpW,WAAU,SAAAxC,GAAO,OAAIA,EAAQ0C,KAAOxC,KAEhE,OADA0Y,EAASwD,GAAcpc,EAChB,2BAAKtB,GAAZ,IAAkBlD,KAAMod,OAZN,2CAAH,wDAgBjByD,EAAsC,eAAjB3c,EAAMK,OAA2B,eACtC,SAAjBL,EAAMK,OAAqB,gBACV,eAAjBL,EAAMK,OAA2B,cAClCL,EAAMK,OAQV,OACI,qCACI,cAAC,GAAD,CAAmB0F,MAAO/F,EAAM+F,MAAOb,OAAQ,WAC3C,OACI,qCACI,cAACQ,EAAA,EAAD,CACIQ,UAAU,aACVW,QAAS,WAAQ1J,EAAMyf,QAAQC,UAFnC,gCAICd,GACG,qCACI,cAACrW,EAAA,EAAD,CACIG,QAAQ,eACRK,UAAU,OACV8C,KAAK,kBACLP,KAAK,SAJT,kBASA,cAAC/C,EAAA,EAAD,CACIG,QAAQ,eACRK,UAAU,OACVW,QAAS,kBAAMmV,GAAY,IAH/B,wBASND,GACE,cAACrW,EAAA,EAAD,CACIG,QAAQ,eACRK,UAAU,OACVW,QAAS,WAAQmV,GAAY,IAHjC,wBAWhB,eAACnT,GAAA,EAAD,CAAW3C,UAAU,eAAe4C,OAAK,EAAzC,UACI,cAACoT,EAAD,CACIvC,QAAQ,iBACRC,gBAAgB,SAChBC,iBAAiB,SACjB5R,SAAUwU,EACVvX,OAAQ,kBAAc,uDAAd,EAAGpJ,KAAyE0E,UAAY,OAEnGub,EACG,cAAC,GAAD,CACIP,aAAcxb,EAAM+F,MACpB0V,mBAAoBzb,EAAM8H,YAC1B4T,gBAAiB1b,EAAMmR,SACvBwK,gBAAiB3b,EAAMoR,SACvBnJ,SAAUhE,IAGd,qCACI,cAACqE,GAAA,EAAD,CAAKpC,UAAU,+BAAf,SACI,6BAAKlG,EAAM+F,UAGf,eAACuC,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAKW,GAAI,EAAGqO,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAA9B,yBACA,cAAC9O,GAAA,EAAD,CACI5C,GAAG,IAAIuD,GAAI,EAAGqO,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAChCxP,KAAK,cAFT,SAIK7H,EAAM8H,iBAIf,eAACQ,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAKW,GAAI,EAAGqO,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAA9B,sBACA,cAAC8E,EAAD,CACIxW,GAAG,IAAIuD,GAAI,EAAGqO,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAChCnZ,MAAO8B,EAAMmR,SACbtJ,KAAK,WACL+D,OAAQ3H,EACR4T,QAAS,CAAC,MAAO,UAAW,OAAQ,SALxC,SAOK7X,EAAMmR,cAIf,eAAC7I,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAKW,GAAI,EAAGqO,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAA9B,sBACA,cAAC8E,EAAD,CACIxW,GAAG,IAAIuD,GAAI,EAAGqO,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAChCnZ,MAAO8B,EAAMoR,SACbvJ,KAAK,WACL+D,OAAQ3H,EACR4T,QAAS,CAAC,WAAY,OAAQ,UAAW,MAAO,WALpD,SAOK7X,EAAMoR,iBAMvB,eAAC9I,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAKW,GAAI,EAAGqO,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAA9B,oBACA,eAAC9O,GAAA,EAAD,CAAK5C,GAAG,IAAIuD,GAAI,EAAGqO,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAArC,UACKrX,EAAMK,OAEH,cAACqF,EAAA,EAAD,CACIQ,UAAU,OAAO4W,KAAK,KACtBC,OAAyB,aAAjB/c,EAAMK,QAA0C,WAAjBL,EAAMK,OAC7CwG,QAnHD,WACvB,MAAoB,eAAjB7G,EAAMK,OAAgClD,EAAM8V,SAAS,CAAEnT,UAAW3C,EAAMuU,MAAMC,OAAO7R,UAAWG,QAASD,EAAMgD,KAC9F,SAAjBhD,EAAMK,OAA0BlD,EAAM+V,QAAQ,CAAEpT,UAAW3C,EAAMuU,MAAMC,OAAO7R,UAAWG,QAASD,EAAMgD,KACpG7F,EAAMkS,QAAQ,CAAEvP,UAAW3C,EAAMuU,MAAMC,OAAO7R,UAAWG,QAASD,EAAMgD,MA6G3D,SAKK2Z,UAMjB,eAACrU,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAKW,GAAI,EAAGqO,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAA9B,wBACA,cAAC9O,GAAA,EAAD,CAAK5C,GAAG,IAAIuD,GAAI,EAAGqO,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAArC,SAAyCU,GAA6B,IAAIqB,KAAKpZ,EAAMqZ,YAAYC,iBAGrG,eAAChR,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAKW,GAAI,EAAGqO,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAA9B,wBACA,cAAC9O,GAAA,EAAD,CAAK5C,GAAG,IAAIuD,GAAI,EAAGqO,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAArC,SAAyCrX,EAAMmZ,aAGnD,eAAC7Q,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAKW,GAAI,EAAGqO,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAA9B,yBACA,cAAC9O,GAAA,EAAD,CAAK5C,GAAG,IAAIuD,GAAI,EAAGqO,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAArC,SAAyCrX,EAAM0T,SAAW1T,EAAM0T,SAAW,kBAG/E,eAACpL,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAKW,GAAI,EAAGqO,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAA9B,yBACA,cAAC9O,GAAA,EAAD,CAAK5C,GAAG,IAAIuD,GAAI,EAAGqO,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAArC,SAA0CrX,EAAMgd,UAAajF,GAA6B,IAAIqB,KAAKpZ,EAAMgd,WAAW1D,YAAc,WAGtI,eAAChR,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAKW,GAAI,EAAGqO,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAA9B,gCACA,cAAC9O,GAAA,EAAD,CAAK5C,GAAG,IAAIuD,GAAI,EAAGqO,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAArC,SAA0CrX,EAAMid,UAAalF,GAA6B,IAAIqB,KAAKpZ,EAAMid,WAAW3D,YAAc,WAGtI,eAAChR,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAKW,GAAI,EAAGqO,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAA9B,yBACA,cAAC9O,GAAA,EAAD,CAAKW,GAAI,EAAGqO,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAAGrU,GAAG,sBAApC,SACI,cAAC,GAAD,CACIgP,YAAaA,EAAYlW,KACzBwf,SAAU,SAAC3L,EAAMI,GAAP,OACN5S,EAAM2U,0BACF3U,EAAMuU,MAAMC,OAAO7R,UACnBE,EAAMgD,GACN2M,EACAI,IAGRM,WAAY,SAAC1L,GACTtI,QAAQC,IAAIqI,GACZxH,EAAM+U,gBACF/U,EAAMuU,MAAMC,OAAO7R,UACnBE,EAAMgD,GACN2B,GAEJkX,YAMhB,cAAC,EAAD,CAAY1W,GAAE,UAAKnF,EAAMgD,GAAX,QAAqBkD,UAAU,OAA7C,4BAEA,eAACoC,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAKW,GAAI,EAAGqO,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAA9B,SACI,cAAC3R,EAAA,EAAD,CAAQG,QAAQ,kBAAkB4C,KAAK,SAASO,KAAK,cAArD,2BAEJ,cAACT,GAAA,EAAD,CAAKW,GAAI,EAAGqO,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAA9B,SACI,cAAC6F,GAAA,EAAD,CAAMla,GAAG,cAAciF,SAAUmU,EAAjC,SACI,cAACc,GAAA,EAAKC,MAAN,CAAYC,UAAU,UAAtB,SACI,cAACF,GAAA,EAAKG,QAAN,CAAc1X,GAAG,WAAW2X,YAAY,2BAMxD,eAAChV,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAKW,GAAI,EAAGqO,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAA9B,sBACA,cAAC,GAAD,CACI6B,SAAUA,EAASpd,KACnB8P,OAAQqN,EACRtN,SAAUsQ,cCxR5BsB,GAAW,qBAEV,SAASC,GAAqB7L,GACjC5V,aAAaC,QAAQuhB,GAAUE,KAAKC,UAAU/L,IC0BnCgM,OA1Bf,SAAuBC,GACnB,MAAoCxgB,mBAASwgB,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAsBA,OAnBApgB,qBAAU,WACN,IAAMqgB,EDDHN,KAAKO,MAAMjiB,aAAaK,QAAQmhB,KCE/BQ,EAGAD,EAAcC,GAFdP,GAAqBI,KAK1B,IAGHlgB,qBAAU,WACN8f,GAAqBK,KACtB,CAACA,IAMG,CAACA,EAJR,SAAsBI,EAAO/f,GACzB4f,GAAc,SAAA9e,GAAI,kCAAUA,GAAV,mBAAiBif,EAAQ/f,UCGpCggB,OAvBf,YAA2F,IAArEnE,EAAoE,EAApEA,OAAQoE,EAA4D,EAA5DA,UAAWC,EAAiD,EAAjDA,YAAaC,EAAoC,EAApCA,QAASnW,EAA2B,EAA3BA,cAAeD,EAAY,EAAZA,SACpEqW,EAAgBF,EAAY1e,KAAI,SAAC+J,EAAMK,GAAP,OAClC,wBAAQ9G,GAAE,gBAAW8G,GAA4B5L,MAAOuL,EAAKzG,GAA7D,SAAkEyG,EAAK4U,IAAvE,gBAA0CvU,OAG9C,OACI,cAAC,KAAD,CACI5B,cAAeA,EACfD,SAAUA,EAFd,SAIK,WACG,OACI,cAAC,KAAD,CAAMjF,GAAI+W,EAAV,SACI,cAAC,KAAD,CAAOlS,KAAMsW,EAAWxY,GAAG,SAA3B,SACK2Y,U,UCCdC,OAff,SAAsBphB,GAMlB,OACI,eAAC+f,GAAA,EAAD,CAAMsB,QAAM,EAACC,YAAU,EAACxW,SANP,SAACiG,GAClBA,EAAEC,iBACFhR,EAAM8K,SAASiG,EAAEY,OAAO4P,WAAWxgB,QAIagI,UAAW/I,EAAM+I,UAAjE,UACI,cAACyY,GAAA,EAAD,CAAalW,KAAK,OAAOZ,KAAK,SAASyV,YAAY,SAASpX,UAAU,YACtE,cAACR,EAAA,EAAD,CAAQ+C,KAAK,SAAS5C,QAAQ,eAA9B,wB,uCCWG+Y,OApBf,YAA2D,IAAnCC,EAAkC,EAAlCA,WAAYnK,EAAsB,EAAtBA,SAAavX,EAAS,kBACtD,OACI,cAAC+O,GAAA,EAAD,CAAa4S,QAAM,EAAC5Y,UAAU,OAA9B,SACC/I,EAAM4hB,QAAU5hB,EAAM4hB,OAAOrf,KAAI,SAACsf,EAAOlV,GAAR,OAChC,cAAC,KAAD,CAEErB,KAAK,QACL5C,QAAQ,YACRgC,KAAK,QACL3J,MAAO8gB,EAAM9gB,MACb+V,QAAS4K,IAAeG,EAAM9gB,MAC9B2Q,SAAU,SAACX,GAAD,OAAOwG,EAASxG,EAAE+Q,cAAc/gB,QAP5C,SASG8gB,EAAMnX,MARFiC,S,kBCRIoV,G,WACjB,WAAYC,GAAc,qBACtBC,KAAKlO,cAAgBiO,E,wCAGzB,SAAIE,GACA,GAAiC,IAA9BD,KAAKlO,cAAchS,OACtB,OAAOkgB,KAAKlO,cAAcoO,MAAK,SAAAC,GAAM,OAAIA,EAAOvc,KAAOqc,S,KC6DlDG,GAAmB,SAACC,EAAWC,EAAcC,EAASC,EAAYC,GAC3E,IAAIpa,EAAO,GACX,OAAOga,GACH,IAAK,SACDha,GAAQia,EAAahkB,SACrB+J,GAAQ,yBACRA,GAAQka,EACR,MACJ,IAAK,SACDla,GAAQia,EAAahkB,SACrB,IAFJ,EAEUokB,EA1BC,SAACC,EAASC,GAKzB,IAJA,IAAMC,EAAWxC,KAAKO,MAAM+B,GACtBG,EAAWzC,KAAKO,MAAMgC,GAEtBF,EAAU,GAChB,MAFa3b,OAAOC,KAAK6b,GAEzB,eAAqB,CAAjB,IAAIvV,EAAG,KACJuV,EAASvV,KAASwV,EAASxV,KAC1BoV,EAAQpV,GAAO,CACXqV,QAASE,EAASvV,GAClBsV,QAASE,EAASxV,KAI9B,OAAOoV,EAaiBK,CAAWP,EAAYC,GACjCO,EAAcjc,OAAOC,KAAK0b,GAAS9V,QAAO,SAAAU,GAAG,MAAY,eAARA,GAAgC,cAARA,KAC3EsD,EAAI,EAJZ,eAKmBoS,GALnB,IAKI,IAAI,EAAJ,qBAA4B,CAAC,IAArB1V,EAAoB,QACDjF,GAAZ,aAARiF,EAA4B,wBAClB,gBAAkBA,EAAM,iBACrCjF,GAAQ,QAAUqa,EAAQpV,GAAKsV,QAAU,IACzCva,KAAWuI,EAAIoS,EAAYlhB,OAAU,QAAU,IATvD,8BAWIuG,GAAQ,MAAQka,EAChB,MACJ,IAAK,SACDla,GAAQia,EAAahkB,SACrB+J,GAAQ,yBACRA,GAAQka,EAKhB,OAAOla,GClEI4a,OAvBf,SAAkBljB,GACd,IAAMhC,EAAOiD,IACb,EAAgBE,EAAY,iBAAD,OACNnB,EAAMuU,MAAMC,OAAO7R,UADb,mBACiC3C,EAAMuU,MAAMC,OAAO1R,QADpD,YAEvB9E,EAAKc,KAAOd,EAAKc,KAAKJ,MAAQ,MAF3BS,EAAP,oBAcA,OACI,cAACuM,GAAA,EAAD,CAAWC,OAAK,EAAhB,SACI,cAAC,GAAD,CAAMoC,UAAW5O,EAAIR,KAAMoJ,OAXb,SAACuE,GACnB,IAAIA,IAAStM,EAAM+T,eAAgD,IAA/B/T,EAAM+T,cAAchS,OAAc,OAAO,KAC7E,IAAMohB,EAAOvI,GAA6B,IAAIqB,KAAK3P,EAAK8W,WAAWjH,YAE7DkH,EADa,IAAItB,GAAW/hB,EAAM+T,eACX3U,IAAIkN,EAAK+W,WAChC/a,EAAO+Z,GAAiB/V,EAAKgX,OAAQD,EAAWF,EAAM7W,EAAKsW,QAAStW,EAAKuW,SAC/E,OAAO,8BAAMva,U,cCAfib,GAAqB,CACvBvP,SAAU,CACNyE,KAAK,EACLC,SAAS,EACTC,MAAM,EACNC,OAAO,GAEX3E,SAAU,CACN6E,UAAU,EACVC,MAAM,EACNC,SAAS,EACTC,KAAK,EACLC,SAAS,GAEbhW,OAAQ,CACJiW,YAAY,EACZf,MAAM,EACNgB,YAAY,EACZC,UAAU,EACVC,QAAQ,IA4LDkK,OAxLf,YAA+C,IAArBvd,EAAoB,EAApBA,OAAWjG,EAAS,kBACpChC,EAAOiD,IACPyO,EAAqBO,KAC3B,EAA0B9O,EAAY,iBAAD,OAChBnB,EAAMuU,MAAMC,OAAO7R,UADH,kBAEjC3E,EAAKc,KAAOd,EAAKc,KAAKJ,MAAQ,MAF3BqV,EAAP,oBAIA,EAAkFkJ,KAApEwG,EAAd,EAAQ7T,KAAiD8T,EAAzD,EAAwCpG,gBACxC,EAAkFL,KAApE0G,EAAd,EAAQ/T,KAAiDgU,EAAzD,EAAwCtG,gBACxC,EAAgFL,KAAlE4G,EAAd,EAAQjU,KAAgDkU,EAAxD,EAAuCxG,gBACvC,EAAgFL,KAAlE8G,EAAd,EAAQnU,KAAgDoU,EAAxD,EAAuC1G,gBACvC,EAAuCkD,GAAc,CAAE1I,MAAO,OAAQlC,MAAO,WAAY/I,OAAQ0W,GAAoBU,OAAQ,KAA7H,mBAAOvD,EAAP,KAAmBwD,EAAnB,KACA,EAAkCjkB,mBAAS,KAA3C,mBAAOkkB,EAAP,KAAkBC,EAAlB,KAEMC,EAAwB,SAACC,GAC3BF,EAAaE,IAGX1d,EAAiB,uCAAG,6BAAAnG,EAAA,6DAAS9B,EAAT,EAASA,KAAT,SAChBqB,EAAMwO,SAAS7P,EAAKgE,UAAWhE,EAAKmE,SADpB,OAEtB4M,EAAmBI,yBAAyB,+BAFtB,2CAAH,sDAKjB3I,EAAiB,uCAAG,+BAAA1G,EAAA,6DAAS9B,EAAT,EAASA,KAAM0H,EAAf,EAAeA,OAAf,SAChBrG,EAAM8V,SAASnX,EAAKgE,UAAWhE,EAAKmE,QAASuD,EAAOxB,gBADpC,OAEtB6K,EAAmBI,yBAAyB,gCAFtB,2CAAH,sDAKjB1I,EAAgB,uCAAG,6BAAA3G,EAAA,6DAAS9B,EAAT,EAASA,KAAT,SACfqB,EAAM+V,QAAQpX,EAAKgE,UAAWhE,EAAKmE,SADpB,OAErB4M,EAAmBI,yBAAyB,+CAFvB,2CAAH,sDAKhBzI,EAAgB,uCAAG,+BAAA5G,EAAA,6DAAS9B,EAAT,EAASA,KAAM0H,EAAf,EAAeA,OAAf,SACfrG,EAAMkS,QAAQvT,EAAKgE,UAAWhE,EAAKmE,QAASuD,EAAOnD,QADpC,OAErBwM,EAAmBI,yBAAyB,oBAFvB,2CAAH,sDAKtB,OACI,qCACI,cAAC4T,EAAD,CACIlH,QAAQ,eACRE,iBAAiB,SACjB5R,SAAUlE,EACVmB,OAAQ,kBACJ,+CADI,EAAGpJ,KAC+CmE,WAG9D,cAAC8gB,EAAD,CACIpH,QAAQ,eACRE,iBAAiB,SACjBE,OAAO,wBACP9R,SAAU3D,EACVY,OAAQ,kBACJ,cAAC,GAAD,CACI6U,OAAO,wBACPoE,UAAU,iBACVjW,cAAe,CAAE,eAAkB,IACnCkW,YAAalN,EAAcpV,KAC3BuiB,QAAQ,gBAIpB,cAAC4C,EAAD,CACItH,QAAQ,cACRE,iBAAiB,UACjB5R,SAAU1D,EACVW,OAAQ,kBAAc,8CAAd,EAAGpJ,KAAgEmE,QAAU,kEAEzF,cAACkhB,EAAD,CACIxH,QAAQ,iBACRE,iBAAiB,WACjBE,OAAO,kBACP9R,SAAUzD,EACVU,OAAQ,kBACJ,qCACI,4FACA,cAAC,GAAD,CACI6U,OAAO,kBACPoE,UAAU,SACVjW,cAAe,CAAE,OAAU,IAC3BkW,YAAa,CAAC,CAAE/d,OAAQ,UAAY,CAAEA,OAAQ,aAC9Cge,QAAQ,iBAKxB,eAAC,IAAD,WACI,cAAC,IAAD,CAAO9f,KAAMpB,EAAMuU,MAAMnT,KAAMmjB,OAAK,EAACxc,OAAQ,kBACzC,qCACI,cAAC,GAAD,CAAaA,OAAQ,kBACjB,qCACI,cAACQ,EAAA,EAAD,CACIQ,UAAU,aACVL,QAAQ,kBACRgB,QAAS,WAAQ1J,EAAMyf,QAAQtd,KAAK,cAHxC,8BAOA,8CACA,cAAC,GAAD,CACIuf,WAAYyC,EACZvC,OAAQ,CACJ,CAAElX,KAAM,OAAQ3J,MAAO,KACvB,CAAE2J,KAAM,QAAS3J,MAAO,MAE5BwW,SAAU8M,IAEd,cAAC,GAAD,CACItb,UAAU,aACV+B,SAAU,SAACgC,GAAiBoX,EAAiB,SAAUpX,MAE3D,cAAC,GAAD,CACI/D,UAAU,kBACVsO,QAASqJ,EAAW7T,OACpB0K,SAAU2M,UAItB,cAAC,GAAD,CACIvhB,UAAW3C,EAAMuU,MAAMC,OAAO7R,UAC9BoR,cAAeA,EAAcpV,KAC7BgY,UAAW1Q,EACX2Q,OAAQuN,EAERtW,QAAS6S,EAAW9K,MACpB3H,QAASyS,EAAW5I,MACpBjL,OAAQ6T,EAAW7T,OACnBC,WAAY4T,EAAWuD,OACvBlX,WAAY,CAAC,QAAS,eAEtByB,SAAUiV,EACV3N,SAAU6N,EACV5N,QAAS8N,EACT3R,QAAS6R,UAIrB,cAAC,IAAD,CAAO3iB,KAAI,UAAKpB,EAAMuU,MAAMnT,KAAjB,aAAkCmjB,OAAK,EAACxc,OAAQ,SAACyc,GACxD,IAAM3d,EAAWZ,EAAON,WAAU,SAAA8e,GAAG,OAAIA,EAAI5e,KAAOc,OAAO6d,EAAYjQ,MAAMC,OAAO1R,YAC9ED,GAAuB,IAAdgE,EAAmBZ,EAAOY,GAAY,KACrD,GAAIhE,EACJ,OACI,mCACI,cAAC,GAAD,2BACQ2hB,GADR,IAEI3hB,MAAOA,EACPkR,cAAeA,EAAcpV,KAC7B8P,OAAQzO,EAAMyO,OACdD,SAAUiV,EACV3N,SAAU6N,EACV5N,QAAS8N,EACT3R,QAAS6R,EACTpP,0BAA2B3U,EAAM2U,0BACjCI,gBAAiB/U,EAAM+U,wBAKvC,cAAC,IAAD,CAAO3T,KAAI,UAAKpB,EAAMuU,MAAMnT,KAAjB,iBAAsCmjB,OAAK,EAACxc,OAAQ,SAACyc,GAC5D,IAAM3d,EAAWZ,EAAON,WAAU,SAAA8e,GAAG,OAAIA,EAAI5e,KAAOc,OAAO6d,EAAYjQ,MAAMC,OAAO1R,YAC9ED,GAAuB,IAAdgE,EAAmBZ,EAAOY,GAAY,KAC/C6d,EAAWF,EAAYjQ,MAAMoQ,IAAI3M,MAAM,KAE7C,GADA0M,EAASE,MAAOF,EAASE,MACrB/hB,EACJ,OACI,qCACI,cAAC,GAAD,CAAmB+F,MAAO/F,EAAM+F,MAAOgV,QAAS8G,EAASG,KAAK,KAAM9c,OAAQ,WACxE,OACI,cAACQ,EAAA,EAAD,CACIQ,UAAU,aACVW,QAAS,WAAQ1J,EAAMyf,QAAQC,UAFnC,sCAMR,cAAC,GAAD,aAAU3L,cAAeA,EAAcpV,MAAU6lB,iB,eCnI9DM,OA7Ef,YAA8C,IAArBlgB,EAAoB,EAApBA,QAAY5E,EAAQ,kBACnChC,EAAOiD,IACb,EAA0BE,EAAY,iBAAD,OAChBnB,EAAMuU,MAAMC,OAAO7R,UADH,kBAEjC3E,EAAKc,KAAOd,EAAKc,KAAKJ,MAAQ,MAF3BqV,EAAP,oBAIA,EAAgB5S,EAAY,iBAAD,OACNnB,EAAMuU,MAAMC,OAAO7R,UADb,YAEvB3E,EAAKc,KAAOd,EAAKc,KAAKJ,MAAQ,MAF3BS,EAAP,oBAKM4lB,EAAUxL,GAASnO,KAAK,QACxBwQ,EAAWrC,GAASnO,KAAK,YAEzB4Z,EAAU,uCAAG,WAAOjkB,GAAP,eAAAN,EAAA,sEACMqE,EAAYE,cAAchF,EAAMuU,MAAMC,OAAO7R,UAAW3E,EAAKc,KAAKJ,MAAOqC,GAD/E,OACTqC,EADS,OAEflE,QAAQC,IAAIiE,GAFG,2CAAH,sDAkBhB,OACI,eAACsI,GAAA,EAAD,CAAWC,OAAK,EAAhB,UACQ,cAACR,GAAA,EAAD,CAAKpC,UAAU,yBAAf,SACI,cAACgc,EAAD,CAASvc,GAAG,KAAKzH,MAAO6D,EAAQ8F,KAAMA,KAAK,OAAO+D,OAAQuW,EAA1D,SACKpgB,EAAQ8F,SAIjB,cAACS,GAAA,EAAD,CAAKpC,UAAU,yBAAf,SACI,cAAC6S,EAAD,CAAUpT,GAAG,IAAIzH,MAAO6D,EAAQ+F,YAAaD,KAAK,cAAc+D,OAAQuW,EAAxE,SACKpgB,EAAQ+F,gBAIjB,cAACQ,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,CAAK5C,GAAG,KAAR,8BAIAuL,GAAiBA,EAAcpV,KAAK4D,KAAI,SAAC6f,EAAQ7U,GAC7C,OACI,eAACpC,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAK+D,MAAO,CAAE8V,UAAW,SAAzB,mBAAwC7C,EAAOtY,UAA/C,YAA4DsY,EAAOlY,YACnE,cAACkB,GAAA,EAAD,CAAK+D,MAAO,CAAE8V,UAAW,QAAzB,SAAoC7C,EAAO7jB,aAFrCgP,MAQtB,cAACpC,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,CAAK5C,GAAG,KAAR,uBAEJ,cAAC2C,GAAA,EAAD,CAAKgE,MAAO,CAAE+V,eAAgB,UAA9B,6BAAwDtgB,EAAQqB,QAAUrB,EAAQqB,OAAOlE,OAAzF,qCAEA,cAACoJ,GAAA,EAAD,CAAKgE,MAAO,CAAE+V,eAAgB,UAA9B,SACI,cAAC9Z,GAAA,EAAD,CAAK5C,GAAG,KAAR,4BAEJ,cAAC2C,GAAA,EAAD,CAAKgE,MAAO,CAAE+V,eAAgB,UAA9B,SACI,cAAC,GAAD,CAAMnX,UAAW5O,EAAIR,KAAMoJ,OAnDrB,SAACuE,GACnB,IAAIA,IAAStM,EAAM+T,eAAgD,IAA/B/T,EAAM+T,cAAchS,OAAc,OAAO,KAC7E,IAAMohB,EAAOvI,GAA6B,IAAIqB,KAAK3P,EAAK8W,WAAWjH,YAC7DgJ,EAAa,IAAIpD,GAAWhO,EAAcpV,MAC1C0kB,EAAY8B,EAAW/lB,IAAIkN,EAAK+W,WAC9Bxe,EAAmByb,KAAKO,MAAMvU,EAAKuW,SAAWvW,EAAKsW,SAAnD/d,eACF+d,EAAUtC,KAAKO,MAAMvU,EAAKsW,SAC1BC,EAAUvC,KAAKO,MAAMvU,EAAKuW,SAC1BuC,EAAeD,EAAW/lB,IAAIyF,GAC9ByD,EHvCoB,SAACga,EAAWC,EAAc8C,EAAiB7C,EAAS8C,GAClF,IAAIhd,EAAO,GACX,OAAOga,GACH,IAAK,eACDha,GAAQia,EAAahkB,SACrB+J,GAAQ,uBACRA,GAAQgd,EAAQzC,QAAQ/f,QACxBwF,GAAQ,wBACR,MACJ,IAAK,gBACDA,GAAQia,EAAahkB,SACrB+J,GAAQ,wBACRA,GAAQgd,EAAQzC,QAAQ/f,QACxBwF,GAAQ,wBACR,MACJ,IAAK,eACDA,GAAQia,EAAahkB,SACrB+J,GAAQ,uBACRA,GAAQgd,EAAQ1C,QAAQ9f,QACxBwF,GAAQ,wBACR,MACJ,IAAK,SACDA,GAAQia,EAAahkB,SACrB+J,GAAQ,0CACR,MACJ,IAAK,aACDA,GAAQia,EAAahkB,SACrB+J,GAAQ,UACRA,GAAQ+c,EAAgB9mB,SACxB+J,GAAQ,sBACR,MACJ,IAAK,gBACDA,GAAQia,EAAahkB,SACrB+J,GAAQ,YACRA,GAAQ+c,EAAgB9mB,SACxB+J,GAAQ,wBACR,MACJ,IAAK,SACDA,GAAQia,EAAahkB,SACrB+J,GAAQ,2BACR,MACJ,IAAK,SACDA,GAAQia,EAAahkB,SACrB+J,GAAQ,2BAMhB,OADAA,EAAQka,EGTS+C,CAAmBjZ,EAAKgX,OAAQD,EAAW+B,EAAcjC,EAAM,CAAEP,UAASC,YACvF,OAAO,8BAAMva,SA2CL,cAAC6C,GAAA,EAAD,QCwBDqa,OAxFf,YAAsC,IAAVjR,EAAS,EAATA,MAClBvW,EAAOiD,IACPqE,ECjBCpE,qBAAWkE,GDkBZsK,EAAqBO,KAC3B,EAA0B9O,EAAY,gBAAiBnD,EAAKc,KAAOd,EAAKc,KAAKJ,MAAQ,MAA9EqV,EAAP,oBACA,EAA+EkJ,KAAjEwI,EAAd,EAAQ7V,KAAmD8V,EAA3D,EAA0CpI,gBAC1C,EAA0FL,KAA5E0I,EAAd,EAAQ/V,KAAqDgW,EAA7D,EAA4CtI,gBAE5C,OACI,qCACI,cAACoI,EAAD,CACIlJ,QAAQ,iBACRC,gBAAgB,SAChBC,iBAAiB,SACjB5R,SAAQ,uCAAE,WAAOlG,GAAP,SAAAnE,EAAA,sEACA6E,EAASE,oBAAoBZ,GAD7B,OAEN8K,EAAmBI,yBAAyB,iCAFtC,2CAAF,sDAIR/H,OAAQ,kBAAc,yDAAd,EAAGpJ,KAA2EgE,UAAY,OAEtG,cAACijB,EAAD,CACIpJ,QAAQ,mBACRE,iBAAiB,MACjBE,OAAO,2BACP9R,SAAQ,uCAAE,WAAOnM,GAAP,SAAA8B,EAAA,sEACA6E,EAASc,sBAAsBzH,GAD/B,OAEN+Q,EAAmBI,yBAAyB,+CAFtC,2CAAF,sDAIR/H,OAAQ,kBACJ,cAAC,GAAD,CACI6U,OAAO,2BACPoE,UAAU,iBACVjW,cAAe,CAAE,eAAkB,IACnCkW,YAAalN,EAAcpV,KAC3BuiB,QAAQ,gBAIpB,eAAC,IAAD,WACI,cAAC,IAAD,CAAO9f,KAAMmT,EAAMoQ,IAAKJ,OAAK,EAACxc,OAAQ,kBAClC,qCACI,cAAC,GAAD,IACA,cAAC,GAAD,CACIuH,YAAahK,EAAS3G,KACtB6P,SAAUiX,EACVhX,OAAQnJ,EAASY,kBACjBwI,kBAAmBiX,UAI/B,cAAC,IAAD,CAAOvkB,KAAI,UAAKmT,EAAMoQ,IAAX,0BAAwCJ,OAAK,EAACxc,OAAQ,SAACyc,GAAD,OAC7D,cAAC,GAAD,2BACQA,GADR,IAEI1Z,SAAUxF,EAASgB,kBACnBqO,0BAA2BrP,EAASgC,6BACpCyN,gBAAiBzP,EAASiC,gCAGlC,cAAC,IAAD,CAAOnG,KAAI,UAAKmT,EAAMoQ,IAAX,sBAAoC5c,OAAQ,SAACyc,GACpD,IAAM/d,EAAanB,EAAS3G,KAAKgH,WAAU,SAAAe,GAAI,OAAIA,EAAKb,KAAOc,OAAO6d,EAAYjQ,MAAMC,OAAO7R,cACzFsD,GAA0B,IAAhBQ,EAAqBnB,EAAS3G,KAAK8H,GAAYR,OAAS,GACxE,OACI,cAAC,GAAD,2BACQue,GADR,IAEIve,OAAQA,EACRuI,SAAUlJ,EAASsB,kBACnBkP,SAAUxQ,EAAS6B,kBACnB4O,QAASzQ,EAAS8B,iBAClB8K,QAAS5M,EAAS+B,iBAClBoH,OAAQnJ,EAASwB,gBACjB6N,0BAA2BrP,EAASgC,6BACpCyN,gBAAiBzP,EAASiC,gCAItC,cAAC,IAAD,CAAOnG,KAAI,UAAKmT,EAAMoQ,IAAX,QAAsBJ,OAAK,EAACxc,OAAQ,SAACyc,GAAD,OAC3C,cAAC,GAAD,2BAAoBA,GAApB,IAAiC1Z,SAAUxF,EAASS,uBAExD,cAAC,IAAD,CAAO3E,KAAI,UAAKmT,EAAMoQ,IAAX,gBAA8BJ,OAAK,EAACxc,OAAQ,SAACyc,GACpD,IAAM5f,EAAUU,EAAS3G,KAAKwjB,MAAK,SAAAzb,GAAI,OAAIA,EAAKb,KAAOc,OAAO6d,EAAYjQ,MAAMC,OAAO7R,cACvF,GAAIiC,EACJ,OAAO,cAAC,GAAD,aAAgBA,QAASA,GAAa4f,c,OE/FlD,SAASqB,GAAS7lB,GAC7B,OACI,sBAAK+I,UAAU,YAAf,UACI,eAACoC,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAKW,GAAI,EAAGqO,GAAI,EAAG0L,EAAG,EAAG5L,GAAI,GAAInR,UAAU,QAA3C,0BACA,cAACqC,GAAA,EAAD,CAAKW,GAAI,EAAGqO,GAAI,EAAG0L,EAAG,EAAG5L,GAAI,GAAInR,UAAU,cAA3C,SAA2D/I,EAAMlB,KAAKgL,eAG1E,eAACqB,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAKW,GAAI,EAAGqO,GAAI,EAAG0L,EAAG,EAAG5L,GAAI,GAAInR,UAAU,QAA3C,yBACA,cAACqC,GAAA,EAAD,CAAKW,GAAI,EAAGqO,GAAI,EAAG0L,EAAG,EAAG5L,GAAI,GAAInR,UAAU,cAA3C,SAA2D/I,EAAMlB,KAAKoL,cAG1E,eAACiB,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAKW,GAAI,EAAGqO,GAAI,EAAG0L,EAAG,EAAG5L,GAAI,GAAInR,UAAU,QAA3C,yBACA,cAACqC,GAAA,EAAD,CAAKW,GAAI,EAAGqO,GAAI,EAAG0L,EAAG,EAAG5L,GAAI,GAAInR,UAAU,cAA3C,SAA2D/I,EAAMlB,KAAKP,cAG1E,eAAC4M,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAKW,GAAI,EAAGqO,GAAI,EAAG0L,EAAG,EAAG5L,GAAI,GAAGnR,UAAU,QAA1C,qBACA,cAACqC,GAAA,EAAD,CAAKW,GAAI,EAAGqO,GAAI,EAAG0L,EAAG,EAAG5L,GAAI,GAAGnR,UAAU,cAA1C,SAA0D/I,EAAMlB,KAAKqL,c,OCnBtE,SAAS4b,GAAmB/lB,GACvC,OACI,cAAC,KAAD,CACI+K,cAAe,CACXrL,gBAAiB,GACjBC,YAAa,GACb6K,mBAAoB,IAExBM,SAAQ,uCAAE,WAAOzE,EAAP,kBAAA5F,EAAA,6DAAiBwK,EAAjB,EAAiBA,gBACT,GADR,SAEAjL,EAAM8K,SAASzE,EAAO3G,gBAAiB2G,EAAO1G,aAF9C,OAGNsL,GAAc,GAHR,2CAAF,wDAKRD,iBAAkBT,GAXtB,SAaK,gBAAGW,EAAH,EAAGA,aAAH,OACG,eAAC,KAAD,CAAMnC,UAAU,OAAhB,UACI,eAACoC,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,UACI,uBAAOC,QAAQ,kBAAf,gCAEJ,eAACD,GAAA,EAAD,WACI,cAAC,KAAD,CAAOV,KAAK,kBAAkBY,KAAK,WAAWQ,aAAa,iBAC3D,uBAAM/C,UAAU,aAAhB,UACK/I,EAAMK,OAAS,8BAAML,EAAMK,MAAMtB,UAClC,cAAC,KAAD,CAAc2L,KAAK,6BAK/B,eAACS,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,UACI,uBAAOC,QAAQ,cAAf,4BAEJ,eAACD,GAAA,EAAD,WACI,cAAC,KAAD,CAAOV,KAAK,cAAcY,KAAK,WAAWQ,aAAa,iBACvD,sBAAM/C,UAAU,aAAhB,SACI,cAAC,KAAD,CAAc2B,KAAK,wBAK/B,eAACS,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,UACI,uBAAOC,QAAQ,qBAAf,oCAEJ,eAACD,GAAA,EAAD,WACI,cAAC,KAAD,CAAOV,KAAK,qBAAqBY,KAAK,WAAWQ,aAAa,QAC9D,sBAAM/C,UAAU,aAAhB,SACI,cAAC,KAAD,CAAc2B,KAAK,+BAK/B,cAACS,GAAA,EAAD,UACI,cAAC5C,EAAA,EAAD,CAAQG,QAAQ,UAAU4C,KAAK,SAASC,SAAUL,EAAlD,4BCjDT,SAAS8a,GAAgBhmB,GACpC,IAAMhC,EAAOiD,IAEPglB,EAAoB,uCAAG,WAAOvmB,EAAiBC,GAAxB,SAAAc,EAAA,sDACzBzC,EAAKyB,eAAeC,EAAiBC,EAArC,+BAAAc,EAAA,MAAkD,WAAOG,GAAP,SAAAH,EAAA,yDAC1CG,EAD0C,gCAEpC5C,EAAKuB,QAAO,kBAAMS,EAAMyf,QAAQtd,KAAK,iBAFD,6BAGvCjD,QAAQC,IAAIyB,GAH2B,2CAAlD,uDADyB,2CAAH,wDAS1B,OACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOQ,KAAMpB,EAAMuU,MAAMoQ,IAAKJ,OAAK,EAACxc,OAAQ,kBACxC,eAAC2D,GAAA,EAAD,CAAWC,OAAK,EAAC5C,UAAU,OAAOlD,GAAG,eAArC,UACI,cAACsF,GAAA,EAAD,CAAK3C,GAAG,KAAR,iCACA,cAAC2C,GAAA,EAAD,UACI,cAAC,GAAD,CAAUrM,KAAMd,EAAKc,SAEzB,eAACqM,GAAA,EAAD,WACI,qEACA,cAAC,IAAD,CAAMnD,GAAG,yBAAT,kBAA8C,aAK1D,cAAC,IAAD,CAAO5G,KAAMpB,EAAMuU,MAAMoQ,IAAM,kBAAmBJ,OAAK,EAACxc,OAAQ,kBAC5D,eAAC2D,GAAA,EAAD,CAAWC,OAAK,EAAC5C,UAAU,OAAOlD,GAAG,kBAArC,UACI,oDACA,cAACkgB,GAAD,CAAoBjb,SAAUmb,EAAsB5lB,MAAOrC,EAAKqC,iB,OCtCrE,SAAS6lB,GAAmBlmB,GACvC,IAAMmmB,EAASlW,KACf,OACI,qBAAKlH,UAAW,kCAAoCod,EAAOvW,KAAO,OAAS,IAA3E,SACI,qBAAK7G,UAAU,sBAAf,SACKod,EAAO7d,SCkCT8d,OA1Bf,WAEI,OACI,cAAC,IAAD,UACI,cAACrmB,EAAD,UACI,cAACsF,EAAD,UACI,eAACoK,GAAD,WACI,cAAC,GAAD,IACA,cAAC,GAAD,IACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAOrO,KAAK,SAASyG,UAAW2D,KAChC,cAAC,IAAD,CAAOpK,KAAK,UAAUyG,UAAWmE,KACjC,cAAC,EAAD,CAAc5K,KAAK,aAAayG,UAAWsE,KAC3C,cAAC,EAAD,CAAc/K,KAAK,YAAYyG,UAAW2d,KAC1C,cAAC,EAAD,CAAcpkB,KAAK,WAAWyG,UAAWme,KACzC,cAAC,EAAD,CAAc5kB,KAAK,IAAIyG,UAAWsE,kBCpB/Cka,OARf,WACE,OACE,qBAAKtd,UAAU,MAAf,SACE,cAAC,GAAD,OCKSud,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB3T,MAAK,YAAkD,IAA/C4T,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAAS/e,OACP,cAAC,IAAMgf,WAAP,UACE,cAAC,GAAD,MAEF3H,SAAS4H,eAAe,SAM1BV,O","file":"static/js/main.e3db836b.chunk.js","sourcesContent":["const authTokenKey = \"track_app_auth_token\";\n\nexport function setLocalAuthToken(token) {\n    localStorage.setItem(authTokenKey, token);\n}\n\nexport function getLocalAuthToken() {\n    return localStorage.getItem(authTokenKey);\n}\n\nexport function removeLocalAuthToken() {\n    localStorage.removeItem(authTokenKey);\n}","import axios from 'axios';\nimport { setLocalAuthToken, getLocalAuthToken, removeLocalAuthToken } from '../utility/local/authStorage';\n\nconst auth = {\n    isAuthenticated: false, \n    async login(credentials, cb) {\n        try{\n            const response = await axios.post(\n                '/api/auth/login', \n                { \n                    userName: credentials.userName, \n                    password: credentials.password \n                }\n            );\n            auth.isAuthenticated = true;\n            setLocalAuthToken(response.data.token);\n            cb({ ...response.data.user, token: response.data.token }, null);\n            return response.data;\n        } catch(err) {\n            auth.isAuthenticated = false;\n            cb(null, { message: err.response.data.message });\n        }\n    },\n    async tokenLogin(cb) {\n        const token = getLocalAuthToken();\n\n        if(!token) {\n            auth.isAuthenticated = false;\n            console.log(\"Token not found\");\n            cb(null);\n            return;\n        }\n\n        console.log(\"Token found\");\n        let response = null;\n        try {\n            response = await axios.get(\n                '/api/user/login',\n                { headers: { 'Authorization': `Bearer ${token}` } }\n            );\n            auth.isAuthenticated = true;\n            cb({ ...response.data, token }, null);\n        } catch(err) {\n            auth.isAuthenticated = false;\n            cb(null, { message: err.message });\n        }\n\n        return response;\n    },\n    async signup(user, cb) {\n        try {\n            const response = await axios.post(\n                '/api/auth/register',\n                { ...user }\n            );\n            console.log(response);\n            cb(response.data, null);\n            return response.data;\n        } catch(err) {\n            cb(null, { message: err.message });\n        }\n    },\n    async logout(cb) {\n        auth.isAuthenticated = false;\n        removeLocalAuthToken();\n        cb();\n    }, \n    async changePassword(currentPassword, newPassword, token, cb) {\n        try {\n            console.log(\"authApi\", { currentPassword, newPassword });\n            const response = await axios.patch(\n                '/api/user/changePassword',\n                { currentPassword, newPassword },\n                { headers: { 'Authorization': `Bearer ${token}` } }\n            );\n            console.log(response);\n            cb(null);\n            return response.data;\n        } catch(err) {\n            cb({ message: err.response.data.message });\n        }\n    }\n}\n\nexport default auth;","import React, { useState, useEffect, createContext } from 'react';\nimport authApi from '../api/auth';\n\nexport const authContext = createContext({ });\n\nexport default function ProvideAuth(props) {\n    const auth = useProvideAuth();\n\n    return (\n        <authContext.Provider value={auth}>\n            {props.children}\n        </authContext.Provider>\n    )\n}\n\nfunction useProvideAuth() {\n    const [user, setUser] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const loginWithToken = async () => {\n            await authApi.tokenLogin((user) => {\n                user ? console.log(\"Logged in as \" + user.userName) : console.log(\"Not logged in\");\n                setUser(user);\n                setError(null);\n                setIsLoading(false);\n            });\n        }\n        console.log(\"Logging in with token\");\n        setIsLoading(true);\n        loginWithToken();\n\n    }, []);\n\n    const signup = (userInfo, cb) => {\n        return authApi.signup(userInfo, (data) => {\n            console.log(data);\n            cb(data);\n        })\n    }\n\n    const login = (credentials, cb) => {\n        console.log(\"logging in\");\n        setIsLoading(true);\n        authApi.login(credentials, (user, error) => {\n            if(error) setError(error);\n            else {\n                setUser(user);\n                setError(null);\n                cb(user);\n            }\n        })\n        setIsLoading(false);\n    }\n\n    const logout = cb => {\n        return authApi.logout(() => {\n            setUser(null);\n            setError(null);\n            cb && cb();\n        });\n    }\n\n    const changePassword = (currentPassword, newPassword, cb) => {\n        return authApi.changePassword(currentPassword, newPassword, user.token, (err) => {\n            if(err) {\n                setError(err);\n                cb(err);\n            } else {\n                setError(null);\n                cb(null);\n            }\n        });\n    }\n\n    return {\n        user,\n        isLoading,\n        error,\n        signup,\n        login, \n        logout,\n        changePassword\n    }\n}","import { useContext } from \"react\";\nimport { authContext } from \"../contexts/AuthContext\";\n\nexport default function useAuth() {\n    return useContext(authContext);\n}","import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction useResource(path, authToken, forkedPaths = null) {\n    const [resource, setResource] = useState({\n        data: [],\n        isLoading: false,\n        isError: false\n    });\n\n    const [refresh, setRefresh] = useState(false);\n\n    const getResource = () => setRefresh(prev => !prev);\n\n    useEffect(() => {\n\n        const fetchResource = async () => {\n            setResource({ data: [], isLoading: true, isError: false });\n            try {\n                const headers = authToken ? { 'Authorization': `Bearer ${authToken}` } : {}\n                let response;\n                if(forkedPaths) {\n                    if(forkedPaths.length === 0) return setResource({ data: [], isLoading: false, isError: false });\n                    \n                    const promises = [];\n                    forkedPaths.forEach(fork => {\n                        promises.push(axios.get(path + \"/\" + fork, { headers }));\n                    });\n\n                    response = await Promise.all(promises);\n\n                    const responseData = response.map(res => ({\n                        filename: res.headers['content-filename'],\n                        data: res.data\n                    }));\n\n                    setResource({ data: responseData, isLoading: false, isError: false });\n                } else {\n                    response = await axios.get(path, { headers });\n                    setResource({ data: response.data, isLoading: false, isError: false });\n                }\n\n            } catch(err) {\n                console.log(err);\n                setResource({ data: err, isLoading: false, isError: true })\n            }\n        }\n\n        fetchResource();\n\n    }, [path, authToken, refresh]);\n\n    return [resource, setResource, getResource];\n}\n\nexport default useResource;","export function authHeader(authToken) {\n    return { 'Authorization': `Bearer ${authToken}`}\n}","import axios from 'axios';\nimport { authHeader } from './util';\n\nasync function createIssue(projectId, issueInfo, authToken) {\n    try {\n        const headers = authHeader(authToken)\n        const issue = await axios.post(`/api/projects/${projectId}/issues`, issueInfo, { headers });\n        return issue.data;\n    } catch(err) {\n        console.log(err);\n    }\n}\n\nasync function updateIssue(projectId, issueId, update, authToken) {\n    try {\n        const headers = authHeader(authToken);\n        const issue = await axios.patch(`/api/projects/${projectId}/issues/${issueId}`, update, { headers });\n        return issue.data;\n    } catch(err) {\n        console.log(err);\n    }\n}\n\nasync function deleteIssue(projectId, issueId, authToken) {\n    try {\n        const headers = authHeader(authToken);\n        const issue = await axios.delete(`/api/projects/${projectId}/issues/${issueId}`, { headers });\n        return issue.data;\n    } catch(err) {\n        console.log(err);\n    }\n}\n\nasync function assignIssue(projectId, issueId, assigneeId, authToken) {\n    try {\n        const headers = authHeader(authToken);\n        const issue = await axios.patch(\n            `/api/projects/${projectId}/issues/${issueId}/assign`,\n            { assigneeId },\n            { headers }\n        )\n        return issue.data;\n    } catch(err) {\n        console.log(err);\n    }\n}\n\nasync function advanceIssue(projectId, issueId, status, authToken) {\n    try {\n        const headers = authHeader(authToken);\n        const issue = await axios.patch(\n            `/api/projects/${projectId}/issues/${issueId}/advance`,\n            { status },\n            { headers }\n        )\n        return issue.data;\n    } catch(err) {\n        console.log(err);\n    }\n}\n\nasync function addComment(projectId, issueId, comment, authToken) {\n    try {\n        const headers = authHeader(authToken);\n        const result = await axios.post(\n            `/api/projects/${projectId}/issues/${issueId}/comments`,\n            { comment },\n            { headers }\n        )\n        console.log(result);\n        return result.data;\n    } catch(err) {\n        console.log(err);\n    }\n}\n\nasync function updateComment(projectId, issueId, commentId, comment, authToken) {\n    try {\n        const headers = authHeader(authToken);\n        const result = await axios.patch(\n            `/api/projects/${projectId}/issues/${issueId}/comments/${commentId}`,\n            { comment },\n            { headers }\n        )\n        console.log(result);\n        return result.data;\n    } catch(err) {\n        console.log(err);\n    }\n}\n\nasync function deleteComment(projectId, issueId, commentId, authToken) {\n    try {\n        const headers = authHeader(authToken);\n        const result = await axios.delete(\n            `/api/projects/${projectId}/issues/${issueId}/comments/${commentId}`,\n            { headers }\n        )\n        console.log(result);\n        return result.data;\n    } catch(err) {\n        console.log(err);\n    }\n}\n\n// This function returns a promise instead of waiting for it to resolve. \n// The callback is passed the current percentage of the upload\nasync function createAttachment(projectId, issueId, data, authToken, cb) {\n    try {\n        const headers = authHeader(authToken);\n        let config = {\n            onUploadProgress: function(progressEvent) {\n                let percentCompleted = Math.round( (progressEvent.loaded * 100) / progressEvent.total );\n                cb && (typeof cb === \"function\") && cb(percentCompleted);\n            },\n            headers\n        };\n        return axios.post(\n            `/api/projects/${projectId}/issues/${issueId}/attachments`,\n            data,\n            config\n        )\n    } catch(err) {\n        console.log(err);\n\n    }\n}\n\nasync function getAttachment(projectId, issueId, attachmentId, authToken) {\n    try {\n        const headers = authHeader(authToken);\n        return axios.get(\n            `/api/projects/${projectId}/issues/${issueId}/attachments/${attachmentId}`,\n            { headers }            \n        );\n    } catch(err) {\n        console.log(err);\n    }\n}\n\nasync function deleteAttachment(projectId, issueId, attachmentId, authToken) {\n    try {\n        const headers = authHeader(authToken);\n        const result = axios.delete(\n            `/api/projects/${projectId}/issues/${issueId}/attachments/${attachmentId}`,\n            { headers }\n        )\n        console.log(result);\n        return result;\n    } catch(err) {\n        console.log(err);\n    }\n}\n\nconst issuesApi = {\n    createIssue, updateIssue, deleteIssue, assignIssue, advanceIssue, \n    addComment, updateComment, deleteComment, \n    createAttachment, getAttachment, deleteAttachment\n}\n\nexport default issuesApi;","import axios from 'axios';\nimport { authHeader } from './util';\n\nasync function createProject(projectInfo, authToken) {\n    try {\n        const headers = authHeader(authToken)\n        const project = await axios.post(\"/api/projects\", projectInfo, { headers });\n        return project;\n    } catch(err) {\n        console.log(err);\n    }\n}\n\nasync function updateProject(projectId, authToken, update) {\n    try {\n        const headers = authHeader(authToken);\n        const project = await axios.patch(`/api/projects/${projectId}`, update, { headers });\n        return project;\n    } catch(err) {\n        console.log(err);\n    }\n}\n\nasync function deleteProject(projectId, authToken) {\n    try {\n        const headers = authHeader(authToken);\n        const project = await axios.delete(`/api/projects/${projectId}`, { headers });\n        return project;\n    } catch(err) {\n        console.log(err);\n    }\n}\n\nasync function addProjectCollaborator(projectId, collaboratorId, authToken) {\n    try {\n        const headers = authHeader(authToken);\n        const result = await axios.post(`/api/projects/${projectId}/collaborators`, { collaboratorId }, { headers })\n        return result;\n    } catch(err) {\n        console.log(err);\n    }\n}\n\nasync function removeProjectCollaborator(projectId, collaboratorId, authToken) {\n    try {\n        const headers = authHeader(authToken);\n        const result = await axios.delete(`/api/projects/${projectId}/collaborators`, { collaboratorId }, { headers })\n        return result;\n    } catch(err) {\n        console.log(err);\n    }\n}\n\nconst projectsApi = {\n    createProject, updateProject, deleteProject, addProjectCollaborator, removeProjectCollaborator\n}\n\nexport default projectsApi;","import React, { createContext } from 'react';\n\nimport useAuth from '../hooks/useAuth';\nimport useResource from '../hooks/useResource';\nimport issuesApi from '../api/issues';\nimport projectsApi from '../api/projects';\n\nexport const projectsContext = createContext({ });\n\nexport default function ProvideProjects(props) {\n    const projects = useProvideProjects();\n\n    return (\n        <projectsContext.Provider value={projects}>\n            {props.children}\n        </projectsContext.Provider>\n    );\n}\n\nfunction useProvideProjects() {\n    const auth = useAuth();\n    const [projects, setProjects] = useResource('/api/projects', auth.user ? auth.user.token : null);\n\n    const handleDeleteProject = async ({ data }) => {\n        await projectsApi.deleteProject(data.projectId, auth.user.token);\n        setProjects(prev => {\n            const projects = prev.data.slice();\n            const index = projects.findIndex(elem => elem.id === data.projectId);\n            projects.splice(index, 1);\n            return { ...prev, data: projects };\n        });\n    }\n\n    const handleAddProject = async (newProject) => {\n        const project = await projectsApi.createProject(newProject, auth.user.token);\n        setProjects(prev => {\n            const projects = prev.data.slice();\n            projects.push({ ...project.data, issues: [] }); // TODO: Modify backend to init empty array instead of here\n            return { ...prev, data: projects };\n        });\n    }\n\n    const handleEditProject = async (projectId, updates) => {\n\n    }\n\n    const handleAddCollaborator = async ({ data, values }) => {\n        await projectsApi.addProjectCollaborator(data.projectId, values.collaboratorId, auth.user.token);\n    }\n\n    const handleCreateIssue = async (projectId, issueDetails) => {\n        const newIssue = await issuesApi.createIssue(projectId, issueDetails, auth.user.token);\n        setProjects(prev => {\n            const projects = prev.data.slice();\n            const projectIdx = projects.findIndex(proj => proj.id === Number(projectId));\n            projects[projectIdx].issues.push(newIssue);\n            return { ...prev, data: projects}\n        });\n        return newIssue;\n    }\n\n    const handleDeleteIssue = async (projectId, issueId) => {\n        await issuesApi.deleteIssue(projectId, issueId, auth.user.token);\n        setProjects(prev => {\n            const projects = prev.data.slice();\n            const projectIdx = projects.findIndex(proj => proj.id === Number(projectId));\n            const issueIdx = projects[projectIdx] \n                && projects[projectIdx].issues \n                && projects[projectIdx].issues.length > 0 \n                && projects[projectIdx].issues.findIndex(issue => issue.id === Number(issueId));\n            projects[projectIdx].issues.splice(issueIdx, 1);\n            return { ...prev, data: projects }\n        });\n    }\n    \n    const handleEditIssue = async (projectId, issueId, issueUpdates) => {\n        //Do not fire request if there are no changes to the issue\n        if(Object.keys(issueUpdates).length === 0) return;\n\n        const updatedIssue = await issuesApi.updateIssue(projectId, issueId, issueUpdates, auth.user.token);\n        setProjects(prev => {\n            const projects = prev.data.slice();\n            const projectIdx = projects.findIndex(proj => proj.id === Number(projectId));\n            const issueIdx = projects[projectIdx] \n                && projects[projectIdx].issues \n                && projects[projectIdx].issues.length > 0 \n                && projects[projectIdx].issues.findIndex(issue => issue.id === Number(issueId));\n            projects[projectIdx].issues[issueIdx] = updatedIssue;\n            return { ...prev, data: projects }\n        });\n    }\n\n    const handleAssignIssue = async (projectId, issueId, collaboratorId) => {\n        const updatedIssue = await issuesApi.assignIssue(projectId, issueId, collaboratorId, auth.user.token);\n        setProjects(prev => {\n            const projects = prev.data.slice();\n            const projectIdx = projects.findIndex(proj => proj.id === Number(projectId));\n            const issueIdx = projects[projectIdx] \n                && projects[projectIdx].issues \n                && projects[projectIdx].issues.length > 0 \n                && projects[projectIdx].issues.findIndex(issue => issue.id === Number(issueId));\n            projects[projectIdx].issues[issueIdx] = updatedIssue;\n            return { ...prev, data: projects }\n        });\n    }\n\n    const handleStartIssue = async (projectId, issueId) => {\n        const updatedIssue = await issuesApi.advanceIssue(projectId, issueId, \"inprogress\", auth.user.token);\n        setProjects(prev => {\n            const projects = prev.data.slice();\n            const projectIdx = projects.findIndex(proj => proj.id === Number(projectId));\n            const issueIdx = projects[projectIdx] \n                && projects[projectIdx].issues \n                && projects[projectIdx].issues.length > 0 \n                && projects[projectIdx].issues.findIndex(issue => issue.id === Number(issueId));\n            projects[projectIdx].issues[issueIdx] = updatedIssue;\n            return { ...prev, data: projects }\n        });\n    } \n\n    const handleCloseIssue = async (projectId, issueId, status) => {\n        const updatedIssue = await issuesApi.advanceIssue(projectId, issueId, status, auth.user.token);\n        setProjects(prev => {\n            const projects = prev.data.slice();\n            const projectIdx = projects.findIndex(proj => proj.id === Number(projectId));\n            const issueIdx = projects[projectIdx] \n                && projects[projectIdx].issues \n                && projects[projectIdx].issues.length > 0 \n                && projects[projectIdx].issues.findIndex(issue => issue.id === Number(issueId));\n            projects[projectIdx].issues[issueIdx] = updatedIssue;\n            return { ...prev, data: projects }\n        });\n    }\n\n    const handleIssueAttachmentRequest = async (projectId, issueId, data, cb) => {\n        console.log(\"in context\")\n        return issuesApi.createAttachment(projectId, issueId, data, auth.user.token, cb);\n    }\n\n    const addIssueAttachmentHandles = (projectId, issueId, attachmentHandles) => {\n        setProjects(prev => {\n            const projects = prev.data.slice();\n            const projectIdx = projects.findIndex(proj => proj.id === Number(projectId));\n            const issueIdx = projects[projectIdx] \n                && projects[projectIdx].issues \n                && projects[projectIdx].issues.length > 0 \n                && projects[projectIdx].issues.findIndex(issue => issue.id === Number(issueId));\n            const currHandles = projects[projectIdx].issues[issueIdx].attachmentHandles || [];\n            projects[projectIdx].issues[issueIdx].attachmentHandles = currHandles.concat(attachmentHandles);\n            return { ...prev, data: projects }\n        });\n    }\n\n    return {\n        data: projects.data,\n        handleDeleteProject,\n        handleEditProject,\n        handleAddProject,\n        handleAddCollaborator,\n        handleDeleteIssue,\n        handleEditIssue,\n        handleCreateIssue,\n        handleAssignIssue,\n        handleStartIssue,\n        handleCloseIssue,\n        handleIssueAttachmentRequest,\n        addIssueAttachmentHandles\n    }\n}","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport useAuth from '../../hooks/useAuth';\n\n// A wrapper for <Route> that redirects to the login\n// screen if you're not yet authenticated.\nfunction PrivateRoute({ children, component, ...props }) {\n    let auth = useAuth();\n    const Component = component;\n    return (\n        <Route\n            {...props}\n            render={(props) =>\n            auth.user ? (\n                children || <Component {...props}/>\n            ) : (\n                <Redirect\n                    to={{\n                        pathname: \"/login\",\n                        state: { from: props.location }\n                    }}\n                />\n            )}\n        />\n    );\n}\n\nexport default PrivateRoute;","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { Link } from 'react-router-dom';\n\nfunction LinkButton({ to, text, ...props }) {\n    return (\n        <Button as={Link} to={to ? to : \"#\"} variant=\"outline-primary\" {...props}>\n            {text || props.children}\n        </Button>\n    );\n}\n\nexport default LinkButton;","import { Navbar } from 'react-bootstrap'\nimport './NavBar.css';\n\nfunction NavBar({ title, logo, render, ...props }) {\n    return (\n        <Navbar className=\"NavBar\" {...props}>\n            <Navbar.Brand id=\"brand\" href=\"/\">\n                {logo ? \n                    <img \n                        alt=\"\"\n                        src={logo}\n                        className=\"logo\"\n                    /> : \n                    null\n                }\n                {title}\n            </Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\" className=\"justify-content-end\">\n                {render()}\n            </Navbar.Collapse>\n        </Navbar>\n    )\n}\n\nexport default NavBar;","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React from 'react';\nimport { Nav } from 'react-bootstrap';\n\nimport LinkButton from '../../display/Button/LinkButton';\nimport NavBar from '../../display/NavBar/NavBar';\nimport useAuth from '../../../hooks/useAuth';\n\nimport logo from '../../../logo.svg';\n\nfunction TopNavBar(props) {\n    const auth = useAuth();\n\n    const logout = () => {\n        auth.logout(() => {\n            console.log(\"Logged out\")\n        })\n    }\n    \n    return (\n        <NavBar title=\"Issue Tracker\" logo={logo} bg=\"dark\" expand=\"md\" render={() => (\n            <Nav >\n                { !auth.user ? <LinkButton className=\"m-sm-1\" to=\"login\">Login</LinkButton> : null }\n                { !auth.user ? <LinkButton className=\"m-sm-1\" to=\"signup\">Signup</LinkButton> : null }\n                { auth.user ? <LinkButton className=\"m-sm-1\" to=\"/dashboard\">Dashboard</LinkButton> : null }\n                { auth.user ? <LinkButton className=\"m-sm-1\" to=\"/account\">Account</LinkButton> : null }\n                { auth.user ? <LinkButton className=\"m-sm-1\" onClick={logout}>Logout</LinkButton> : null }\n            </Nav>\n        )} />\n    )\n}\n\nexport default TopNavBar;","import * as Yup from 'yup';\n\nexport const SignupSchema = Yup.object().shape({\n    firstName: Yup.string()\n        .min(3, 'Too Short!')\n        .max(20, 'Too Long!')\n        .required('Required'),\n    lastName: Yup.string()\n        .min(3, 'Too Short!')\n        .max(20, 'Too Long!')\n        .required('Required'),\n    userName: Yup.string()\n        .min(3, 'Too Short!')\n        .max(20, 'Too Long!')\n        .required('Required'),\n    email: Yup.string()\n        .email('Invalid email')\n        .required('Required'),\n    password: Yup.string()\n        .min(6, 'Too Short!')\n        .max(20, 'Too Long!')\n        .required('Required'),\n    confirmPassword: Yup.string().oneOf([Yup.ref('password'), ''], 'Passwords do not match')\n});\n\nexport const LoginSchema = Yup.object().shape({\n    userName: Yup.string()\n        .min(3, 'Too Short!')\n        .max(20, 'Too Long!')\n        .required('Required'),\n    password: Yup.string()\n        .min(6, 'Too Short!')\n        .max(20, 'Too Long!')\n        .required('Required'),\n});\n\nexport const ChangePasswordSchema = Yup.object().shape({\n    currentPassword: Yup.string()\n        .min(6, 'Too Short!')\n        .max(20, 'Too Long!')\n        .required('Required'),\n    newPassword: Yup.string()\n        .min(6, 'Too Short!')\n        .max(20, 'Too Long!')\n        .required('Required'),\n    confirmNewPassword: Yup.string()\n        .oneOf([Yup.ref('newPassword'), null], 'Passwords must match')\n})\n\nexport const ProjectSchema = Yup.object().shape({\n    name: Yup.string()\n        .min(3, \"Too Short!\")\n        .max(30, \"Too Long!\")\n        .required(\"Required\"),\n    description: Yup.string()\n        .min(3, \"Too Short!\")\n        .max(512, \"Too Long!\")\n        .required(\"Required\")\n});\n\nexport const IssueSchema = Yup.object().shape({\n    title: Yup.string()\n        .min(3, \"Too Short!\")\n        .max(30, \"Too Long!\")\n        .required(\"Required\"),\n    description: Yup.string()\n        .min(3, \"Too Short!\")\n        .max(512, \"Too Long!\")\n        .required(\"Required\")\n});","import React from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Button} from 'react-bootstrap';\n\nimport { LoginSchema } from '../../utility/schema/validation'\n\nfunction LoginForm({ onSubmit, ...props }) {\n    return (\n        <Formik\n            initialValues={{ userName: \"\", password: \"\" }}\n            validationSchema={LoginSchema}\n            onSubmit={async (values, { setSubmitting }) => {\n                setSubmitting(true);\n                try {\n                    await onSubmit(values)\n                } catch (err) {\n                    console.log(err);\n                }\n                setSubmitting(false);\n            }}\n        >\n            {({ isSubmitting }) => (\n                <Form className=\"form\">\n                    <Row as=\"h3\">Log In</Row>\n                    <Row>\n                        <Col>\n                            <label htmlFor=\"userName\">Username</label>\n                        </Col>\n                        <Col>\n                            <Field name=\"userName\" type=\"text\" className=\"form-input\" />\n                            <ErrorMessage name=\"userName\" className=\"form-error\" />\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col>\n                            <label htmlFor=\"password\">Password</label>\n                        </Col>\n                        <Col>\n                            <Field name=\"password\" type=\"password\" className=\"form-input\" />\n                            <ErrorMessage name=\"password\" className=\"form-error\" />\n                        </Col>\n                    </Row>\n\n                    {props.error && <div className=\"form-error\">{props.error.message}</div>}\n\n                    <Row>\n                        <Button variant=\"primary\" type=\"submit\" disabled={isSubmitting}>\n                            Submit\n                        </Button>\n                    </Row>\n\n                    <p>Don't have an account yet? Please <Link to=\"signup\">Sign up</Link> to continue.</p>\n                </Form>\n            )}\n        </Formik>\n    )\n}\n\nexport default LoginForm;","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\nimport useAuth from '../../hooks/useAuth';\nimport LoginForm from '../../components/form/LoginForm';\n\nimport '../page.css';\n\nfunction LoginPage(props) {\n    const auth = useAuth();\n    \n    const login = (credentials) => (\n        auth.login(credentials, (user) => {\n            console.log(\"Signed in as \" + user.userName + \"!\");\n        })\n    );\n\n    const fromState = props.location.state ? props.location.state.from : null;\n\n    if(auth.isLoading) return <div>Loading...</div>;\n    if(auth.user) return <Redirect to={fromState ? fromState.pathname : \"/\"} />;\n    \n    return (\n        <Container fluid className=\"page\">\n            <LoginForm onSubmit={login} error={auth.error} />\n        </Container>\n    )\n}\n\nexport default LoginPage;","import React from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Button } from 'react-bootstrap';\nimport { SignupSchema } from '../../utility/schema/validation';\n\nimport './form.css';\n\nfunction SignupForm(props) {\n    return (\n        <Formik\n            initialValues={{ firstName: \"\", lastName: \"\", email: \"\", userName: \"\", password: \"\", confirmPassword: \"\" }}\n            validationSchema={SignupSchema}\n            onSubmit={async (values, form) => {\n                form.setSubmitting(true);\n                try {\n                    await props.onSubmit(values);\n                } catch (err) {\n                    console.log(err);\n                }\n                form.setSubmitting(false);\n            }}\n        >\n            {({ isSubmitting }) => (\n                <Form className=\"form\" autoComplete=\"false\">\n                    <Row as=\"h3\" lg={1}>Sign Up</Row>\n\n                    <Row>\n                        <Col>\n                            <label htmlFor=\"firstName\">First Name</label>\n                        </Col>\n                        <Col>\n                            <Field name=\"firstName\" type=\"text\" className=\"form-input\" />\n                            <ErrorMessage name=\"firstName\" className=\"form-error\" />\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col>\n                            <label htmlFor=\"lastName\">Last Name</label>\n                        </Col>\n                        <Col>\n                            <Field name=\"lastName\" type=\"text\" className=\"form-input\" />\n                            <ErrorMessage name=\"lastName\" className=\"form-error\" />\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col>\n                            <label htmlFor=\"email\">Email Address</label>\n                        </Col>\n                        <Col>\n                            <Field name=\"email\" type=\"text\" className=\"form-input\" />\n                            <ErrorMessage name=\"email\" className=\"form-error\" />\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col>\n                            <label htmlFor=\"userName\">Display Name</label>\n                        </Col>\n                        <Col>\n                            <Field name=\"userName\" type=\"text\" className=\"form-input\" autoComplete=\"off\"/>\n                            <ErrorMessage name=\"userName\" className=\"form-error\" />\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col>\n                            <label htmlFor=\"password\">Password</label>\n                        </Col>\n                        <Col>\n                            <Field name=\"password\" type=\"password\" className=\"form-input\" autoComplete=\"off\"/>\n                            <ErrorMessage name=\"password\" className=\"form-error\" />\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col>\n                            <label htmlFor=\"confirmPassword\">Confirm Password</label>\n                        </Col>\n                        <Col>\n                            <Field name=\"confirmPassword\" type=\"password\" className=\"form-input\" />\n                            <ErrorMessage name=\"confirmPassword\" className=\"form-error\" />\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Button variant=\"primary\" type=\"submit\" disabled={isSubmitting}>Submit</Button>\n                    </Row>\n                    \n                    <p>Already have an account? <Link to=\"login\">Log in</Link> to continue.</p>\n                </Form>\n            )}\n        </Formik>\n    )\n}\n\nexport default SignupForm;","import React, { useState } from 'react';\nimport { Container } from 'react-bootstrap';\nimport { Redirect } from 'react-router-dom';\n\nimport SignupForm from '../../components/form/SignupForm';\nimport useAuth from '../../hooks/useAuth';\n\nimport '../page.css';\n\nfunction SignupPage() {\n    const auth = useAuth();\n    const [redirect, setRedirect] = useState(false); \n\n    const signup = async (userInfo) => {\n        await auth.signup(userInfo, (data) => {\n            console.log(data)\n        });\n        setRedirect(true);\n    }\n\n    return (\n        auth.isLoading ? \n            <div>Loading...</div> :\n            (auth.user || redirect) ?\n                <Redirect to=\"/\" /> :\n                <Container fluid className=\"page\">\n                    <SignupForm onSubmit={signup} />\n                </Container>\n    )\n}\n\nexport default SignupPage;","import React from 'react';\nimport { Button, Container } from 'react-bootstrap';\n\nimport LinkButton from '../../components/display/Button/LinkButton';\nimport './Dashboard.css';\n\nfunction Dashboard() {\n\n    return (\n        <Container className=\"tile-container\">\n            <LinkButton to=\"/projects\" className=\"tile\">Projects&Issues</LinkButton>\n            <Button className=\"tile\">Reports (Coming Soon)</Button>\n        </Container>       \n    )\n}\n\nexport default Dashboard;","import React from 'react';\nimport { Nav } from 'react-bootstrap';\n\nimport LinkButton from '../../display/Button/LinkButton';\nimport NavBar from '../../display/NavBar/NavBar';\n\nfunction ProjectsNavBar() {\n    return (\n        <NavBar title=\"Projects\" bg=\"light\" render={() => (\n            <Nav>\n                <LinkButton to=\"/projects/new\" className=\"m-sm-1\">Add New Project</LinkButton>\n            </Nav>\n        )}/>\n    )\n}\n\nexport default ProjectsNavBar;","import React from 'react';\n\nfunction ListItem({ item, render }) {\n    return (\n        <div className=\"list-item\" >{render(item)}</div>\n    )\n}\n\nexport default ListItem;","import React, { useState } from 'react';\nimport ListItem from './ListItem';\n\nfunction ListItemGroup({ name, value, items, render }) {\n    const [collapse, setCollapse] = useState(false);\n    return (\n        <div className={\"list-item-group \" + name }>\n            <div className={\"group-header \" + (collapse ? \"collapsed\" : \"\")} onClick={() => setCollapse(prev => !prev)}>{value}</div>\n            {\n                collapse ? null :\n                (items && items.length > 0) ? \n                    items.map((item, idx) => <ListItem key={`${value}-${idx}`} item={item} render={render} />)\n                :\n                    <div className=\"empty-group-message\">There are no items to display for this group</div>\n            }\n        </div>\n    )\n}\n\nexport default ListItemGroup;","import { mapValues, pickBy, includes } from 'lodash';\n\nexport const useFilteredItems = (items, filter = null, searchText = \"\", searchKeys = []) => {\n    if(!filter) return items;\n    \n    // Maps property keys of 'filter' prop to an array containing the values that are not being filtered out\n    const allowedValues = mapValues(filter, (obj) => {\n        const selectedFilters = pickBy(obj, (value) => value === true);\n        return Object.keys(selectedFilters);\n    });\n    \n    const filteredItems = items && items.length > 0 && items.filter(item => {\n        const allowedKeys = Object.keys(allowedValues);\n        let isAllowed = true;\n        // Filter out items based on the current filter\n        for(let key of allowedKeys) {\n            if(includes(allowedValues[key], item[key]) === false) {\n                isAllowed = false;\n            }\n        }\n        // Also, filter out items not matching the current search (item['searchKeys'] !== 'searchText')\n        if(isAllowed && searchText !== \"\") {\n            for(let key of searchKeys) {\n                if(includes(item[key].toLowerCase(), searchText.toLowerCase()) === true) {\n                    isAllowed = true;\n                    break;\n                } else isAllowed = false;\n            }\n        }\n        return isAllowed;\n    });\n\n    return filteredItems ? filteredItems : items;\n}","import { groupBy } from 'lodash';\n\nexport const useGroupedItems = (items, groupKey = null) => {\n    if(!groupKey) return items;\n    const groupedItems = groupBy(items, (value) => value[groupKey]);\n    return groupedItems;\n}\n","import React from 'react';\n\nimport ListItem from './ListItem'\nimport ListItemGroup from './ListItemGroup';\nimport './List.css';\nimport { useFilteredItems } from '../../../hooks/useFilteredItems';\nimport { useGroupedItems } from '../../../hooks/useGroupedItems';\n\n\nfunction List({ listItems, groupKey = null, groupValues = null, orderBy = 'asc', filter = null, searchText = \"\", searchKeys = [], render }) {\n\n    const filteredItems = useFilteredItems(listItems, filter, searchText, searchKeys);\n    const groupedItems = useGroupedItems(filteredItems, groupKey);\n\n    const listComponents = () => {\n        let listComponentArray;\n        if(groupKey && groupValues) {\n            const groupComponents = [];\n            groupValues.forEach(value => {\n                const values = groupedItems[value];\n                groupComponents.push(<ListItemGroup key={`${groupKey}=${value}`} name={groupKey} value={value} items={values} render={render}/>);\n            })\n            listComponentArray = orderBy === 'desc' ? groupComponents.reverse() : groupComponents;\n        } else {\n            listComponentArray = filteredItems && filteredItems.map((item, idx) => <ListItem item={item} key={idx} keyValue={idx} render={render} />);\n        }\n\n        return listComponentArray;\n    }\n\n    return (\n        <div className=\"list-container\">\n            { listComponents() }\n        </div>\n    )\n}\n\nexport default List;","import React from 'react';\nimport { Card, Dropdown, DropdownButton, ButtonGroup } from 'react-bootstrap';\nimport LinkButton from '../../display/Button/LinkButton';\n\nfunction ProjectListOverviewCard({ project, onDelete, onEdit, onAddCollaborator }) {\n    return (\n        <Card className=\"project-list-card\">\n            <Card.Body className=\"left-side\">\n                <Card.Title>{project.name}</Card.Title>\n                <Card.Text>\n                    {project.description}\n                </Card.Text>\n                <ButtonGroup className=\"buttons\">\n                    <LinkButton variant=\"primary\" to={`/projects/${project.id}`} >View Project</LinkButton>\n                    <DropdownButton variant=\"secondary\" title=\"Settings\">\n                        <Dropdown.Item onClick={() => onEdit(project.id)}>Edit Project</Dropdown.Item>\n                        <Dropdown.Item onClick={() => onDelete({ projectId: project.id })}>Delete Project</Dropdown.Item>\n                        <Dropdown.Item onClick={() => onAddCollaborator({ projectId: project.id })}>Add Collaborator</Dropdown.Item>\n                    </DropdownButton>\n                </ButtonGroup>\n            </Card.Body>\n\n            <Card.Body className=\"right-side\" style={{ borderLeft: '1px solid black' }}>\n                <Card.Title>Issue Details</Card.Title>\n                <Card.Text>\n                    {\"There are \" + project.issues.length + \" issues related to this project\"}\n                </Card.Text>\n                <ButtonGroup className=\"buttons\">\n                    <LinkButton variant=\"primary\" to={`/projects/${project.id}/issues`}>View Issues</LinkButton>\n                    <LinkButton variant=\"secondary\" to={`/projects/${project.id}/issues/new`}>Add New Issue</LinkButton>\n                </ButtonGroup>\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default ProjectListOverviewCard;","import React from 'react';\n\nimport List from '../../display/List/List';\nimport ProjectListOverviewCard from './ProjectListOverviewCard';\nimport './ProjectList.css';\n\nfunction ProjectList({ projectList, ...props }) {\n    return projectList ? \n        <List listItems={projectList} render={item => (\n            <ProjectListOverviewCard project={item} {...props} />\n        )}/> : \n        \"No projects\"\n}\n\nexport default ProjectList;","import React from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport { Row, Col, Button } from 'react-bootstrap';\nimport { ProjectSchema } from '../../utility/schema/validation';\n\nfunction NewProjectForm({ onSubmit }) {\n    return (\n        <Formik\n            initialValues={{ name: \"\", description: \"\" }}\n            validationSchema={ProjectSchema}\n            onSubmit={async (values, { setSubmitting }) => {\n                setSubmitting(true);\n                try {\n                    await onSubmit(values)\n                } catch (err) {\n                    console.log(err);\n                }\n                setSubmitting(false);\n            }}\n        >\n            {({ isSubmitting }) => (\n                <Form className=\"form\">\n                    <Row as=\"h3\">Create New Project</Row>\n\n                    <Row>\n                        <Col>\n                            <label htmlFor=\"name\">Project Name</label>\n                        </Col>\n                        <Col>\n                            <Field name=\"name\" type=\"text\" className=\"form-input\" />\n                            <ErrorMessage name=\"name\" className=\"form-error\" />\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col>\n                            <label htmlFor=\"description\">Description</label>\n                        </Col>\n                        <Col>\n                            <Field name=\"description\" as=\"textarea\" className=\"form-input\" />\n                            <ErrorMessage name=\"description\" className=\"form-error\" />\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Button variant=\"primary\" type=\"submit\" disabled={isSubmitting}>\n                            Create Project\n                        </Button>\n                    </Row>\n\n                </Form>\n            )}\n        </Formik>\n    )\n}\n\nexport default NewProjectForm;","import React, { useState, createContext } from 'react';\n\nexport const notificationBannerContext = createContext({ });\n\nexport default function ProvideNotificationBanner(props) {\n    const notificationBanner = useProvideNotificationBanner();\n\n    return (\n        <notificationBannerContext.Provider value={notificationBanner}>\n            {props.children}\n        </notificationBannerContext.Provider>\n    )\n}\n\nfunction useProvideNotificationBanner() {\n    const [text, setText] = useState(\"Notification Banner\");\n    const [show, setShow] = useState(false);\n\n    const showNotificationWithText = (value) => {\n        setText(value);\n        setShow(true);\n        setTimeout(() => { \n            setShow(false);\n            setText(\"\");\n        }, 5000);\n    }\n\n    return {\n        text,\n        show,\n        showNotificationWithText\n    }\n}","import { useContext } from \"react\";\nimport { notificationBannerContext } from \"../contexts/NotificationBannerContext\";\n\nexport default function useNotificationBanner() {\n    return useContext(notificationBannerContext);\n}","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\n\nimport useAuth from '../../hooks/useAuth';\nimport NewProjectForm from '../../components/form/NewProjectForm';\nimport useNotificationBanner from '../../hooks/useNotificationBanner';\n\nfunction NewProjectPage(props) {\n    const auth = useAuth();\n    const notificationBanner = useNotificationBanner();\n    const [redirect, setRedirect] = useState(false);\n\n    const createNewProject = async (newProject) => {\n        console.log(\"Creating project with token \" + auth.user.token);\n        await props.onSubmit(newProject);\n        notificationBanner.showNotificationWithText(\"Project successfully created!\");\n        setRedirect(true);\n    }\n\n    return (\n        redirect === true ? \n        <Redirect to=\"/projects\"/> :\n        <Container fluid className=\"page\">\n            <NewProjectForm onSubmit={createNewProject} />\n        </Container>\n    )\n}\n\nexport default NewProjectPage;","import React, { useState, useRef } from 'react';\nimport './Dropzone.css';\n\nfunction Dropzone({ name, disabled, onFilesAdded }) {\n    const [highlight, setHighlight] = useState(false);\n    const fileInputRef = useRef(null);\n\n    const openFileDialog = () => {\n        if(disabled) return;\n        fileInputRef.current.click();\n    }\n\n    const handleFilesAdded = (e) => {\n        if(disabled) return;\n        const files = e.target.files;\n        if(onFilesAdded) {\n            const array = fileListToArray(files);\n            onFilesAdded(array);\n        }\n    }\n\n    const handleDragOver = (e) => {\n        e.preventDefault();\n        setHighlight(true);\n    }\n\n    const handleDragLeave = () => {\n        setHighlight(false);\n    }\n\n    const handleDrop = (e) => {\n        e.preventDefault();\n        if(disabled) return;\n\n        const files = e.dataTransfer.files;\n        if(onFilesAdded) {\n            const array = fileListToArray(files);\n            onFilesAdded(array);\n        }\n\n        setHighlight(false);\n    }\n\n    const fileListToArray = (fileList) => {\n        const array = [];\n        for (let i = 0; i < fileList.length; i++) {\n            array.push(fileList.item(i));\n        }\n        return array;\n    }\n\n    return (\n        <div \n            className={`dropzone ${highlight ? 'highlight' : ''}`}\n            onDragOver={handleDragOver}\n            onDragLeave={handleDragLeave}\n            onDrop={handleDrop}\n            onClick={openFileDialog}\n            style={{ cursor: disabled ? 'default' : 'pointer' }}\n        >\n            <input \n                ref={fileInputRef}\n                name={name}\n                className=\"file-input\"\n                type=\"file\"\n                multiple\n                onChange={handleFilesAdded}\n            />\n            <img \n                alt=\"upload\"\n                className=\"icon\"\n                src=\"/upload_file_black_24dp.svg\"\n            />\n            <span>Upload Files</span>\n        </div>\n    )\n}\n\nexport default Dropzone;","import React, { useEffect, useState } from 'react';\nimport { Button, ProgressBar } from 'react-bootstrap';\nimport Dropzone from '../Dropzone/Dropzone';\n\nimport './Upload.css';\n\nconst initialUpload = {\n    files: [],\n    isUploading: false,\n    progress: {},\n    successful: false\n};\n\nfunction Upload({ onChange, sendRequest, onClose, setUploadCallbacks, ...props }) {\n    const [upload, setUpload] = useState(initialUpload);\n\n    useEffect(() => {\n        setUploadCallbacks && setUploadCallbacks(() => uploadCallbacks);\n    }, [setUploadCallbacks])\n\n    const handleFilesAdded = (files) => {\n        setUpload(prev => {\n            const updatedFiles = prev.files.concat(files);\n            onChange && onChange(updatedFiles);\n            return {\n                ...prev,\n                files: updatedFiles\n            }\n        });\n    }\n\n    const handleFilesRemoved = (fileIndex) => {\n        setUpload(prev => {\n            console.log(\"removing file:\", fileIndex)\n            const updatedFiles = prev.files.slice();\n            updatedFiles.splice(fileIndex, 1);\n            return {\n                ...prev,\n                files: updatedFiles\n            };\n        });\n    }\n\n    // Only when clicking the upload button in renderActions, else upload handled externally\n    const uploadFiles = async () => {\n        setUpload(prev => ({ ...prev, progress: {}, isUploading: true }));\n\n        const promises = [];\n        console.log(upload);\n        let callbacks;\n        upload.files && upload.files.forEach(file => {\n            console.log(\"sending request from upload\")\n            callbacks = uploadCallbacks(file);\n            const data = new FormData();\n            data.append('attachments', file);\n            promises.push(sendRequest(data, callbacks.progressCb));\n        });\n\n        try {\n            const attachmentHandles = await Promise.all(promises)\n                .then(responses => responses.map(response => response.data.id))\n                .then(data => {\n                    callbacks.successCb();\n                    return data;\n                })\n                .catch(err => callbacks.failureCb(err));\n\n            props.onComplete(attachmentHandles);\n        } catch(err) {\n            callbacks.failureCb(err);\n        }\n    }\n\n    const renderActions = () => {\n        if(!sendRequest) return null;\n\n        if(upload.successful) {\n            return (\n                <Button\n                    onClick={() => setUpload(initialUpload)}\n                >\n                    Clear\n                </Button>\n            )\n        } else {\n            return (\n                <Button \n                    disabled={!upload.files || upload.files.length < 0 || upload.isUploading}\n                    onClick={uploadFiles}\n                >\n                    Upload\n                </Button>\n            )\n        }\n    }\n\n    const uploadCallbacks = (file) => {\n        setUpload(prev => ({ ...prev, progress: {}, isUploading: true }));\n        return {\n            progressCb: (percentCompleted) => {\n                if(percentCompleted && percentCompleted !== 100) {\n                    console.log(\"isuploading\")\n                    setUpload(prev=> {\n                        const copy = { ...prev.progress }\n                        copy[file.name] = {\n                            state: \"pending\",\n                            percentage: percentCompleted\n                        }\n                        return { ...prev, progress: copy };\n                    });\n                } else if(percentCompleted) {\n                    console.log(\"issuccessful\")\n                    setUpload(prev=> {\n                        const copy = { ...prev.progress }\n                        copy[file.name] = {\n                            state: \"done\",\n                            percentage: percentCompleted\n                        }\n                        return { ...prev, progress: copy }\n                    });\n                }\n            },\n            successCb: () => { \n                console.log(\"calling success\");\n                setUpload(prev => ({...prev, successful: true, uploading: false }))\n            },\n            failureCb: (err) => { \n                console.log(\"calling failure\", err);\n                setUpload(prev=> ({ ...prev, successful: false, uploading: false }))\n            }\n        }\n    }\n\n    const renderProgress = (file) => {\n        const uploadProgress = upload.progress && upload.progress[file.name];\n        if(upload.isUploading || upload.successful) {\n            return (\n                <div className=\"progress-wrapper\">\n                    <ProgressBar now={uploadProgress ? uploadProgress.percentage : 0} />\n                    <img \n                        className=\"successful-icon\"\n                        alt=\"successful\"\n                        src=\"/file_download_done_black_24dp.svg\"\n                        style={{\n                            opacity:\n                                uploadProgress && uploadProgress.state === \"done\" ? 0.5 : 0\n                        }}\n                    />\n                </div>\n            )\n        }\n    }\n\n    return (\n        <div className=\"upload\">\n            <div className=\"header\">\n                <span className=\"title\">Upload Files</span>\n                { onClose &&\n                    <button \n                        className=\"close-upload link\"\n                        onClick={() => onClose()}\n                    >\n                        X\n                    </button>\n                }\n            </div>\n            <div className=\"content\">\n                <div>\n                    <Dropzone \n                        name={props.name}\n                        onFilesAdded={handleFilesAdded}\n                        disabled={upload.isUploading || upload.successful}\n                    />\n                </div>\n                <div className=\"files\">\n                    {\n                        upload.files && upload.files.map((file, idx) => (\n                            <div className=\"file-progress\" key={`file.name-${idx}`}>\n                                <span className=\"filename\">{file.name}</span>\n                                {renderProgress(file)}{\" \"}\n                                <button \n                                    className=\"remove-attachment link\"\n                                    onClick={() => handleFilesRemoved(idx)}\n                                    style={{ \n                                        display: upload.isUploading || upload.successful ? \"none\" : \"inline\"\n                                    }}\n                                >\n                                    X\n                                </button>\n                            </div>\n                        ))\n                    }\n                </div>\n            </div>\n            <div className=\"actions\">{renderActions()}</div>\n        </div>\n    );\n}\n\nexport default Upload;","import React, { useState } from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport { Row, Col, Button } from 'react-bootstrap';\n\nimport Upload from './inputs/Upload/Upload';\nimport { IssueSchema } from '../../utility/schema/validation';\n\nfunction NewIssueForm({ onSubmit, collaborators }) {\n    const [uploadCallbacks, setUploadCallbacks] = useState({\n        progressCb: (percentCompleted) => { console.log(percentCompleted) },\n        successCb: () => { console.log(\"Successful upload\") },\n        failureCb: () => { console.log(\"Failed upload\") }\n    });\n\n    return (\n        <Formik\n            initialValues={{ title: \"\", description: \"\", category: \"other\", priority: \"regular\", status: \"unassigned\", assigneeId: \"\" }}\n            validationSchema={IssueSchema}\n            onSubmit={async (values, { setSubmitting }) => {\n                setSubmitting(true);\n                try {\n                    const newIssue = values;\n\n                    await onSubmit(newIssue, uploadCallbacks);\n\n                } catch (err) {\n                    console.log(err);\n                }\n                setSubmitting(false);\n            }}\n        >\n            {({ isSubmitting, setFieldValue, submitForm, resetForm }) => (\n                <Form className=\"form\" id=\"new-issue-form\">\n                    <Row as=\"h3\">Add New Issue</Row>\n\n                    <Row>\n                        <Col>\n                            <label htmlFor=\"title\">Issue Title</label>\n                        </Col>\n                        <Col>\n                            <Field name=\"title\" type=\"text\" className=\"form-input\" />\n                            <span className=\"form-error\">\n                                <ErrorMessage name=\"title\" />\n                            </span>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col>\n                            <label htmlFor=\"description\">Description</label>\n                        </Col>\n                        <Col>\n                            <Field name=\"description\" as=\"textarea\" className=\"form-input\" />\n                            <span className=\"form-error\">\n                                <ErrorMessage name=\"description\" className=\"form-error\" />\n                            </span>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col>\n                            <label htmlFor=\"category\">Category</label>\n                        </Col>\n                        <Col>\n                            <Field name=\"category\" as=\"select\" className=\"form-input\">\n                                <option value=\"bug\">Bug</option>\n                                <option value=\"feature\">Feature</option>\n                                <option value=\"task\">Task</option>\n                                <option value=\"other\">Uncategorized</option>\n                            </Field>\n                            <span className=\"form-error\">\n                                <ErrorMessage name=\"category\" className=\"form-error\" />\n                            </span>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col>\n                            <label htmlFor=\"priority\">Priority</label>\n                        </Col>\n                        <Col>\n                            <Field name=\"priority\" as=\"select\" className=\"form-input\">\n                                <option value=\"trivial\">Trivial</option>\n                                <option value=\"low\">Low</option>\n                                <option value=\"regular\">Regular</option>\n                                <option value=\"high\">High</option>\n                                <option value=\"critical\">Critical</option>\n                            </Field>\n                            <span className=\"form-error\">\n                                <ErrorMessage name=\"priority\" className=\"form-error\" />\n                            </span>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col>\n                            <label htmlFor=\"attachments\">Attachments</label>\n                        </Col>\n                        <Col>\n                            <Field \n                                name=\"attachments\"\n                                as={Upload} \n                                onChange={val => setFieldValue('attachments', val)}\n                                setUploadCallbacks={setUploadCallbacks}\n                                className=\"form-input\" \n                            />\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col>\n                            <label htmlFor=\"assign\">Assign</label>\n                        </Col>\n                        <Col>\n                            <Field name=\"assigneeId\" as=\"select\" className=\"form-input\" >\n                                <option value=\"\">Unassigned</option>\n                                {\n                                    collaborators.map(user => <option key={user.id} value={user.id}>{user.userName}</option>)\n                                }\n                            </Field>\n                            <span className=\"form-error\">\n                                <ErrorMessage name=\"assign\" className=\"form-error\" />\n                            </span>\n                        </Col>\n                    </Row>\n\n                    <Field name=\"createAnother\" type=\"checkbox\" style={{ display: \"none\" }}></Field>\n\n                    <Row>\n                        <Button variant=\"primary\" type=\"submit\" disabled={isSubmitting}>\n                            Add Issue\n                        </Button>\n                        <Button \n                            variant=\"outline-primary\" \n                            className=\"mx-1\" \n                            disabled={isSubmitting} \n                            onClick={async () => {\n                                setFieldValue(\"createAnother\", true);\n                                await submitForm(); \n                                resetForm();\n                            }}\n                        >\n                            Add And Create Another\n                        </Button>\n                    </Row>\n\n                </Form>\n            )}\n        </Formik>\n    )\n}\n\nexport default NewIssueForm;","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\n\nimport NewIssueForm from '../../components/form/NewIssueForm';\nimport useResource from '../../hooks/useResource';\nimport useAuth from '../../hooks/useAuth';\nimport useNotificationBanner from '../../hooks/useNotificationBanner';\n\nfunction NewIssuePage(props) {\n    const auth = useAuth();\n    const notificationBanner = useNotificationBanner();\n    const [collaborators, setCollaborators] = useResource(\n        `/api/projects/${props.match.params.projectId}/collaborators`,\n        auth.user ? auth.user.token : null\n    );\n    const [redirect, setRedirect] = useState(false);\n\n    const addIssueAttachment = async (issueId, attachmentData, cb) => {\n        console.log(\"in new issue page\")\n        return props.onCreateAttachmentRequest(props.match.params.projectId, issueId, attachmentData, cb);\n    }\n\n    const addNewIssue = async (newIssue, cb) => {\n        const attachments = newIssue.attachments;\n        delete newIssue.attachments;\n\n        const createAnother = newIssue.createAnother;\n        delete newIssue.createAnother;\n        \n        const issue = await props.onSubmit(props.match.params.projectId, newIssue);\n        \n        let callbacks = cb(null);\n        const promises = [];\n        attachments && attachments.forEach(file => {\n            callbacks = cb(file);\n            const data = new FormData();\n            data.append('attachments', file);\n            promises.push(addIssueAttachment(issue.id, data, callbacks.progressCb));\n        })\n\n        const attachmentHandles = await Promise.all(promises)\n            .then(responses => responses.map(response => response.data.id))\n            .then(data => {\n                callbacks.successCb();\n                return data;\n            })\n            .catch(err => callbacks.failureCb(err));\n\n        props.onAddAttachment(props.match.params.projectId, issue.id, attachmentHandles);\n\n        notificationBanner.showNotificationWithText(\"Issue successfully added!\");\n\n        setRedirect(createAnother ? false : true);\n    }\n\n    return (\n        redirect === true ? \n            <Redirect to={`/projects/${props.match.params.projectId}/issues`} /> :\n            <Container fluid className=\"page\">\n                <NewIssueForm onSubmit={addNewIssue} collaborators={collaborators.data}/>\n            </Container>\n    )\n}\n\nexport default NewIssuePage;","import React from 'react';\nimport { Nav } from 'react-bootstrap';\n\nimport LinkButton from '../../display/Button/LinkButton';\nimport NavBar from '../../display/NavBar/NavBar';\n\nfunction IssueNavBar({ render }) {\n    return (\n        <NavBar title=\"Issues\" bg=\"light\" expand=\"lg\" render={() => (\n            <Nav>\n                {render()}\n                <LinkButton to=\"issues/new\" variant=\"outline-dark\" className=\"m-sm-1\">Add New Issue</LinkButton>\n            </Nav>\n        )}/>\n    )\n}\n\nexport default IssueNavBar;","import React from 'react';\nimport { useFilteredItems } from '../../../hooks/useFilteredItems';\nimport { useGroupedItems } from '../../../hooks/useGroupedItems';\n\nimport { Table } from 'react-bootstrap';\n\nimport './TableList.css';\n\nconst MyTable = (props) => (\n    <Table bordered striped responsive className=\"table\">\n        <thead className=\"table-header\">\n            <tr className=\"table-header-group\"><td colSpan=\"8\">{props.groupName}</td></tr>\n            <tr key=\"table-header\">\n                {\n                    props.headerKeys.map(key => <th key={`table-header-${key}`}>{key}</th>)\n                }\n                <th></th>\n            </tr>\n        </thead>\n        <tbody className=\"table-body\">\n            {\n                props.data.map(item => (\n                    <tr key={item.id}>\n                        {\n                            props.headerKeys.map(key => (\n                                <td key={`${item.id}-${key}`}>{item[key]}</td>\n                            ))\n                        }\n                        <td key={`${item.id}-options`}>\n                            {props.children ? props.children(item) : null}\n                        </td>\n                    </tr>\n                ))\n            }\n        </tbody>\n    </Table>\n)\n\nfunction TableList({ \n    listItems, \n    headerKeys, \n    groupKey = null, \n    groupValues = null, \n    orderBy = 'asc', \n    filter = null, \n    searchText = \"\", \n    searchKeys = [],\n    renderButtons\n}) {\n    const filteredItems = useFilteredItems(listItems, filter, searchText, searchKeys);\n    const groupedItems = useGroupedItems(filteredItems, groupKey);\n\n    let groupNames = Object.keys(groupedItems);\n\n    return groupedItems && (groupNames.length > 0) ? (\n        groupNames.map(group => \n            <MyTable headerKeys={headerKeys} data={groupedItems[group]} groupName={group + 's'} >\n                {renderButtons}\n            </MyTable>\n        )\n    ) : (\n        <MyTable headerKeys={headerKeys} data={groupedItems} groupName={\"All\"} >\n            {renderButtons}\n        </MyTable>\n    )\n}\n\n\nexport default TableList;","import React from 'react';\nimport { Button, Dropdown, DropdownButton, ButtonGroup, ButtonToolbar } from 'react-bootstrap';\nimport LinkButton from '../../display/Button/LinkButton';\n\nconst IssueListButtonToolbar = ({ projectId, issue, onDelete, onAssign, onStart, onClose }) => {\n    const handleDeleteIssue = () => onDelete({ projectId: projectId, issueId: issue.id });\n    const handleAssignIssue = () => onAssign({ projectId: projectId, issueId: issue.id });\n    const handleStartIssue = () => onStart({ projectId: projectId, issueId: issue.id });\n    const handleCloseIssue = () => onClose({ projectId: projectId, issueId: issue.id });\n    const handleAdvanceIssueClick = (e) => {\n        if(issue.status === \"unassigned\") return handleAssignIssue(e);\n        if(issue.status === \"open\") return handleStartIssue(e);\n        if(issue.status === \"inprogress\") return handleCloseIssue(e);\n    }\n\n    const advanceIssueButtonText = () => {\n        if(issue.status === \"unassigned\") return \"Assign\"\n        if(issue.status === \"open\" || issue.status === \"inprogress\") return \"Advance\"\n        if(issue.status === \"resolved\") return \"Resolved\";\n        return \"Closed\";\n    }\n\n    return (\n        <ButtonToolbar style={{width: '100%'}}>\n            <ButtonGroup>\n                <LinkButton variant=\"primary\" to={`/projects/${projectId}/issues/${issue.id}`}>View</LinkButton>\n                <Button \n                    variant=\"primary\" \n                    onClick={handleAdvanceIssueClick}\n                    disabled={issue.status === \"resolved\" || issue.status === \"closed\"}\n\n                >\n                    {advanceIssueButtonText()}\n                </Button>\n                <DropdownButton as={ButtonGroup} variant=\"secondary\" title=\"Settings\">\n                    <Dropdown.Item >Edit Issue</Dropdown.Item>\n                    <Dropdown.Item onClick={handleDeleteIssue}>Delete Issue</Dropdown.Item>\n                </DropdownButton>\n            </ButtonGroup>\n        </ButtonToolbar>\n    )\n}\n\nexport default IssueListButtonToolbar;","import React from 'react';\nimport { Card } from 'react-bootstrap';\nimport IssueListButtonToolbar from './IssueListButtonToolbar';\n\nfunction IssueListOverviewCard({ projectId, issue, ...props }) {\n    return (\n        <Card style={{ height: '100%', width: '100%', display: 'flex', flexDirection: 'row', alignItems: \"center\" }}>\n            <Card.Body style={{ flex: 5 }}>\n                <Card.Title>{issue.title}</Card.Title>\n                <Card.Text>\n                    {issue.description}\n                </Card.Text>\n            </Card.Body>\n\n            <Card.Body style={{ flex: 1, height: \"100%\", borderLeft: '1px solid black' }}>\n                <Card.Title>Category</Card.Title>\n                <Card.Text>\n                    {issue.category}\n                </Card.Text>\n            </Card.Body>\n\n            <Card.Body style={{ flex: 1, borderLeft: '1px solid black' }}>\n                <Card.Title>Priority</Card.Title>\n                <Card.Text>\n                    {issue.priority}\n                </Card.Text>\n            </Card.Body>\n\n            <Card.Body style={{ flex: 1, borderLeft: '1px solid black' }}>\n                <Card.Title>Status</Card.Title>\n                <Card.Text>\n                    {issue.status}\n                </Card.Text>\n            </Card.Body>\n\n            <Card.Body style={{ flex: 1, borderLeft: '1px solid black' }}>\n                <Card.Title>Assigned</Card.Title>\n                <Card.Text>\n                    {issue.assignee ? issue.assignee : \"None\"}\n                </Card.Text>\n            </Card.Body>\n\n            <Card.Body style={{ flex: 2, height: \"100%\", borderLeft: '1px solid black' }}>\n                <IssueListButtonToolbar \n                    projectId={projectId} issue={issue} {...props}\n                />\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default IssueListOverviewCard;","import React from 'react';\nimport TableList from '../../display/TableList/TableList';\nimport List from '../../display/List/List';\nimport IssueListOverviewCard from './IssueListOverviewCard';\nimport IssueListButtonToolbar from './IssueListButtonToolbar';\n\nconst issueDisplayParameters = [\"title\", \"category\", \"priority\", \"status\", \"assignee\"];\n\nconst groups = { \n    priority: ['trivial', 'low', 'regular', 'high', 'critical'],\n    category: ['other', 'task', 'feature', 'bug'],\n    status: ['closed', 'resolved', 'inprogresss', 'open', 'unassigned'] \n}\n\nfunction IssueList({ projectId, issueList, groupBy, orderBy, filter, searchText, searchKeys, ...props }) {\n    return issueList && issueList.length > 0 ?\n        (props.viewAs === '2' ? \n            <TableList \n                listItems={issueList} \n                headerKeys={issueDisplayParameters}\n                groupKey={groupBy}\n                groupValues={groups[groupBy]}\n                orderBy={orderBy}\n                filter={filter}\n                searchText={searchText}\n                searchKeys={searchKeys}\n                renderButtons={item => <IssueListButtonToolbar projectId={projectId} issue={item} {...props} />}\n            /> : <List\n                listItems={issueList} \n                groupKey={groupBy}\n                groupValues={groups[groupBy]}\n                orderBy={orderBy}\n                filter={filter}\n                searchText={searchText}\n                searchKeys={searchKeys}\n                render={item => <IssueListOverviewCard projectId={projectId} issue={item} {...props} />}\n            />\n        )\n        : \n        <div className=\"empty-list-message\">\n            <span>There are currently no issues to display for this project. </span> \n            <a href=\"issues/new\">Click here </a> \n            <span>to create an issue.</span>\n        </div>\n}\n\nexport default IssueList;","import React, { useState } from 'react';\nimport { Dropdown, DropdownButton, ButtonGroup } from 'react-bootstrap';\nimport './IssueFilterControl.css';\n\nfunction Checkmark({ checked, name, id, onClick }) {\n    return (\n        <div className=\"checkmark\" id={id} name={name} onClick={onClick}>\n            {checked ? \"\\u2713\" : \"\"}\n        </div>\n    )\n}\n\nfunction IssueFilterControl(props) {\n    const [isOpen, setOpen] = useState(false);\n\n    const toggleShow = (open, event, meta) => {\n        if(meta.source !== \"select\") setOpen(open);\n    }\n\n    const handleSelectGroup = (group) => {\n        props.onSelect(\"group\", group);\n    }\n\n    const handleSelectOrder = (order) => {\n        props.onSelect(\"order\", order);\n    }\n\n    const handleSelectFilter = (filter) => {\n        const [filterKey, filterValue] = filter.split(\" \");\n        const newValues = { ...props.filters[filterKey] };\n        newValues[filterValue] = !newValues[filterValue];\n        const filters = { ...props.filters, [filterKey]: newValues };\n        props.onSelect(\"filter\", filters);\n    }\n\n    const setAllFiltersTo = (key, newValue) => {\n        const filterKeys = Object.keys(props.filters);\n        const filters = { ...props.filters };\n        if(key === \"\") {\n            filterKeys.forEach(filterKey => {\n                Object.keys(props.filters[filterKey]).forEach(value => {\n                    filters[filterKey][value] = newValue;\n                });\n            });\n        } else {\n            Object.keys(props.filters[key]).forEach(value => {\n                filters[key][value] = newValue;\n            });\n        }\n        props.onSelect(\"filter\", filters);\n    }\n\n    const checkAllFilters = (key = \"\") => { setAllFiltersTo(key, true); }\n    const uncheckAllFilters = (key = \"\") => { setAllFiltersTo(key, false); }\n\n    const isCleared = (key = \"\") => {\n        const filters = { ...props.filters };\n        let cleared = true;\n        if(key === \"\") {\n            const filterKeys = Object.keys(props.filters);\n            filterKeys.forEach(filterKey => {\n                Object.keys(props.filters[filterKey]).forEach(value => {\n                    if(filters[filterKey][value] === true) cleared = false;\n                });\n            });\n        } else {\n            Object.keys(props.filters[key]).forEach(value => {\n                if(filters[key][value] === true) cleared = false;\n            });\n        }\n        return cleared;\n    }\n\n    const handleToggleAll = () => {\n        isCleared() ? checkAllFilters() : uncheckAllFilters()\n    }\n\n    const handleToggleFilterKey = (key) => {\n        isCleared(key) ? checkAllFilters(key) : uncheckAllFilters(key)\n    }\n\n    return (\n        <ButtonGroup className={props.className}>\n            <DropdownButton className=\"m-1\" variant=\"outline-primary\" title=\"Group by\" onSelect={handleSelectGroup}>\n                <Dropdown.Item eventKey=\"none\">None</Dropdown.Item>\n                <Dropdown.Item eventKey=\"category\">Category</Dropdown.Item>\n                <Dropdown.Item eventKey=\"status\">Status</Dropdown.Item>\n                <Dropdown.Item eventKey=\"priority\">Priority</Dropdown.Item>\n            </DropdownButton>\n\n            <DropdownButton className=\"m-1\" variant=\"outline-primary\" title=\"Order\" onSelect={handleSelectOrder}>\n                <Dropdown.Item eventKey=\"asc\">Ascending</Dropdown.Item>\n                <Dropdown.Item eventKey=\"desc\">Desccending</Dropdown.Item>\n            </DropdownButton>\n\n            <DropdownButton show={isOpen} className=\"filterDropdown m-1\" variant=\"outline-primary\" title=\"Filter\" menuAlign=\"right\" onSelect={handleSelectFilter} onToggle={toggleShow}>\n                <div className=\"filters\">\n                    <div className=\"dropdown-item-group\">\n                        <Dropdown.Header>Category</Dropdown.Header>\n                        <Dropdown.Item eventKey=\"category bug\">\n                            <Checkmark name=\"bug\" id=\"checkbox-bug\" checked={props.filters.category.bug} />\n                            <label htmlFor=\"checkbox-bug\">Bug</label>\n                        </Dropdown.Item>\n                        <Dropdown.Item eventKey=\"category feature\">\n                            <Checkmark name=\"feature\" id=\"checkbox-feature\" checked={props.filters.category.feature} />\n                            <label htmlFor=\"checkbox-feature\">Feature</label>\n                        </Dropdown.Item>\n                        <Dropdown.Item eventKey=\"category task\">\n                            <Checkmark name=\"task\" id=\"checkbox-task\" checked={props.filters.category.task} />\n                            <label htmlFor=\"checkbox-task\">Task</label>\n                        </Dropdown.Item>\n                        <Dropdown.Item eventKey=\"category other\">\n                            <Checkmark name=\"other\" id=\"checkbox-other\" checked={props.filters.category.other} />\n                            <label htmlFor=\"checkbox-other\">Other</label>\n                        </Dropdown.Item>\n                        <Dropdown.ItemText onClick={() => { handleToggleFilterKey(\"category\") }}>{isCleared() ? \"All\" : \"Clear\"}</Dropdown.ItemText>\n                    </div>\n                    \n                    <div className=\"dropdown-item-group\">\n                        <Dropdown.Header>Priority</Dropdown.Header>\n                        <Dropdown.Item eventKey=\"priority critical\">\n                            <Checkmark name=\"critical\" id=\"checkbox-critical\" checked={props.filters.priority.critical} />\n                            <label htmlFor=\"checkbox-critical\">Critical</label>\n                        </Dropdown.Item>\n                        <Dropdown.Item eventKey=\"priority high\">\n                            <Checkmark name=\"high\" id=\"checkbox-high\" checked={props.filters.priority.high} />\n                            <label htmlFor=\"checkbox-high\">High</label>\n                        </Dropdown.Item>\n                        <Dropdown.Item eventKey=\"priority regular\">\n                            <Checkmark name=\"regular\" id=\"checkbox-regular\" checked={props.filters.priority.regular} />\n                            <label htmlFor=\"checkbox-regular\">Regular</label>\n                        </Dropdown.Item>\n                        <Dropdown.Item eventKey=\"priority low\">\n                            <Checkmark name=\"low\" id=\"checkbox-low\" checked={props.filters.priority.low} />\n                            <label htmlFor=\"checkbox-low\">Low</label>\n                        </Dropdown.Item>\n                        <Dropdown.Item eventKey=\"priority trivial\">\n                            <Checkmark name=\"trivial\" id=\"checkbox-trivial\" checked={props.filters.priority.trivial} />\n                            <label htmlFor=\"checkbox-trivial\">Trivial</label>\n                        </Dropdown.Item>\n                        <Dropdown.ItemText onClick={() => { handleToggleFilterKey(\"priority\") }}>{isCleared() ? \"All\" : \"Clear\"}</Dropdown.ItemText>\n                    </div>\n\n                    <div className=\"dropdown-item-group\">\n                        <Dropdown.Header>Status</Dropdown.Header>\n                        <Dropdown.Item eventKey=\"status unassigned\">\n                            <Checkmark name=\"unassigned\" id=\"checkbox-unassigned\" checked={props.filters.status.unassigned} />\n                            <label htmlFor=\"checkbox-unassigned\">Unassigned</label>\n                        </Dropdown.Item>\n                        <Dropdown.Item eventKey=\"status open\">\n                            <Checkmark name=\"open\" id=\"checkbox-open\" checked={props.filters.status.open} />\n                            <label htmlFor=\"checkbox-open\">Open</label>\n                        </Dropdown.Item>\n                        <Dropdown.Item eventKey=\"status inprogress\">\n                            <Checkmark name=\"inprogress\" id=\"checkbox-inprogress\" checked={props.filters.status.inprogress} />\n                            <label htmlFor=\"checkbox-inprogress\">In-progress</label>\n                        </Dropdown.Item>\n                        <Dropdown.Item eventKey=\"status resolved\">\n                            <Checkmark name=\"resolved\" id=\"checkbox-resolved\" checked={props.filters.status.resolved} />\n                            <label htmlFor=\"checkbox-resolved\">Resolved</label>\n                        </Dropdown.Item>\n                        <Dropdown.Item eventKey=\"status closed\">\n                            <Checkmark name=\"closed\" id=\"checkbox-closed\" checked={props.filters.status.closed} />\n                            <label htmlFor=\"checkbox-closed\">Closed</label>\n                        </Dropdown.Item>\n                        <Dropdown.ItemText onClick={() => { handleToggleFilterKey(\"status\") }}>{isCleared() ? \"All\" : \"Clear\"}</Dropdown.ItemText>\n                    </div>\n                    <Dropdown.ItemText onClick={handleToggleAll}>{isCleared() ? \"Check All\" : \"Clear All\"}</Dropdown.ItemText>\n                </div>\n            </DropdownButton>\n        </ButtonGroup>\n    )\n}\n\nexport default IssueFilterControl;","import React, { useState, useRef, useEffect } from 'react';\nimport { Col } from 'react-bootstrap';\nimport './withEdit.css';\n\nconst withEdit = (WrappedComponent, type) => (\n    ({ onEdit, name, isEditing = false, ...props }) => { // isEditing prop is used to force editing mode from outside\n        const [editing, setEditing] = useState(isEditing);\n        const [value, setValue] = useState(props.value);\n        const inputRef = useRef();\n\n        useEffect(() => {\n            inputRef && inputRef.current && inputRef.current.focus();\n        }, [editing, isEditing]);\n\n        const handleClick = () => {\n            if(isEditing) return;\n            setEditing(true);\n        }\n\n        const handleKeyPress = (e) => {\n            if(e.key === \"Enter\") {\n                handleSubmit(e);\n            }\n        }\n\n        const handleChange = (e) => {\n            setValue(e.target.value);\n        }\n\n        const handleBlur = () => {\n            (props.onBlur && props.onBlur()) || setEditing(false);\n        }\n\n        const handleSubmit = (e) => {\n            e.preventDefault();\n            onEdit({ [inputRef.current.name]: value });\n            setEditing(false);\n        }\n\n        const inputComponent = () => {\n            if(type === \"text\") {\n                return (\n                    <input \n                        ref={inputRef} \n                        name={name}\n                        type={type} \n                        defaultValue={value} \n                        onChange={handleChange} \n                    />\n                )\n            } else if(type === \"textarea\") {\n                return (\n                    <textarea \n                        ref={inputRef}\n                        name={name} \n                        defaultValue={value} \n                        rows={5}\n                        cols={75}\n                        onChange={handleChange} \n                        onKeyPress={handleKeyPress}\n                    />\n                )\n            } else if(type === \"select\") {\n                return (\n                    <select\n                        ref={inputRef}\n                        name={name}\n                        defaultValue={value}\n                        onChange={handleChange}\n                        onKeyPress={handleKeyPress}\n                    >\n                        {\n                            props.options && props.options.map((opt, idx) => (\n                                <option key={idx} value={opt}>\n                                    {opt}\n                                </option>\n                            ))\n                        }\n                    </select>\n                )\n            }\n            return null;\n        }\n\n        return editing ? (\n            <Col xs={props.xs} sm={props.sm} md={props.md} lg={props.lg}>\n                <form onBlur={handleBlur} onSubmit={handleSubmit}>\n                    {inputComponent()}\n                </form>\n            </Col>\n        ) : (\n            <div className=\"component-wrapper\">\n                <WrappedComponent {...props} onClick={handleClick}>\n                    {props.children}\n                </WrappedComponent>\n            </div>\n        )\n    }\n)\n\nexport default withEdit;","const getNthIndexOf = (string, searchTerm, n) => {\n    let i = 0, index = 0;\n\n    while(i < n && index >= 0) {\n        index = string.indexOf(searchTerm, index + 1);\n        i++;\n    }\n\n    return index;\n}\n\nexport const removeTimezoneFromDateString = (dateString) => {\n    const index = getNthIndexOf(dateString, \" \", 5);\n    const res = dateString.slice(0, index);\n    return res;\n} \n","export default __webpack_public_path__ + \"static/media/edit-icon-png-small.4aeb2e4d.png\";","import React, { useState } from 'react';\nimport { Row, Col, Dropdown } from 'react-bootstrap';\nimport List from '../../display/List/List';\nimport withEdit from '../../hocs/withEdit/withEdit';\nimport { removeTimezoneFromDateString } from '../../../utility/strings';\nimport editIcon from '../../../images/edit-icon-png-small.png';\n\n\nconst commentBoxStyle = {\n    width: \"50vw\",\n    height: \"100%\",\n    margin: \"1em\",\n};\n\nconst CustomToggle = React.forwardRef(({ onClick }, ref) => (\n    <img \n        alt=\"\"\n        src={editIcon}\n        width=\"25\"\n        height=\"25\"\n\n        ref={ref}\n        onClick={onClick}\n    />\n));\n\nfunction CommentList(props) {\n    const [editId, setEditId] = useState(null);\n\n    const EditArea = withEdit(Col, 'textarea');\n\n    const handleDropdownSelect = (e, id) => {\n        if(e === \"delete\") return props.onDelete({ commentId: id });\n        if(e === \"edit\") return showEditArea(id);\n    }\n\n    const showEditArea = (commentId) => {\n        setEditId(commentId);\n    } \n\n    const handleEditComment = (comment) => {\n        props.onEdit(editId, comment);\n        setEditId(null);\n    }\n\n    return (\n        <List listItems={props.comments} render={(item) => (\n            <Row style={commentBoxStyle} key={item.id}>\n                <Col lg={11} md={11} sm={10} xs={9}>\n                {\n                    \"Posted By: \" + \n                    item.creator + \n                    \" on \" + \n                    removeTimezoneFromDateString(new Date(item.created_at).toString()) \n                }\n                </Col>\n                <Col lg={1} md={1} sm={2} xs={3}>\n                    <Dropdown onSelect={evt => handleDropdownSelect(evt, item.id)}>\n                        <Dropdown.Toggle as={CustomToggle} />\n\n                        <Dropdown.Menu>\n                            <Dropdown.Item eventKey=\"edit\">Edit</Dropdown.Item>\n                            <Dropdown.Item eventKey=\"delete\">Delete</Dropdown.Item>\n                        </Dropdown.Menu>\n                    </Dropdown>\n                </Col>\n                <EditArea \n                    lg={11} md={11} sm={11} xs={11}\n                    name=\"body\"\n                    value={item.body}\n                    isEditing={editId === item.id}\n                    onEdit={handleEditComment}\n                    onBlur={() => setEditId(null)}\n                >\n                    {item.body}\n                </EditArea>\n            </Row>\n        )}/>\n    )\n}\n\nexport default CommentList;","import React from 'react';\nimport { Modal, Button } from 'react-bootstrap';\n\nfunction DialogBox({\n    show,\n    heading,\n    closeButtonText,\n    submitButtonText,\n    onSubmit,\n    onClose,\n    render,\n    renderData,\n    formId = null,\n}) {\n    return (\n        <Modal show={show} onHide={onClose}>\n            <Modal.Header closeButton>\n                <Modal.Title>{heading ? heading : \"\"}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>{render({ data: renderData })}</Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={onClose}>\n                    {closeButtonText ? closeButtonText : \"Close\"}\n                </Button>\n                <Button variant=\"primary\" type=\"submit\" form={formId} onClick={onSubmit}>\n                    {submitButtonText ? submitButtonText : \"Submit\"}\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    )\n}\n\n\nexport default DialogBox;","import { useState } from 'react';\nimport DialogBox from '../components/display/DialogBox/DialogBox';\n\nfunction extractInputValues(nodeList) {\n    if(nodeList.length === 0) return {};\n    const values = {};\n    \n    nodeList.forEach(input => { \n        values[input.name] = input.value;\n    });\n\n    return values;\n}\n\nfunction useDialogBox() {\n    const [visible, setVisible] = useState(false);\n    const [data, setData] = useState({});\n\n    const show = (data) => {\n        setData(data);\n        setVisible(true);\n    }\n\n    const hide = () => {\n        setVisible(false);\n    }\n\n    const RenderDialogBox = (props) => {\n        const handleSubmit = (event) => {\n            const evt = event;\n            evt.preventDefault();\n            const values = evt.target.form && extractInputValues(evt.target.form.childNodes);\n            typeof props.onSubmit === \"function\" && props.onSubmit({ data, values });\n            hide();\n        }\n\n        return <DialogBox {...props} onSubmit={handleSubmit} show={visible} renderData={data} onClose={hide}/>\n    };\n\n    return {\n        show, RenderDialogBox\n    }\n}\n\nexport default useDialogBox;","import React from 'react';\nimport { Nav, Button } from 'react-bootstrap';\n\nimport LinkButton from '../../display/Button/LinkButton';\nimport NavBar from '../../display/NavBar/NavBar';\nimport './Navigation.css';\n\nfunction IssueDetailNavBar({ title, linkUrl, ...props }) {\n    return (\n        <NavBar title={\"Issue: \" + title} {...props} bg=\"light\" sticky=\"top\" render={() => (\n            <Nav>\n                {props.render && typeof props.render === \"function\" && props.render()}\n                <LinkButton variant=\"outline-dark\" to={linkUrl ? linkUrl + \"/new\" : \"./new\"}>Add New Issue</LinkButton>\n            </Nav>\n        )}/>    \n    )\n}\n\n\n\n\nexport default IssueDetailNavBar;","import React, { useState } from 'react';\nimport Upload from '../../form/inputs/Upload/Upload';\nimport './Attachments.css'\n\nfunction Attachments(props) {\n    const [uploading, setUploading] = useState(false);\n    const renderAttachmentItems = () => {\n        const items = [];\n        props.attachments && props.attachments.forEach((attachment, idx) => {\n            items.push(\n                <li key={`attachment-${idx}`}>\n                    <span>{attachment.filename}</span>{\" \"}\n                    <a href={attachment.data} download={attachment.filename}>Download</a>{\" \"}\n                    <button className=\"link\" onClick={() => props.onDelete(attachment.id)}>Remove</button>\n                </li>\n            )\n        });\n        return items;\n    }\n\n    return (\n        <>\n            <ul className=\"attachments-list\">\n                {\n                    renderAttachmentItems()\n                }   \n            </ul>\n            {uploading ? \n                <Upload \n                    sendRequest={props.onCreate}\n                    onComplete={props.onComplete}\n                    onClose={() => { setUploading(false) }}\n                /> \n                : <button \n                    className=\"link\" \n                    onClick={() => { setUploading(true) }}\n                >\n                    Add Attachment\n                </button>\n            }\n        </>\n    );\n}\n\nexport default Attachments;","import React from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport { Row, Col } from 'react-bootstrap';\nimport { IssueSchema } from '../../utility/schema/validation';\n\n\nfunction EditIssueDetailsForm(props) {\n    return(\n        <Formik\n            initialValues={{ \n                title: props.initialTitle,\n                description: props.initialDescription,\n                category: props.initialCategory,\n                priority: props.initialPriority\n            }}\n            onSubmit={(values) => {\n                props.onSubmit(values);\n            }}\n            validationSchema={IssueSchema}\n        >\n            {() => (\n                <Form id=\"edit-issue-form\" >\n                    <Row className=\"justify-content-center title\">\n                        <Col>\n                            <Field name=\"title\" type=\"text\" className=\"form-input\" />\n                            <span className=\"form-error\">\n                                <ErrorMessage name=\"title\" />\n                            </span>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col lg={4} md={4} sm={4} xs={4}>\n                            <label htmlFor=\"description\">Description</label>\n                        </Col>\n                        <Col lg={6} md={6} sm={6} xs={6}>\n                            <Field name=\"description\" as=\"textarea\" className=\"form-input\" />\n                            <span className=\"form-error\">\n                                <ErrorMessage name=\"description\" className=\"form-error\" />\n                            </span>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col lg={4} md={4} sm={4} xs={4}>\n                            <label htmlFor=\"category\">Category</label>\n                        </Col>\n                        <Col lg={6} md={6} sm={6} xs={6}>\n                            <Field name=\"category\" as=\"select\" className=\"form-input\">\n                                <option value=\"bug\">Bug</option>\n                                <option value=\"feature\">Feature</option>\n                                <option value=\"task\">Task</option>\n                                <option value=\"other\">Other</option>\n                            </Field>\n                            <span className=\"form-error\">\n                                <ErrorMessage name=\"category\" className=\"form-error\" />\n                            </span>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col lg={4} md={4} sm={4} xs={4}>\n                            <label htmlFor=\"priority\">Priority</label>\n                        </Col>\n                        <Col lg={6} md={6} sm={6} xs={6}>\n                            <Field name=\"priority\" as=\"select\" className=\"form-input\">\n                                <option value=\"trivial\">Trivial</option>\n                                <option value=\"low\">Low</option>\n                                <option value=\"regular\">Regular</option>\n                                <option value=\"high\">High</option>\n                                <option value=\"critical\">Critical</option>\n                            </Field>\n                            <span className=\"form-error\">\n                                <ErrorMessage name=\"priority\" className=\"form-error\" />\n                            </span>\n                        </Col>\n                    </Row>\n                </Form>\n            )}\n        </Formik>\n    )\n}\n\nexport default EditIssueDetailsForm;","import React, { useState } from 'react';\nimport { Container, Row, Col, Button, Form } from 'react-bootstrap';\nimport CommentList from '../../components/app/CommentList/CommentList';\nimport useResource from '../../hooks/useResource';\nimport useAuth from '../../hooks/useAuth';\nimport useDialogBox from '../../hooks/useDialogBox';\nimport withEdit from '../../components/hocs/withEdit/withEdit';\nimport issuesApi from '../../api/issues';\nimport IssueDetailNavBar from '../../components/app/Navigation/IssueDetailNavBar';\nimport Attachments from '../../components/app/Attachments/Attachments';\nimport LinkButton from '../../components/display/Button/LinkButton';\nimport { removeTimezoneFromDateString } from '../../utility/strings';\nimport './IssueDetails.css';\nimport EditIssueDetailsForm from '../../components/form/EditIssueDetailsForm';\n\nfunction IssueDetails({ issue, onEdit, ...props }) {\n    const auth = useAuth();\n    const [attachments, setAttachments, getAttachments] = useResource(\n        `/api/projects/${props.match.params.projectId}/issues/${props.match.params.issueId}/attachments`,\n        auth.user ? auth.user.token : null,\n        issue.attachmentHandles\n    )\n    const [comments, setComments] = useResource(\n        `/api/projects/${props.match.params.projectId}/issues/${props.match.params.issueId}/comments`,\n        auth.user ? auth.user.token : null\n    );\n    const [editMode, setEditMode] = useState(false);\n    const { show: showDeleteCommentDialogBox, RenderDialogBox: DeleteCommentDialogBox } = useDialogBox();\n\n    const EditSelect = withEdit(Col, \"select\");\n\n    const handleEditIssue = async (values) => {\n        //Remove the fields that have not been changed\n        for(let key in values) \n            if(values[key] === issue[key]) delete values[key];\n\n        await onEdit(props.match.params.projectId, issue.id, values);\n\n        setEditMode(false);\n    }\n\n    const handleAddComment = async (e) => {\n        e.preventDefault();\n        const commentData = e.target[1].value\n        const newComment = await issuesApi.addComment(props.match.params.projectId, issue.id, commentData, auth.user.token);\n        setComments(prev => {\n            const comments = prev.data.slice();\n            comments.push(newComment);\n            return { ...prev, data: comments }\n        });\n        const commentBox = document.querySelector(\"textarea#comment\");\n        commentBox.value = \"\";\n    }\n\n    const handleDeleteComment = async ({ data }) => {\n        console.log(\"Deleting comment\", data);\n        await issuesApi.deleteComment(props.match.params.projectId, issue.id, data.commentId, auth.user.token);\n        setComments(prev => {\n            const comments = prev.data.slice();\n            const commentIdx = comments.findIndex(comment => comment.id === data.commentId);\n            if(commentIdx !== -1) comments.splice(commentIdx, 1);\n            return { ...prev, data: comments };\n        })\n    }\n\n    const handleEditComment = async (commentId, commentData) => {\n        const comment = await issuesApi.updateComment(\n            props.match.params.projectId, \n            issue.id, \n            commentId, \n            commentData.body, \n            auth.user.token\n        );\n        setComments(prev => {\n            const comments = prev.data.slice();\n            const commentIdx = comments.findIndex(comment => comment.id === commentId);\n            comments[commentIdx] = comment;\n            return { ...prev, data: comments };\n        })\n    }\n\n    const advanceButtonText = (issue.status === \"unassigned\") ? \"Assign Issue\" :\n        (issue.status === \"open\") ? \"Advance Issue\" :\n        (issue.status === \"inprogress\") ? \"Close Issue\" : \n        issue.status;\n\n    const handleAdvanceIssue = () => {\n        if(issue.status === \"unassigned\") return props.onAssign({ projectId: props.match.params.projectId, issueId: issue.id });\n        if(issue.status === \"open\") return props.onStart({ projectId: props.match.params.projectId, issueId: issue.id });\n        return props.onClose({ projectId: props.match.params.projectId, issueId: issue.id });\n    }\n\n    return (\n        <>\n            <IssueDetailNavBar title={issue.title} render={() => {\n                return (\n                    <> \n                        <Button\n                            className=\"stick-left\"\n                            onClick={() => { props.history.goBack() }\n                        }>Back to All Issues</Button>\n                        {editMode &&\n                            <>\n                                <Button\n                                    variant=\"outline-dark\" \n                                    className=\"mx-1\" \n                                    form=\"edit-issue-form\"\n                                    type=\"submit\"\n                                >\n                                    Save\n                                </Button>\n                            \n                                <Button\n                                    variant=\"outline-dark\" \n                                    className=\"mx-1\" \n                                    onClick={() => setEditMode(false)}\n                                >\n                                    Cancel\n                                </Button>\n                            </>\n                        }\n                        {!editMode &&\n                            <Button \n                                variant=\"outline-dark\" \n                                className=\"mx-1\" \n                                onClick={() => { setEditMode(true) }}\n                            >\n                                Edit\n                            </Button>\n                        }\n                    </>\n                )\n            }}/>\n            <Container className=\"IssueDetails\" fluid>\n                <DeleteCommentDialogBox \n                    heading=\"Delete Project\"\n                    closeButtonText=\"Cancel\"\n                    submitButtonText=\"Delete\"\n                    onSubmit={handleDeleteComment}\n                    render={({ data }) => 'Are you sure you would like to delete this comment: ' + data.commentId + '?'}\n                />\n                {editMode ?\n                    <EditIssueDetailsForm \n                        initialTitle={issue.title} \n                        initialDescription={issue.description}\n                        initialCategory={issue.category}\n                        initialPriority={issue.priority}\n                        onSubmit={handleEditIssue}\n                    /> \n                    : \n                    <>\n                        <Row className=\"justify-content-center title\">\n                            <h3>{issue.title}</h3>\n                        </Row>\n\n                        <Row>\n                            <Col lg={4} md={4} sm={4} xs={4}>Description</Col>\n                            <Col \n                                as=\"p\" lg={6} md={6} sm={6} xs={6}\n                                name=\"description\" \n                            >\n                                {issue.description}\n                            </Col>\n                        </Row>\n\n                        <Row>\n                            <Col lg={4} md={4} sm={4} xs={4}>Category</Col>\n                            <EditSelect \n                                as=\"p\" lg={6} md={6} sm={6} xs={6}\n                                value={issue.category} \n                                name=\"category\" \n                                onEdit={handleEditIssue} \n                                options={[\"bug\", \"feature\", \"task\", \"other\"]}\n                            >\n                                {issue.category}\n                            </EditSelect>\n                        </Row>\n\n                        <Row>\n                            <Col lg={4} md={4} sm={4} xs={4}>Priority</Col>\n                            <EditSelect \n                                as=\"p\" lg={6} md={6} sm={6} xs={6}\n                                value={issue.priority} \n                                name=\"priority\" \n                                onEdit={handleEditIssue} \n                                options={[\"critical\", \"high\", \"regular\", \"low\", \"trivial\"]}\n                            >\n                                {issue.priority}\n                            </EditSelect>\n                        </Row>\n                    </>\n                }\n\n                <Row>\n                    <Col lg={4} md={4} sm={4} xs={4}>Status</Col>\n                    <Col as=\"p\" lg={6} md={6} sm={6} xs={6}>\n                        {issue.status}\n                        {\n                            <Button \n                                className=\"mx-1\" size=\"sm\" \n                                hidden={issue.status === \"resolved\" || issue.status === \"closed\"}\n                                onClick={handleAdvanceIssue}\n                            >\n                                {advanceButtonText}\n                            </Button>\n                        } \n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col lg={4} md={4} sm={4} xs={4}>Created on</Col>\n                    <Col as=\"p\" lg={6} md={6} sm={6} xs={6}>{removeTimezoneFromDateString(new Date(issue.created_at).toString())}</Col>\n                </Row>\n\n                <Row>\n                    <Col lg={4} md={4} sm={4} xs={4}>Created by</Col>\n                    <Col as=\"p\" lg={6} md={6} sm={6} xs={6}>{issue.creator}</Col>\n                </Row>\n\n                <Row>\n                    <Col lg={4} md={4} sm={4} xs={4}>Assigned to</Col>\n                    <Col as=\"p\" lg={6} md={6} sm={6} xs={6}>{issue.assignee ? issue.assignee : \"Unassigned\"}</Col>\n                </Row>\n\n                <Row>\n                    <Col lg={4} md={4} sm={4} xs={4}>Assigned on</Col>\n                    <Col as=\"p\" lg={6} md={6} sm={6} xs={6}>{(issue.opened_at) ? removeTimezoneFromDateString(new Date(issue.opened_at).toString()) : \"N/A\"}</Col>\n                </Row>\n\n                <Row>\n                    <Col lg={4} md={4} sm={4} xs={4}>Resolved/Closed on</Col>\n                    <Col as=\"p\" lg={6} md={6} sm={6} xs={6}>{(issue.closed_at) ? removeTimezoneFromDateString(new Date(issue.closed_at).toString()) : \"N/A\"}</Col>\n                </Row>\n\n                <Row>\n                    <Col lg={4} md={4} sm={4} xs={4}>Attachments</Col>\n                    <Col lg={6} md={6} sm={6} xs={6} id=\"attachments-content\">\n                        <Attachments \n                            attachments={attachments.data}\n                            onCreate={(file, progressCb) => (\n                                props.onCreateAttachmentRequest(\n                                    props.match.params.projectId,\n                                    issue.id,\n                                    file,\n                                    progressCb\n                                )\n                            )}\n                            onComplete={(attachmentHandles) => {\n                                console.log(attachmentHandles);\n                                props.onAddAttachment(\n                                    props.match.params.projectId,\n                                    issue.id, \n                                    attachmentHandles\n                                )\n                                getAttachments();\n                            }}\n                        />\n                    </Col>\n                </Row>\n\n                <LinkButton to={`${issue.id}/log`} className=\"my-3\">View Issue Log</LinkButton>\n\n                <Row>\n                    <Col lg={4} md={4} sm={4} xs={4}>\n                        <Button variant=\"outline-primary\" type=\"submit\" form=\"add-comment\">Add Comment</Button>\n                    </Col>\n                    <Col lg={4} md={4} sm={4} xs={4}>\n                        <Form id=\"add-comment\" onSubmit={handleAddComment}>\n                            <Form.Group controlId=\"comment\">\n                                <Form.Control as=\"textarea\" placeholder=\"Enter comment\" />\n                            </Form.Group>\n                        </Form>\n                    </Col>\n                </Row>\n                \n                <Row>\n                    <Col lg={4} md={4} sm={4} xs={4}>Comments</Col>\n                    <CommentList \n                        comments={comments.data} \n                        onEdit={handleEditComment} \n                        onDelete={showDeleteCommentDialogBox}\n                    />\n                </Row>\n\n            </Container>\n        </>\n    );\n}\n\nexport default IssueDetails;","const paramKey = \"list_filter_params\";\n\nexport function setLocalParamStorage(params) {\n    localStorage.setItem(paramKey, JSON.stringify(params));\n}\n\nexport function getLocalParamStorage() {\n    return JSON.parse(localStorage.getItem(paramKey));\n}\n\nexport function removeLocalParamStorage() {\n    localStorage.removeItem(paramKey);\n}","import { useState, useEffect } from 'react';\nimport { setLocalParamStorage, getLocalParamStorage } from '../utility/local/paramStorage';\n\nfunction useListParams(initialParams) {\n    const [listParams, setListParams] = useState(initialParams);\n\n    // Check local storage for list params, if none then set to initialParams prop\n    useEffect(() => {\n        const store = getLocalParamStorage();\n        if(!store) {\n            setLocalParamStorage(initialParams);\n        } else {\n            setListParams(store);\n        }\n    // eslint-disable-next-line\n    }, []);\n\n    // Save updated list params to local storage\n    useEffect(() => {\n        setLocalParamStorage(listParams);\n    }, [listParams]);\n\n    function handleChange(param, value) {\n        setListParams(prev => ({ ...prev, [param]: value}));\n    }\n\n    return [listParams, handleChange];\n}\n\nexport default useListParams;","import React from 'react';\nimport { Formik, Form, Field } from 'formik';\n\nfunction SelectForm({ formId, fieldName, selectItems, itemKey, initialValues, onSubmit }) {\n    const selectOptions = selectItems.map((item, idx) => (\n        <option id={`option${idx}`} key={`option${idx}`} value={item.id}>{item[itemKey]}</option>\n    ));\n\n    return(\n        <Formik\n            initialValues={initialValues}\n            onSubmit={onSubmit}\n        >\n            {() => {\n                return (\n                    <Form id={formId}>\n                        <Field name={fieldName} as=\"select\">\n                            {selectOptions}\n                        </Field>\n                    </Form>\n                )\n        }}\n        </Formik>\n    )\n}\n\nexport default SelectForm;","import React from 'react'\nimport { Form, FormControl, Button } from 'react-bootstrap';\n\nfunction InlineSearch(props) {\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        props.onSubmit(e.target.firstChild.value);\n    }\n\n    return (\n        <Form inline noValidate onSubmit={handleSubmit} className={props.className}>\n            <FormControl type=\"text\" name=\"search\" placeholder=\"Search\" className=\"mr-sm-2\" />\n            <Button type=\"submit\" variant=\"outline-info\">Search</Button>\n        </Form>\n    )\n\n}\n\nexport default InlineSearch;","import React, { useState } from 'react';\nimport { ButtonGroup, ToggleButton as Toggle } from 'react-bootstrap';\n\nfunction ToggleButton({ radioValue, onSelect, ...props }) {\n    return (\n        <ButtonGroup toggle className=\"mx-2\">\n        {props.radios && props.radios.map((radio, idx) => (\n          <Toggle\n            key={idx}\n            type=\"radio\"\n            variant=\"secondary\"\n            name=\"radio\"\n            value={radio.value}\n            checked={radioValue === radio.value}\n            onChange={(e) => onSelect(e.currentTarget.value)}\n          >\n            {radio.name}\n          </Toggle>\n        ))}\n      </ButtonGroup>\n    )\n}\n\nexport default ToggleButton;","export default class CollabInfo {\n    constructor(collabArray) {\n        this.collaborators = collabArray;\n    }\n\n    get(collabId) {\n        if(this.collaborators.length === 0) return;\n        return this.collaborators.find(collab => collab.id === collabId);\n    }\n}","export const projectLogItemText = (logAction, logCreatedBy, logCollaborator, logDate, logData) => {\n    let text = \"\";\n    switch(logAction) {\n        case 'INSERT_ISSUE':\n            text += logCreatedBy.userName;\n            text += \" created an issue (#\";\n            text += logData.newData.issueId;\n            text += \") for this project - \";\n            break;\n        case 'RESOLVE_ISSUE':\n            text += logCreatedBy.userName;\n            text += \" resolved an issue (#\";\n            text += logData.newData.issueId;\n            text += \") for this project - \";\n            break;\n        case 'DELETE_ISSUE':\n            text += logCreatedBy.userName;\n            text += \" deleted an issue (#\";\n            text += logData.oldData.issueId;\n            text += \") for this project - \";\n            break;\n        case 'UPDATE':\n            text += logCreatedBy.userName;\n            text += \" updated the details of this project - \";\n            break;\n        case 'ADD_COLLAB':\n            text += logCreatedBy.userName;\n            text += \" added \";\n            text += logCollaborator.userName;\n            text += \" to this project - \";\n            break;\n        case 'REMOVE_COLLAB':\n            text += logCreatedBy.userName;\n            text += \" removed \";\n            text += logCollaborator.userName;\n            text += \" from this project - \";\n            break;\n        case 'INSERT':\n            text += logCreatedBy.userName;\n            text += \" created this project - \";\n            break;\n        case 'DELETE':\n            text += logCreatedBy.userName;\n            text += \" deleted this project - \";\n            break;\n        default:\n            break;\n    }\n    text += logDate;\n    return text;\n}\n\nconst getChanges = (oldData, newData) => {\n    const _oldData = JSON.parse(oldData);\n    const _newData = JSON.parse(newData)\n    const keys = Object.keys(_oldData);\n    const changes = {};\n    for(let key of keys) {\n        if(_oldData[key] !== _newData[key]) {\n            changes[key] = {\n                oldData: _oldData[key],\n                newData: _newData[key]\n            };\n        }\n    }\n    return changes;\n}\n\nexport const issueLogItemText = (logAction, logCreatedBy, logDate, logDataOld, logDataNew) => {\n    let text = \"\";\n    switch(logAction) {\n        case 'INSERT':\n            text += logCreatedBy.userName;\n            text += \" created this issue - \";\n            text += logDate;\n            break;\n        case 'UPDATE':\n            text += logCreatedBy.userName;\n            const changes = getChanges(logDataOld, logDataNew);\n            const changedKeys = Object.keys(changes).filter(key => key !== \"assigneeId\" || key !== \"creatorId\");\n            let i = 0;\n            for(let key of changedKeys) {\n                if(key === \"assignee\") text += \" assigned this issue \";\n                else text += \" changed the \" + key + \" of this issue\";\n                text += \" to '\" + changes[key].newData + \"'\";\n                text += (++i < changedKeys.length) ? \" and \" : \"\";\n            }\n            text += \" - \" + logDate;\n            break;\n        case 'DELETE':\n            text += logCreatedBy.userName;\n            text += \" deleted this issue - \";\n            text += logDate;\n            break;\n        default:\n            break;\n    }\n    return text;\n}","import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport { useAuth, useResource } from '../../hooks';\nimport List from '../../components/display/List/List';\nimport CollabInfo from '../../utility/CollabInfo';\nimport { removeTimezoneFromDateString } from '../../utility/strings';\nimport { issueLogItemText } from '../../utility/log';\n\nfunction IssueLog(props) {\n    const auth = useAuth();\n    const [log, ] = useResource(\n        `/api/projects/${props.match.params.projectId}/issues/${props.match.params.issueId}/reports`,\n        auth.user ? auth.user.token : null\n    )\n\n    const renderLogItem = (item) => {\n        if(!item || !props.collaborators || props.collaborators.length === 0) return null;\n        const date = removeTimezoneFromDateString(new Date(item.createdAt).toString());\n        const collabInfo = new CollabInfo(props.collaborators);\n        const createdBy = collabInfo.get(item.createdBy);\n        const text = issueLogItemText(item.action, createdBy, date, item.oldData, item.newData)\n        return <div>{text}</div>\n    }\n\n    return (\n        <Container fluid>\n            <List listItems={log.data} render={renderLogItem}/>\n        </Container>\n    )\n}\n\nexport default IssueLog;","import React, { useState } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\n\nimport useAuth from '../../hooks/useAuth';\nimport useResource from '../../hooks/useResource';\n\nimport IssueNavBar from '../../components/app/Navigation/IssueNavBar';\nimport IssueList from '../../components/app/IssueList/IssueList';\nimport IssueFilterControl from '../../components/app/IssueFilterControl/IssueFilterControl';\nimport IssueDetails from '../../pages/IssueDetails/IssueDetails';\n\nimport useDialogBox from '../../hooks/useDialogBox';\nimport useListParams from '../../hooks/useListParams';\nimport SelectForm from '../../components/form/SelectForm';\nimport InlineSearch from '../../components/form/InlineSearch';\nimport ToggleButton from '../../components/display/Button/ToggleButton';\nimport IssueDetailNavBar from '../../components/app/Navigation/IssueDetailNavBar';\nimport IssueLog from '../IssueLog/IssueLog';\nimport useNotificationBanner from '../../hooks/useNotificationBanner';\n\nconst initialFilterValue = {\n    category: {\n        bug: true, \n        feature: true,\n        task: true,\n        other: true\n    },\n    priority: {\n        critical: true,\n        high: true,\n        regular: true,\n        low: true,\n        trivial: true\n    },\n    status: {\n        unassigned: true,\n        open: true,\n        inprogress: true,\n        resolved: true,\n        closed: true\n    }\n}\n\nfunction IssueDashboard({ issues, ...props }) {\n    const auth = useAuth();\n    const notificationBanner = useNotificationBanner();\n    const [collaborators, ] = useResource(\n        `/api/projects/${props.match.params.projectId}/collaborators`,\n        auth.user ? auth.user.token : null\n    );\n    const { show: showDeleteIssueDialogBox, RenderDialogBox: DeleteIssueDialogBox } = useDialogBox();\n    const { show: showAssignIssueDialogBox, RenderDialogBox: AssignIssueDialogBox } = useDialogBox();\n    const { show: showStartIssueDialogBox, RenderDialogBox: StartIssueDialogBox } = useDialogBox();\n    const { show: showCloseIssueDialogBox, RenderDialogBox: CloseIssueDialogBox } = useDialogBox();\n    const [listParams, changeListParams] = useListParams({ order: \"desc\", group: \"category\", filter: initialFilterValue, search: \"\" });\n    const [issueView, setIssueView] = useState('1');\n\n    const handleSelectIssueView = (view) => {\n        setIssueView(view);\n    }\n\n    const handleDeleteIssue = async ({ data }) => {\n        await props.onDelete(data.projectId, data.issueId);\n        notificationBanner.showNotificationWithText(\"Issue Successfully Deleted!\");\n    }\n\n    const handleAssignIssue = async ({ data, values }) => {\n        await props.onAssign(data.projectId, data.issueId, values.collaboratorId);\n        notificationBanner.showNotificationWithText(\"Issue Successfully Assigned!\")\n    }\n\n    const handleStartIssue = async ({ data }) => {\n        await props.onStart(data.projectId, data.issueId);\n        notificationBanner.showNotificationWithText(\"Issue Successfully Advanced to In-Progress!\");\n    }\n\n    const handleCloseIssue = async ({ data, values }) => {\n        await props.onClose(data.projectId, data.issueId, values.status);\n        notificationBanner.showNotificationWithText(\"Issue Completed!\");\n    }\n    \n    return (\n        <>\n            <DeleteIssueDialogBox\n                heading=\"Delete Issue\"\n                submitButtonText=\"Delete\"\n                onSubmit={handleDeleteIssue}\n                render={({ data }) => (\n                    'Are you sure you would like to delete issue ' + data.issueId\n                )}\n            />\n            <AssignIssueDialogBox\n                heading=\"Assign Issue\"\n                submitButtonText=\"Assign\"\n                formId=\"project-collaborators\"  \n                onSubmit={handleAssignIssue}\n                render={() => (\n                    <SelectForm \n                        formId=\"project-collaborators\"  \n                        fieldName=\"collaboratorId\"\n                        initialValues={{ \"collaboratorId\": \"\"}} \n                        selectItems={collaborators.data} \n                        itemKey=\"userName\"\n                    />\n                )}\n            />\n            <StartIssueDialogBox\n                heading=\"Begin Issue\"\n                submitButtonText=\"Advance\"\n                onSubmit={handleStartIssue}\n                render={({ data }) => 'Are you sure you would like to begin issue ' + data.issueId + '? The status of this issue will be advanced to \"inprogress\".'}\n            />\n            <CloseIssueDialogBox\n                heading=\"Complete Issue\"\n                submitButtonText=\"Complete\"\n                formId=\"complete-status\"  \n                onSubmit={handleCloseIssue}\n                render={() => (\n                    <>\n                        <div>Please select how you would like to complete this issue? </div>\n                        <SelectForm \n                            formId=\"complete-status\"  \n                            fieldName=\"status\"\n                            initialValues={{ \"status\": \"\"}} \n                            selectItems={[{ status: \"closed\" }, { status: \"resolved\" }]} \n                            itemKey=\"status\"\n                        />\n                    </>\n                )}\n            />\n            <Switch>\n                <Route path={props.match.path} exact render={() => (\n                    <>\n                        <IssueNavBar render={() => (\n                            <>\n                                <Button \n                                    className=\"stick-left\" \n                                    variant=\"outline-primary\"\n                                    onClick={() => { props.history.push('/projects') }}\n                                >\n                                    Back to Projects\n                                </Button>\n                                <div>View style:</div>\n                                <ToggleButton \n                                    radioValue={issueView} \n                                    radios={[\n                                        { name: 'List', value: '1' },\n                                        { name: 'Table', value: '2' }\n                                    ]}\n                                    onSelect={handleSelectIssueView}\n                                />\n                                <InlineSearch \n                                    className=\"search-bar\"\n                                    onSubmit={(searchText) => { changeListParams(\"search\", searchText) }}\n                                />\n                                <IssueFilterControl \n                                    className=\"filter-controls\"\n                                    filters={listParams.filter}\n                                    onSelect={changeListParams}\n                                />\n                            </>\n                        )}/>\n                        <IssueList \n                            projectId={props.match.params.projectId} \n                            collaborators={collaborators.data}\n                            issueList={issues}\n                            viewAs={issueView}\n\n                            groupBy={listParams.group}\n                            orderBy={listParams.order}\n                            filter={listParams.filter}\n                            searchText={listParams.search}\n                            searchKeys={[\"title\", \"description\"]}\n\n                            onDelete={showDeleteIssueDialogBox}\n                            onAssign={showAssignIssueDialogBox}\n                            onStart={showStartIssueDialogBox}\n                            onClose={showCloseIssueDialogBox}\n                        />\n                    </>\n                )}/>\n                <Route path={`${props.match.path}/:issueId`} exact render={(routerProps) => {\n                    const issueIdx = issues.findIndex(iss => iss.id === Number(routerProps.match.params.issueId));\n                    const issue = (issueIdx !== -1) ? issues[issueIdx] : null; \n                    if(!issue) return;\n                    return (\n                        <>\n                            <IssueDetails \n                                {...routerProps} \n                                issue={issue}\n                                collaborators={collaborators.data}\n                                onEdit={props.onEdit}\n                                onDelete={showDeleteIssueDialogBox}\n                                onAssign={showAssignIssueDialogBox}\n                                onStart={showStartIssueDialogBox}\n                                onClose={showCloseIssueDialogBox}\n                                onCreateAttachmentRequest={props.onCreateAttachmentRequest}\n                                onAddAttachment={props.onAddAttachment}\n                            />\n                        </>\n                    )\n                }} />\n                <Route path={`${props.match.path}/:issueId/log`} exact render={(routerProps) => {\n                    const issueIdx = issues.findIndex(iss => iss.id === Number(routerProps.match.params.issueId));\n                    const issue = (issueIdx !== -1) ? issues[issueIdx] : null; \n                    const urlParts = routerProps.match.url.split('/');\n                    urlParts.pop(); urlParts.pop(); // Remove last two elements( ':issueId/log' ) from url\n                    if(!issue) return;\n                    return (\n                        <>\n                            <IssueDetailNavBar title={issue.title} linkUrl={urlParts.join(\"/\")} render={() => {\n                                return (\n                                    <Button \n                                        className=\"stick-left\" \n                                        onClick={() => { props.history.goBack() }}\n                                    >Back to Issue Details</Button>\n                                )\n                            }}/>\n                            <IssueLog collaborators={collaborators.data} {...routerProps} />\n                        </>\n                    )\n                }} />\n            </Switch>\n        </>\n    )\n}\n\nexport default IssueDashboard;","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport useResource from '../../hooks/useResource';\nimport useAuth from '../../hooks/useAuth';\nimport projectsApi from '../../api/projects';\nimport withEdit from '../../components/hocs/withEdit/withEdit';\nimport List from '../../components/display/List/List';\nimport CollabInfo from '../../utility/CollabInfo';\nimport { removeTimezoneFromDateString } from '../../utility/strings';\nimport { projectLogItemText } from '../../utility/log';\n\nfunction ProjectDetails({project, ...props}) {\n    const auth = useAuth();\n    const [collaborators, ] = useResource(\n        `/api/projects/${props.match.params.projectId}/collaborators`,\n        auth.user ? auth.user.token : null\n    );\n    const [log, ] = useResource(\n        `/api/projects/${props.match.params.projectId}/reports`,\n        auth.user ? auth.user.token : null\n    )\n\n    const EditBox = withEdit(Col, \"text\");\n    const EditArea = withEdit(Col, \"textarea\");\n\n    const handleEdit = async (value) => {\n        const result = await projectsApi.updateProject(props.match.params.projectId, auth.user.token, value);\n        console.log(result);\n    }\n\n    const renderLogItem = (item) => {\n        if(!item || !props.collaborators || props.collaborators.length === 0) return null;\n        const date = removeTimezoneFromDateString(new Date(item.createdAt).toString());\n        const collabInfo = new CollabInfo(collaborators.data);\n        const createdBy = collabInfo.get(item.createdBy);\n        const { collaboratorId } = JSON.parse(item.newData || item.oldData);\n        const oldData = JSON.parse(item.oldData);\n        const newData = JSON.parse(item.newData);\n        const collaborator = collabInfo.get(collaboratorId);\n        const text = projectLogItemText(item.action, createdBy, collaborator, date, { oldData, newData });\n        return <div>{text}</div>\n    }\n\n    return (\n        <Container fluid>\n                <Row className=\"justify-content-center\">\n                    <EditBox as=\"h3\" value={project.name} name=\"name\" onEdit={handleEdit}>\n                        {project.name}\n                    </EditBox>\n                </Row>\n                \n                <Row className=\"justify-content-center\">\n                    <EditArea as=\"p\" value={project.description} name=\"description\" onEdit={handleEdit}>\n                        {project.description}\n                    </EditArea>\n                </Row>\n\n                <Row>\n                    <Col as=\"h5\">Collaborators:</Col>\n                </Row>\n                \n                {\n                    collaborators && collaborators.data.map((collab, key) => {\n                        return (\n                            <Row key={key}>\n                                <Col style={{ textAlign: \"right\" }}>{`${collab.firstName} ${collab.lastName}`}</Col>\n                                <Col style={{ textAlign: \"left\" }}>{collab.userName}</Col>\n                            </Row>\n                        )\n                    })\n                }\n\n                <Row>\n                    <Col as=\"h5\">Issues:</Col>\n                </Row>\n                <Row style={{ justifyContent: \"center\" }}>{`There are ${project.issues && project.issues.length} issues related to this project`}</Row>\n\n                <Row style={{ justifyContent: \"center\" }}>\n                    <Col as=\"h5\">Project Log:</Col>\n                </Row>\n                <Row style={{ justifyContent: \"center\" }}>\n                    <List listItems={log.data} render={renderLogItem}/>\n                </Row>\n                <Row>{}</Row>\n        </Container>\n    );\n}\n\nexport default ProjectDetails;","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport useAuth from '../../hooks/useAuth';\nimport useProjects from '../../hooks/useProjects';\nimport useResource from '../../hooks/useResource';\n\nimport ProjectsNavBar from '../../components/app/Navigation/ProjectsNavBar';\nimport ProjectList from '../../components/app/ProjectList/ProjectList';\n\nimport NewProjectPage from '../../pages/NewProjectPage/NewProjectPage';\nimport NewIssuePage from '../../pages/NewIssuePage/NewIssuePage';\nimport IssueDashboard from '../../pages/IssueDashboard/IssueDashboard';\nimport ProjectDetails from '../../pages/ProjectDetails/ProjectDetails';\n\nimport useDialogBox from '../../hooks/useDialogBox';\nimport SelectForm from '../../components/form/SelectForm';\nimport useNotificationBanner from '../../hooks/useNotificationBanner';\n\nfunction ProjectDashboard({ match }) {\n    const auth = useAuth();\n    const projects = useProjects();\n    const notificationBanner = useNotificationBanner();\n    const [collaborators, ] = useResource('/api/user/all', auth.user ? auth.user.token : null);\n    const { show: showDeleteProjectDialogBox, RenderDialogBox: DeleteDialogBox } = useDialogBox(); \n    const { show: showAddCollaboratorDialogBox, RenderDialogBox: AddCollaboratorDialogBox } = useDialogBox(); \n\n    return (\n        <>\n            <DeleteDialogBox\n                heading=\"Delete Project\"\n                closeButtonText=\"Cancel\"\n                submitButtonText=\"Delete\"\n                onSubmit={async (project) => {\n                    await projects.handleDeleteProject(project);\n                    notificationBanner.showNotificationWithText(\"Project Successfully Deleted!\");\n                }}\n                render={({ data }) => 'Are you sure you would like to delete project with id ' + data.projectId + '?'}\n            />\n            <AddCollaboratorDialogBox\n                heading=\"Add Collaborator\"\n                submitButtonText=\"Add\"\n                formId=\"collaborator-select-form\"\n                onSubmit={async (data) => {\n                    await projects.handleAddCollaborator(data);\n                    notificationBanner.showNotificationWithText(\"Collaborator Successfully Added to Project!\");\n                }}\n                render={() => (\n                    <SelectForm \n                        formId=\"collaborator-select-form\"\n                        fieldName=\"collaboratorId\"\n                        initialValues={{ \"collaboratorId\": \"\" }}\n                        selectItems={collaborators.data} \n                        itemKey=\"userName\"\n                    />\n                )}\n            />\n            <Switch>\n                <Route path={match.url} exact render={() => (\n                    <>\n                        <ProjectsNavBar />\n                        <ProjectList \n                            projectList={projects.data} \n                            onDelete={showDeleteProjectDialogBox} \n                            onEdit={projects.handleEditProject} \n                            onAddCollaborator={showAddCollaboratorDialogBox} \n                        />\n                    </>\n                )}/>\n                <Route path={`${match.url}/:projectId/issues/new`} exact render={(routerProps) => \n                    <NewIssuePage \n                        {...routerProps} \n                        onSubmit={projects.handleCreateIssue} \n                        onCreateAttachmentRequest={projects.handleIssueAttachmentRequest}\n                        onAddAttachment={projects.addIssueAttachmentHandles}\n                    />\n                }/>\n                <Route path={`${match.url}/:projectId/issues`} render={(routerProps) => {\n                    const projectIdx = projects.data.findIndex(proj => proj.id === Number(routerProps.match.params.projectId));\n                    const issues = (projectIdx !== -1) ? projects.data[projectIdx].issues : []; \n                    return (\n                        <IssueDashboard \n                            {...routerProps} \n                            issues={issues} \n                            onDelete={projects.handleDeleteIssue} \n                            onAssign={projects.handleAssignIssue}\n                            onStart={projects.handleStartIssue} \n                            onClose={projects.handleCloseIssue}\n                            onEdit={projects.handleEditIssue}\n                            onCreateAttachmentRequest={projects.handleIssueAttachmentRequest}\n                            onAddAttachment={projects.addIssueAttachmentHandles}\n                        />\n                    )\n                }}/>\n                <Route path={`${match.url}/new`} exact render={(routerProps) => \n                    <NewProjectPage {...routerProps} onSubmit={projects.handleAddProject} />\n                }/>\n                <Route path={`${match.url}/:projectId/`} exact render={(routerProps) => {\n                    const project = projects.data.find(proj => proj.id === Number(routerProps.match.params.projectId));\n                    if(!project) return;\n                    return <ProjectDetails project={project} {...routerProps} />\n                }}/>\n            </Switch>\n        </>\n    )\n}\n\nexport default ProjectDashboard;","import { useContext } from \"react\";\nimport { projectsContext } from \"../contexts/ProjectsContext\";\n\nexport default function useProjects() {\n    return useContext(projectsContext);\n}","import React from 'react';\nimport { Row, Col } from 'react-bootstrap';\n\nimport './UserInfo.css';\n\nexport default function UserInfo(props) {\n    return (\n        <div className=\"user-info\">\n            <Row>\n                <Col lg={6} md={6} s={4} xs={12} className=\"label\">First Name: </Col>\n                <Col lg={6} md={6} s={8} xs={12} className=\"user-detail\">{ props.user.firstName }</Col>\n            </Row>\n\n            <Row>\n                <Col lg={6} md={6} s={4} xs={12} className=\"label\">Last Name: </Col>\n                <Col lg={6} md={6} s={8} xs={12} className=\"user-detail\">{ props.user.lastName }</Col>\n            </Row>\n\n            <Row>\n                <Col lg={6} md={6} s={4} xs={12} className=\"label\">User Name: </Col>\n                <Col lg={6} md={6} s={8} xs={12} className=\"user-detail\">{ props.user.userName }</Col>\n            </Row>\n\n            <Row>\n                <Col lg={6} md={6} s={4} xs={12}className=\"label\">Email: </Col>\n                <Col lg={6} md={6} s={8} xs={12}className=\"user-detail\">{ props.user.email }</Col>\n            </Row>\n\n        </div>\n    )\n}","import React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { Row, Col, Button } from 'react-bootstrap';\n\nimport { ChangePasswordSchema } from '../../utility/schema/validation';\n\nexport default function ChangePasswordForm(props) {\n    return (\n        <Formik\n            initialValues={{\n                currentPassword: \"\",\n                newPassword: \"\",\n                confirmNewPassword: \"\"\n            }}\n            onSubmit={async (values, { setSubmitting }) => {\n                setSubmitting(true);\n                await props.onSubmit(values.currentPassword, values.newPassword);\n                setSubmitting(false);\n            }}\n            validationSchema={ChangePasswordSchema}\n        >\n            {({ isSubmitting }) => (\n                <Form className=\"form\">\n                    <Row>\n                        <Col>\n                            <label htmlFor=\"currentPassword\">Current Password</label>\n                        </Col>\n                        <Col>\n                            <Field name=\"currentPassword\" type=\"password\" autoComplete=\"new-password\"/>\n                            <span className=\"form-error\">\n                                {props.error && <div>{props.error.message}</div>}\n                                <ErrorMessage name=\"currentPassword\"/>\n                            </span>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col>\n                            <label htmlFor=\"newPassword\">New Password</label>\n                        </Col>\n                        <Col>\n                            <Field name=\"newPassword\" type=\"password\" autoComplete=\"new-password\" />\n                            <span className=\"form-error\">\n                                <ErrorMessage name=\"newPassword\" />\n                            </span>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col>\n                            <label htmlFor=\"confirmNewPassword\">Confirm New Password</label>\n                        </Col>\n                        <Col>\n                            <Field name=\"confirmNewPassword\" type=\"password\" autoComplete=\"off\" />\n                            <span className=\"form-error\">\n                                <ErrorMessage name=\"confirmNewPassword\" />\n                            </span>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Button variant=\"primary\" type=\"submit\" disabled={isSubmitting}>Submit</Button>\n                    </Row>\n\n                </Form>\n            )}\n        </Formik>\n    )\n}","import React from 'react';\nimport { Container, Row } from 'react-bootstrap';\n\nimport { useAuth } from '../../hooks';\n\nimport UserInfo from '../../components/app/UserInfo/UserInfo';\n\nimport '../page.css';\nimport './UserAccountPage.css';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport ChangePasswordForm from '../../components/form/ChangePasswordForm';\n\nexport default function UserAccountPage(props) {\n    const auth = useAuth();\n\n    const handlePasswordChange = async (currentPassword, newPassword) => {\n        auth.changePassword(currentPassword, newPassword, async (err) => {\n            if(!err) {\n                await auth.logout(() => props.history.push('/dashboard'));\n            } else console.log(err);\n         });\n        \n    }\n\n    return (\n        <Switch>\n            <Route path={props.match.url} exact render={() => (\n                <Container fluid className=\"page\" id=\"user-account\">\n                    <Row as=\"h4\">Account Information</Row>\n                    <Row>\n                        <UserInfo user={auth.user} />\n                    </Row>\n                    <Row>\n                        <div>To change your password, click&nbsp;</div>\n                        <Link to=\"account/changePassword\">here</Link>{\".\"}\n                    </Row>\n                </Container>\n            )}/>\n\n            <Route path={props.match.url + \"/changePassword\"} exact render={() => (\n                <Container fluid className=\"page\" id=\"change-password\">\n                    <div> Change Password </div>\n                    <ChangePasswordForm onSubmit={handlePasswordChange} error={auth.error} />\n                </Container>\n            )}/>\n        </Switch>\n    )\n};","import React from 'react';\nimport useNotificationBanner from '../../../hooks/useNotificationBanner';\nimport './NotificationBanner.css';\n\nexport default function NotificationBanner(props) {\n    const banner = useNotificationBanner();\n    return (\n        <div className={'notification-banner-container ' + (banner.show ? \"show\" : \"\")}>\n            <div className=\"notification-banner\">\n                {banner.text}\n            </div>\n        </div>\n    );\n};","import React from 'react';\nimport { Switch, Route, BrowserRouter as Router } from 'react-router-dom';\n\nimport ProvideAuth from './contexts/AuthContext';\nimport ProvideProjects from './contexts/ProjectsContext';\n\nimport PrivateRoute from './utility/route/PrivateRoute';\nimport TopNavBar from './components/app/Navigation/TopNavBar';\n\nimport LoginPage from './pages/LoginPage/LoginPage';\nimport SignupPage from './pages/SignupPage/SignupPage';\nimport Dashboard from './pages/Dashboard/Dashboard';\nimport ProjectDashboard from './pages/ProjectDashboard/ProjectDashboard';\nimport UserAccountPage from './pages/UserAccountPage/UserAccountPage';\nimport NotificationBanner from './components/display/NotificationBanner/NotificationBanner';\nimport ProvideNotificationBanner from './contexts/NotificationBannerContext';\n\nfunction IssueTracker() {\n\n    return (\n        <Router>\n            <ProvideAuth>\n                <ProvideProjects>\n                    <ProvideNotificationBanner>\n                        <NotificationBanner />\n                        <TopNavBar />\n                        <Switch>\n                            <Route path=\"/login\" component={LoginPage} />\n                            <Route path=\"/signup\" component={SignupPage} />\n                            <PrivateRoute path=\"/dashboard\" component={Dashboard} />\n                            <PrivateRoute path=\"/projects\" component={ProjectDashboard} />\n                            <PrivateRoute path=\"/account\" component={UserAccountPage} />\n                            <PrivateRoute path=\"/\" component={Dashboard} />\n                        </Switch>\n                    </ProvideNotificationBanner>\n                </ProvideProjects>\n            </ProvideAuth>\n        </Router>\n    )\n\n\n}\n\nexport default IssueTracker;","import './App.css';\n\nimport IssueTracker from './IssueTracker';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <IssueTracker></IssueTracker>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}