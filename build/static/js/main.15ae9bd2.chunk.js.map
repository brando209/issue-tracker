{"version":3,"sources":["utility/local/authStorage.js","api/auth.js","contexts/AuthContext.js","hooks/useAuth.js","hooks/useResource.js","api/util.js","api/issues.js","api/projects.js","contexts/ProjectsContext.js","utility/route/PrivateRoute.js","components/display/Button/LinkButton.js","components/display/NavBar/NavBar.js","logo.svg","components/app/Navigation/TopNavBar.js","components/form/inputs/TextInput/TextInput.js","utility/schema/validation.js","components/form/LoginForm.js","pages/LoginPage/LoginPage.js","components/form/SignupForm.js","pages/SignupPage/SignupPage.js","pages/Dashboard/Dashboard.js","components/app/Navigation/ProjectsNavBar.js","components/display/List/ListItem.js","components/display/List/ListItemGroup.js","hooks/useFilteredItems.js","hooks/useGroupedItems.js","components/display/List/List.js","components/app/ProjectList/ProjectListOverviewCard.js","components/app/ProjectList/ProjectList.js","components/form/NewProjectForm.js","contexts/NotificationBannerContext.js","hooks/useNotificationBanner.js","pages/NewProjectPage/NewProjectPage.js","components/form/inputs/Dropzone/Dropzone.js","components/form/inputs/Upload/Upload.js","components/form/NewIssueForm.js","pages/NewIssuePage/NewIssuePage.js","components/app/Navigation/IssueNavBar.js","components/display/TableList/TableList.js","components/app/IssueList/IssueListButtonToolbar.js","components/app/IssueList/IssueListOverviewCard.js","components/app/IssueList/IssueList.js","components/app/IssueFilterControl/IssueFilterControl.js","components/hocs/withEdit/withEdit.js","utility/strings.js","images/edit-icon-png-small.png","components/app/CommentList/CommentList.js","components/display/DialogBox/DialogBox.js","hooks/useDialogBox.js","components/app/Navigation/IssueDetailNavBar.js","components/app/Attachments/Attachments.js","components/form/EditIssueDetailsForm.js","pages/IssueDetails/IssueDetails.js","utility/local/paramStorage.js","hooks/useListParams.js","components/form/SelectForm.js","components/form/InlineSearch.js","components/display/Button/ToggleButton.js","utility/CollabInfo.js","utility/log.js","pages/IssueLog/IssueLog.js","pages/IssueDashboard/IssueDashboard.js","pages/ProjectDetails/ProjectDetails.js","pages/ProjectDashboard/ProjectDashboard.js","hooks/useProjects.js","components/app/UserInfo/UserInfo.js","components/form/ChangePasswordForm.js","pages/UserAccountPage/UserAccountPage.js","components/display/NotificationBanner/NotificationBanner.js","IssueTracker.js","App.js","reportWebVitals.js","index.js"],"names":["authTokenKey","auth","isAuthenticated","login","credentials","cb","axios","post","userName","password","response","token","data","localStorage","setItem","user","message","tokenLogin","getItem","console","log","get","headers","signup","logout","removeItem","changePassword","currentPassword","newPassword","patch","authContext","createContext","ProvideAuth","props","useState","setUser","isLoading","setIsLoading","error","setError","useEffect","loginWithToken","a","authApi","userInfo","err","useProvideAuth","Provider","value","children","useAuth","useContext","useResource","path","authToken","forkedPaths","isError","resource","setResource","refresh","setRefresh","getResource","prev","fetchResource","length","promises","forEach","fork","push","Promise","all","responseData","map","res","filename","authHeader","projectId","issueInfo","issue","issueId","update","delete","assigneeId","status","comment","result","commentId","config","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","attachmentId","issuesApi","createIssue","updateIssue","deleteIssue","assignIssue","advanceIssue","addComment","updateComment","deleteComment","createAttachment","getAttachment","deleteAttachment","projectInfo","project","collaboratorId","projectsApi","createProject","updateProject","deleteProject","addProjectCollaborator","removeProjectCollaborator","projectsContext","ProvideProjects","projects","setProjects","handleDeleteProject","slice","index","findIndex","elem","id","splice","handleAddProject","newProject","issues","handleEditProject","updates","handleAddCollaborator","values","handleCreateIssue","issueDetails","newIssue","projectIdx","proj","Number","handleDeleteIssue","issueIdx","handleEditIssue","issueUpdates","Object","keys","updatedIssue","handleAssignIssue","handleStartIssue","handleCloseIssue","handleIssueAttachmentRequest","addIssueAttachmentHandles","attachmentHandles","currHandles","concat","useProvideProjects","PrivateRoute","component","Component","render","to","pathname","state","from","location","LinkButton","text","Button","as","Link","variant","NavBar","title","logo","Navbar","className","Brand","href","alt","src","Toggle","Collapse","TopNavBar","bg","expand","Nav","onClick","TextInput","htmlFor","name","label","FormControl","type","SignupSchema","Yup","shape","firstName","min","max","required","lastName","email","confirmPassword","oneOf","LoginSchema","ChangePasswordSchema","confirmNewPassword","ProjectSchema","description","IssueSchema","LoginForm","onSubmit","initialValues","validationSchema","setSubmitting","isSubmitting","Row","disabled","LoginPage","fromState","Container","fluid","Col","xs","sm","md","lg","SignupForm","form","autoComplete","SignupPage","redirect","setRedirect","xl","Dashboard","ProjectsNavBar","ListItem","item","ListItemGroup","items","collapse","setCollapse","idx","useFilteredItems","filter","searchText","searchKeys","allowedValues","mapValues","obj","selectedFilters","pickBy","filteredItems","isAllowed","key","includes","toLowerCase","useGroupedItems","groupKey","groupedItems","groupBy","List","listItems","groupValues","orderBy","listComponentArray","groupComponents","reverse","keyValue","listComponents","ProjectListOverviewCard","onDelete","onEdit","onAddCollaborator","Card","Body","Title","Text","ButtonGroup","DropdownButton","Dropdown","Item","style","borderLeft","ProjectList","projectList","NewProjectForm","notificationBannerContext","ProvideNotificationBanner","notificationBanner","setText","show","setShow","showNotificationWithText","setTimeout","useProvideNotificationBanner","useNotificationBanner","NewProjectPage","createNewProject","Dropzone","onFilesAdded","highlight","setHighlight","fileInputRef","useRef","fileListToArray","fileList","array","i","onDragOver","e","preventDefault","onDragLeave","onDrop","files","dataTransfer","current","click","cursor","ref","multiple","onChange","target","initialUpload","isUploading","progress","successful","Upload","sendRequest","onClose","setUploadCallbacks","upload","setUpload","uploadCallbacks","uploadFiles","file","callbacks","FormData","append","progressCb","then","responses","successCb","catch","failureCb","onComplete","copy","percentage","uploading","renderProgress","uploadProgress","ProgressBar","now","opacity","updatedFiles","fileIndex","display","NewIssueForm","collaborators","category","priority","setFieldValue","submitForm","resetForm","val","NewIssuePage","match","params","addIssueAttachment","attachmentData","onCreateAttachmentRequest","addNewIssue","attachments","createAnother","onAddAttachment","IssueNavBar","MyTable","Table","bordered","striped","responsive","colSpan","groupName","headerKeys","TableList","renderButtons","groupNames","group","IssueListButtonToolbar","onAssign","onStart","ButtonToolbar","width","IssueListOverviewCard","height","flexDirection","alignItems","flex","assignee","issueDisplayParameters","groups","IssueList","issueList","viewAs","Checkmark","checked","IssueFilterControl","isOpen","setOpen","setAllFiltersTo","newValue","filterKeys","filters","filterKey","onSelect","checkAllFilters","uncheckAllFilters","isCleared","cleared","handleToggleFilterKey","eventKey","order","menuAlign","split","filterValue","newValues","onToggle","open","event","meta","source","Header","bug","feature","task","other","ItemText","critical","high","regular","low","trivial","unassigned","inprogress","resolved","closed","withEdit","WrappedComponent","isEditing","editing","setEditing","setValue","inputRef","focus","handleKeyPress","handleSubmit","handleChange","onBlur","defaultValue","rows","cols","onKeyPress","options","opt","removeTimezoneFromDateString","dateString","string","searchTerm","n","indexOf","getNthIndexOf","commentBoxStyle","margin","CustomToggle","React","forwardRef","editIcon","CommentList","editId","setEditId","EditArea","showEditArea","handleEditComment","comments","creator","Date","created_at","toString","evt","Menu","body","DialogBox","heading","closeButtonText","submitButtonText","renderData","formId","Modal","onHide","closeButton","Footer","useDialogBox","visible","setVisible","setData","hide","RenderDialogBox","nodeList","input","extractInputValues","childNodes","IssueDetailNavBar","linkUrl","sticky","Attachments","setUploading","attachment","download","renderAttachmentItems","onCreate","EditIssueDetailsForm","initialTitle","initialDescription","initialCategory","initialPriority","IssueDetails","getAttachments","setComments","editMode","setEditMode","showDeleteCommentDialogBox","DeleteCommentDialogBox","EditSelect","handleAddComment","commentData","newComment","document","querySelector","handleDeleteComment","commentIdx","advanceButtonText","history","goBack","size","hidden","opened_at","closed_at","Form","Group","controlId","Control","placeholder","paramKey","setLocalParamStorage","JSON","stringify","useListParams","initialParams","listParams","setListParams","store","parse","param","SelectForm","fieldName","selectItems","itemKey","selectOptions","InlineSearch","inline","noValidate","firstChild","ToggleButton","radioValue","toggle","radios","radio","currentTarget","CollabInfo","collabArray","this","collabId","find","collab","issueLogItemText","logAction","logCreatedBy","logDate","logDataOld","logDataNew","changes","oldData","newData","_oldData","_newData","getChanges","changedKeys","IssueLog","date","createdAt","createdBy","action","initialFilterValue","IssueDashboard","showDeleteIssueDialogBox","DeleteIssueDialogBox","showAssignIssueDialogBox","AssignIssueDialogBox","showStartIssueDialogBox","StartIssueDialogBox","showCloseIssueDialogBox","CloseIssueDialogBox","search","changeListParams","issueView","setIssueView","handleSelectIssueView","view","exact","routerProps","iss","urlParts","url","pop","join","ProjectDetails","EditBox","handleEdit","textAlign","justifyContent","collabInfo","collaborator","logCollaborator","logData","projectLogItemText","ProjectDashboard","showDeleteProjectDialogBox","DeleteDialogBox","showAddCollaboratorDialogBox","AddCollaboratorDialogBox","UserInfo","s","ChangePasswordForm","UserAccountPage","handlePasswordChange","NotificationBanner","banner","IssueTracker","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"6pBAAMA,EAAe,uBCGrB,IAAMC,EAAO,CACTC,iBAAiB,EACXC,MAFG,SAEGC,EAAaC,GAAK,OAAD,mIAEEC,IAAMC,KACzB,kBACA,CACIC,SAAUJ,EAAYI,SACtBC,SAAUL,EAAYK,WANT,cAEfC,EAFe,OASrBT,EAAKC,iBAAkB,EDZDS,ECaJD,EAASE,KAAKD,MDZxCE,aAAaC,QAAQd,EAAcW,GCa3BN,EAAG,2BAAKK,EAASE,KAAKG,MAApB,IAA0BJ,MAAOD,EAASE,KAAKD,QAAS,MAXrC,kBAYdD,EAASE,MAZK,kCAcrBX,EAAKC,iBAAkB,EACvBG,EAAG,KAAM,CAAEW,QAAS,KAAIN,SAASE,KAAKI,UAfjB,kCDH1B,IAA2BL,ICGD,wBAkBvBM,WApBG,SAoBQZ,GAAK,OAAD,+GACXM,EDjBHE,aAAaK,QAAQlB,GCgBP,uBAIbC,EAAKC,iBAAkB,EACvBiB,QAAQC,IAAI,mBACZf,EAAG,MANU,iCAUjBc,QAAQC,IAAI,eACRV,EAAW,KAXE,mBAaIJ,IAAMe,IACnB,kBACA,CAAEC,QAAS,CAAE,cAAgB,UAAhB,OAA2BX,MAf/B,QAabD,EAba,OAiBbT,EAAKC,iBAAkB,EACvBG,EAAG,2BAAKK,EAASE,MAAf,IAAqBD,UAAS,MAlBnB,kDAoBbV,EAAKC,iBAAkB,EACvBG,EAAG,KAAM,CAAEW,QAAS,KAAIA,UArBX,iCAwBVN,GAxBU,6DA0Bfa,OA9CG,SA8CIR,EAAMV,GAAK,OAAD,mIAEQC,IAAMC,KACzB,qBADmB,eAEdQ,IAJM,cAETL,EAFS,OAMfS,QAAQC,IAAIV,GACZL,EAAGK,EAASE,KAAM,MAPH,kBAQRF,EAASE,MARD,gCAUfP,EAAG,KAAM,CAAEW,QAAS,KAAIA,UAVT,4DAajBQ,OA3DG,SA2DInB,GAAK,OAAD,oGACbJ,EAAKC,iBAAkB,EDpD3BW,aAAaY,WAAWzB,GCsDpBK,IAHa,8CAKXqB,eAhEG,SAgEYC,EAAiBC,EAAajB,EAAON,GAAK,OAAD,0HAEtDc,QAAQC,IAAI,UAAW,CAAEO,kBAAiBC,gBAFY,SAG/BtB,IAAMuB,MACzB,2BACA,CAAEF,kBAAiBC,eACnB,CAAEN,QAAS,CAAE,cAAgB,UAAhB,OAA2BX,MANU,cAGhDD,EAHgD,OAQtDS,QAAQC,IAAIV,GACZL,EAAG,MATmD,kBAU/CK,EAASE,MAVsC,kCAYtDP,EAAG,CAAEW,QAAS,KAAIN,SAASE,KAAKI,UAZsB,8DAiBnDf,I,OCjFF6B,EAAcC,wBAAc,IAE1B,SAASC,EAAYC,GAChC,IAAMhC,EASV,WACI,MAAwBiC,mBAAS,MAAjC,mBAAOnB,EAAP,KAAaoB,EAAb,KACA,EAAkCD,oBAAS,GAA3C,mBAAOE,EAAP,KAAkBC,EAAlB,KACA,EAA0BH,mBAAS,MAAnC,mBAAOI,EAAP,KAAcC,EAAd,KAEAC,qBAAU,WACN,IAAMC,EAAc,uCAAG,sBAAAC,EAAA,sEACbC,EAAQ1B,YAAW,SAACF,GACtBA,EAAOI,QAAQC,IAAI,gBAAkBL,EAAKP,UAAYW,QAAQC,IAAI,iBAClEe,EAAQpB,GACRwB,EAAS,MACTF,GAAa,MALE,2CAAH,qDAQpBlB,QAAQC,IAAI,yBACZiB,GAAa,GACbI,MAED,IAEH,IAOMtC,EAAQ,SAACC,EAAaC,GACxBc,QAAQC,IAAI,cACZiB,GAAa,GACbM,EAAQxC,MAAMC,GAAa,SAACW,EAAMuB,GAC3BA,EAAOC,EAASD,IAEfH,EAAQpB,GACRwB,EAAS,MACTlC,EAAGU,OAGXsB,GAAa,IAuBjB,MAAO,CACHtB,OACAqB,YACAE,QACAf,OA7CW,SAACqB,EAAUvC,GACtB,OAAOsC,EAAQpB,OAAOqB,GAAU,SAAChC,GAC7BO,QAAQC,IAAIR,GACZP,EAAGO,OA2CPT,QACAqB,OA1BW,SAAAnB,GACX,OAAOsC,EAAQnB,QAAO,WAClBW,EAAQ,MACRI,EAAS,MACTlC,GAAMA,QAuBVqB,eAnBmB,SAACC,EAAiBC,EAAavB,GAClD,OAAOsC,EAAQjB,eAAeC,EAAiBC,EAAab,EAAKJ,OAAO,SAACkC,GAClEA,GACCN,EAASM,GACTxC,EAAGwC,KAEHN,EAAS,MACTlC,EAAG,YAjEFyC,GAEb,OACI,cAAChB,EAAYiB,SAAb,CAAsBC,MAAO/C,EAA7B,SACKgC,EAAMgB,WCPJ,SAASC,IACpB,OAAOC,qBAAWrB,GCmDPsB,MApDf,SAAqBC,EAAMC,GAAgC,IAArBC,EAAoB,uDAAN,KAChD,EAAgCrB,mBAAS,CACrCtB,KAAM,GACNwB,WAAW,EACXoB,SAAS,IAHb,mBAAOC,EAAP,KAAiBC,EAAjB,KAMA,EAA8BxB,oBAAS,GAAvC,mBAAOyB,EAAP,KAAgBC,EAAhB,KAEMC,EAAc,kBAAMD,GAAW,SAAAE,GAAI,OAAKA,MAwC9C,OAtCAtB,qBAAU,WAEN,IAAMuB,EAAa,uCAAG,kCAAArB,EAAA,yDAClBgB,EAAY,CAAE9C,KAAM,GAAIwB,WAAW,EAAMoB,SAAS,IADhC,SAGRlC,EAAUgC,EAAY,CAAE,cAAgB,UAAhB,OAA2BA,IAAgB,IAEtEC,EALW,oBAMgB,IAAvBA,EAAYS,OANL,yCAM0BN,EAAY,CAAE9C,KAAM,GAAIwB,WAAW,EAAOoB,SAAS,KAN7E,cAQJS,EAAW,GACjBV,EAAYW,SAAQ,SAAAC,GAChBF,EAASG,KAAK9D,IAAMe,IAAIgC,EAAO,IAAMc,EAAM,CAAE7C,gBAVvC,UAaO+C,QAAQC,IAAIL,GAbnB,QAaVvD,EAbU,OAeJ6D,EAAe7D,EAAS8D,KAAI,SAAAC,GAAG,MAAK,CACtCC,SAAUD,EAAInD,QAAQ,oBACtBV,KAAM6D,EAAI7D,SAGd8C,EAAY,CAAE9C,KAAM2D,EAAcnC,WAAW,EAAOoB,SAAS,IApBnD,yCAsBOlD,IAAMe,IAAIgC,EAAM,CAAE/B,YAtBzB,QAsBVZ,EAtBU,OAuBVgD,EAAY,CAAE9C,KAAMF,EAASE,KAAMwB,WAAW,EAAOoB,SAAS,IAvBpD,0DA2BdrC,QAAQC,IAAR,MACAsC,EAAY,CAAE9C,KAAK,EAAD,GAAOwB,WAAW,EAAOoB,SAAS,IA5BtC,0DAAH,qDAgCnBO,MAED,CAACV,EAAMC,EAAWK,IAEd,CAACF,EAAUC,EAAaG,ICpD5B,SAASc,EAAWrB,GACvB,MAAO,CAAE,cAAgB,UAAhB,OAA2BA,I,4CCExC,WAA2BsB,EAAWC,EAAWvB,GAAjD,iBAAAZ,EAAA,sEAEcpB,EAAUqD,EAAWrB,GAFnC,SAG4BhD,IAAMC,KAAN,wBAA4BqE,EAA5B,WAAgDC,EAAW,CAAEvD,YAHzF,cAGcwD,EAHd,yBAIeA,EAAMlE,MAJrB,gCAMQO,QAAQC,IAAR,MANR,0D,kEAUA,WAA2BwD,EAAWG,EAASC,EAAQ1B,GAAvD,iBAAAZ,EAAA,sEAEcpB,EAAUqD,EAAWrB,GAFnC,SAG4BhD,IAAMuB,MAAN,wBAA6B+C,EAA7B,mBAAiDG,GAAWC,EAAQ,CAAE1D,YAHlG,cAGcwD,EAHd,yBAIeA,EAAMlE,MAJrB,gCAMQO,QAAQC,IAAR,MANR,0D,kEAUA,WAA2BwD,EAAWG,EAASzB,GAA/C,iBAAAZ,EAAA,sEAEcpB,EAAUqD,EAAWrB,GAFnC,SAG4BhD,IAAM2E,OAAN,wBAA8BL,EAA9B,mBAAkDG,GAAW,CAAEzD,YAH3F,cAGcwD,EAHd,yBAIeA,EAAMlE,MAJrB,gCAMQO,QAAQC,IAAR,MANR,0D,kEAUA,WAA2BwD,EAAWG,EAASG,EAAY5B,GAA3D,iBAAAZ,EAAA,sEAEcpB,EAAUqD,EAAWrB,GAFnC,SAG4BhD,IAAMuB,MAAN,wBACC+C,EADD,mBACqBG,EADrB,WAEhB,CAAEG,cACF,CAAE5D,YANd,cAGcwD,EAHd,yBAQeA,EAAMlE,MARrB,gCAUQO,QAAQC,IAAR,MAVR,0D,kEAcA,WAA4BwD,EAAWG,EAASI,EAAQ7B,GAAxD,iBAAAZ,EAAA,sEAEcpB,EAAUqD,EAAWrB,GAFnC,SAG4BhD,IAAMuB,MAAN,wBACC+C,EADD,mBACqBG,EADrB,YAEhB,CAAEI,UACF,CAAE7D,YANd,cAGcwD,EAHd,yBAQeA,EAAMlE,MARrB,gCAUQO,QAAQC,IAAR,MAVR,0D,kEAcA,WAA0BwD,EAAWG,EAASK,EAAS9B,GAAvD,iBAAAZ,EAAA,sEAEcpB,EAAUqD,EAAWrB,GAFnC,SAG6BhD,IAAMC,KAAN,wBACAqE,EADA,mBACoBG,EADpB,aAEjB,CAAEK,WACF,CAAE9D,YANd,cAGc+D,EAHd,OAQQlE,QAAQC,IAAIiE,GARpB,kBASeA,EAAOzE,MATtB,gCAWQO,QAAQC,IAAR,MAXR,0D,kEAeA,WAA6BwD,EAAWG,EAASO,EAAWF,EAAS9B,GAArE,iBAAAZ,EAAA,sEAEcpB,EAAUqD,EAAWrB,GAFnC,SAG6BhD,IAAMuB,MAAN,wBACA+C,EADA,mBACoBG,EADpB,qBACwCO,GACzD,CAAEF,WACF,CAAE9D,YANd,cAGc+D,EAHd,OAQQlE,QAAQC,IAAIiE,GARpB,kBASeA,EAAOzE,MATtB,gCAWQO,QAAQC,IAAR,MAXR,0D,kEAeA,WAA6BwD,EAAWG,EAASO,EAAWhC,GAA5D,iBAAAZ,EAAA,sEAEcpB,EAAUqD,EAAWrB,GAFnC,SAG6BhD,IAAM2E,OAAN,wBACAL,EADA,mBACoBG,EADpB,qBACwCO,GACzD,CAAEhE,YALd,cAGc+D,EAHd,OAOQlE,QAAQC,IAAIiE,GAPpB,kBAQeA,EAAOzE,MARtB,gCAUQO,QAAQC,IAAR,MAVR,0D,kEAgBA,WAAgCwD,EAAWG,EAASnE,EAAM0C,EAAWjD,GAArE,iBAAAqC,EAAA,sEAEcpB,EAAUqD,EAAWrB,GACvBiC,EAAS,CACTC,iBAAkB,SAASC,GACvB,IAAIC,EAAmBC,KAAKC,MAA+B,IAAvBH,EAAcI,OAAgBJ,EAAcK,OAChFzF,GAAqB,oBAAPA,GAAsBA,EAAGqF,IAE3CpE,WARZ,kBAUehB,IAAMC,KAAN,wBACcqE,EADd,mBACkCG,EADlC,gBAEHnE,EACA2E,IAbZ,gCAgBQpE,QAAQC,IAAR,MAhBR,yD,kEAqBA,WAA6BwD,EAAWG,EAASgB,EAAczC,GAA/D,eAAAZ,EAAA,sEAEcpB,EAAUqD,EAAWrB,GAFnC,kBAGehD,IAAMe,IAAN,wBACcuD,EADd,mBACkCG,EADlC,wBACyDgB,GAC5D,CAAEzE,aALd,gCAQQH,QAAQC,IAAR,MARR,yD,kEAYA,WAAgCwD,EAAWG,EAASgB,EAAczC,GAAlE,iBAAAZ,EAAA,sEAEcpB,EAAUqD,EAAWrB,GACrB+B,EAAS/E,IAAM2E,OAAN,wBACML,EADN,mBAC0BG,EAD1B,wBACiDgB,GAC5D,CAAEzE,YAENH,QAAQC,IAAIiE,GAPpB,kBAQeA,GARf,gCAUQlE,QAAQC,IAAR,MAVR,0D,sBAcA,IAAM4E,EAAY,CACdC,Y,gDAAaC,Y,kDAAaC,Y,gDAAaC,Y,kDAAaC,a,kDACpDC,W,kDAAYC,c,oDAAeC,c,kDAC3BC,iB,oDAAkBC,c,kDAAeC,iB,mDAGtBX,I,4CC7Jf,WAA6BY,EAAatD,GAA1C,iBAAAZ,EAAA,sEAEcpB,EAAUqD,EAAWrB,GAFnC,SAG8BhD,IAAMC,KAAK,gBAAiBqG,EAAa,CAAEtF,YAHzE,cAGcuF,EAHd,yBAIeA,GAJf,gCAMQ1F,QAAQC,IAAR,MANR,0D,kEAUA,WAA6BwD,EAAWtB,EAAW0B,GAAnD,iBAAAtC,EAAA,sEAEcpB,EAAUqD,EAAWrB,GAFnC,SAG8BhD,IAAMuB,MAAN,wBAA6B+C,GAAaI,EAAQ,CAAE1D,YAHlF,cAGcuF,EAHd,yBAIeA,GAJf,gCAMQ1F,QAAQC,IAAR,MANR,0D,kEAUA,WAA6BwD,EAAWtB,GAAxC,iBAAAZ,EAAA,sEAEcpB,EAAUqD,EAAWrB,GAFnC,SAG8BhD,IAAM2E,OAAN,wBAA8BL,GAAa,CAAEtD,YAH3E,cAGcuF,EAHd,yBAIeA,GAJf,gCAMQ1F,QAAQC,IAAR,MANR,0D,kEAUA,WAAsCwD,EAAWkC,EAAgBxD,GAAjE,iBAAAZ,EAAA,sEAEcpB,EAAUqD,EAAWrB,GAFnC,SAG6BhD,IAAMC,KAAN,wBAA4BqE,EAA5B,kBAAuD,CAAEkC,kBAAkB,CAAExF,YAH1G,cAGc+D,EAHd,yBAIeA,GAJf,gCAMQlE,QAAQC,IAAR,MANR,0D,kEAUA,WAAyCwD,EAAWkC,EAAgBxD,GAApE,iBAAAZ,EAAA,sEAEcpB,EAAUqD,EAAWrB,GAFnC,SAG6BhD,IAAM2E,OAAN,wBAA8BL,EAA9B,kBAAyD,CAAEkC,kBAAkB,CAAExF,YAH5G,cAGc+D,EAHd,yBAIeA,GAJf,gCAMQlE,QAAQC,IAAR,MANR,0D,sBAUA,IAAM2F,EAAc,CAChBC,c,8CAAeC,c,gDAAeC,c,8CAAeC,uB,gDAAwBC,0B,iDAG1DL,IClDFM,EAAkBtF,wBAAc,IAE9B,SAASuF,EAAgBrF,GACpC,IAAMsF,EASV,WACI,IAAMtH,EAAOiD,IACb,EAAgCE,EAAY,gBAAiBnD,EAAKc,KAAOd,EAAKc,KAAKJ,MAAQ,MAA3F,mBAAO4G,EAAP,KAAiBC,EAAjB,KAEMC,EAAmB,uCAAG,6BAAA/E,EAAA,6DAAS9B,EAAT,EAASA,KAAT,SAClBmG,EAAYG,cAActG,EAAKgE,UAAW3E,EAAKc,KAAKJ,OADlC,OAExB6G,GAAY,SAAA1D,GACR,IAAMyD,EAAWzD,EAAKlD,KAAK8G,QACrBC,EAAQJ,EAASK,WAAU,SAAAC,GAAI,OAAIA,EAAKC,KAAOlH,EAAKgE,aAE1D,OADA2C,EAASQ,OAAOJ,EAAO,GAChB,2BAAK7D,GAAZ,IAAkBlD,KAAM2G,OANJ,2CAAH,sDAUnBS,EAAgB,uCAAG,WAAOC,GAAP,eAAAvF,EAAA,sEACCqE,EAAYC,cAAciB,EAAYhI,EAAKc,KAAKJ,OADjD,OACfkG,EADe,OAErBW,GAAY,SAAA1D,GACR,IAAMyD,EAAWzD,EAAKlD,KAAK8G,QAE3B,OADAH,EAASnD,KAAT,2BAAmByC,EAAQjG,MAA3B,IAAiCsH,OAAQ,MAClC,2BAAKpE,GAAZ,IAAkBlD,KAAM2G,OALP,2CAAH,sDAShBY,EAAiB,uCAAG,WAAOvD,EAAWwD,GAAlB,SAAA1F,EAAA,0FAAH,wDAIjB2F,EAAqB,uCAAG,+BAAA3F,EAAA,6DAAS9B,EAAT,EAASA,KAAM0H,EAAf,EAAeA,OAAf,SACpBvB,EAAYI,uBAAuBvG,EAAKgE,UAAW0D,EAAOxB,eAAgB7G,EAAKc,KAAKJ,OADhE,2CAAH,sDAIrB4H,EAAiB,uCAAG,WAAO3D,EAAW4D,GAAlB,eAAA9F,EAAA,sEACCsD,EAAUC,YAAYrB,EAAW4D,EAAcvI,EAAKc,KAAKJ,OAD1D,cAChB8H,EADgB,OAEtBjB,GAAY,SAAA1D,GACR,IAAMyD,EAAWzD,EAAKlD,KAAK8G,QACrBgB,EAAanB,EAASK,WAAU,SAAAe,GAAI,OAAIA,EAAKb,KAAOc,OAAOhE,MAEjE,OADA2C,EAASmB,GAAYR,OAAO9D,KAAKqE,GAC1B,2BAAK3E,GAAZ,IAAkBlD,KAAM2G,OANN,kBAQfkB,GARe,2CAAH,wDAWjBI,EAAiB,uCAAG,WAAOjE,EAAWG,GAAlB,SAAArC,EAAA,sEAChBsD,EAAUG,YAAYvB,EAAWG,EAAS9E,EAAKc,KAAKJ,OADpC,OAEtB6G,GAAY,SAAA1D,GACR,IAAMyD,EAAWzD,EAAKlD,KAAK8G,QACrBgB,EAAanB,EAASK,WAAU,SAAAe,GAAI,OAAIA,EAAKb,KAAOc,OAAOhE,MAC3DkE,EAAWvB,EAASmB,IACnBnB,EAASmB,GAAYR,QACrBX,EAASmB,GAAYR,OAAOlE,OAAS,GACrCuD,EAASmB,GAAYR,OAAON,WAAU,SAAA9C,GAAK,OAAIA,EAAMgD,KAAOc,OAAO7D,MAE1E,OADAwC,EAASmB,GAAYR,OAAOH,OAAOe,EAAU,GACtC,2BAAKhF,GAAZ,IAAkBlD,KAAM2G,OAVN,2CAAH,wDAcjBwB,EAAe,uCAAG,WAAOnE,EAAWG,EAASiE,GAA3B,eAAAtG,EAAA,yDAEoB,IAArCuG,OAAOC,KAAKF,GAAchF,OAFT,iEAIOgC,EAAUE,YAAYtB,EAAWG,EAASiE,EAAc/I,EAAKc,KAAKJ,OAJzE,OAIdwI,EAJc,OAKpB3B,GAAY,SAAA1D,GACR,IAAMyD,EAAWzD,EAAKlD,KAAK8G,QACrBgB,EAAanB,EAASK,WAAU,SAAAe,GAAI,OAAIA,EAAKb,KAAOc,OAAOhE,MAC3DkE,EAAWvB,EAASmB,IACnBnB,EAASmB,GAAYR,QACrBX,EAASmB,GAAYR,OAAOlE,OAAS,GACrCuD,EAASmB,GAAYR,OAAON,WAAU,SAAA9C,GAAK,OAAIA,EAAMgD,KAAOc,OAAO7D,MAE1E,OADAwC,EAASmB,GAAYR,OAAOY,GAAYK,EACjC,2BAAKrF,GAAZ,IAAkBlD,KAAM2G,OAbR,2CAAH,0DAiBf6B,EAAiB,uCAAG,WAAOxE,EAAWG,EAAS+B,GAA3B,eAAApE,EAAA,sEACKsD,EAAUI,YAAYxB,EAAWG,EAAS+B,EAAgB7G,EAAKc,KAAKJ,OADzE,OAChBwI,EADgB,OAEtB3B,GAAY,SAAA1D,GACR,IAAMyD,EAAWzD,EAAKlD,KAAK8G,QACrBgB,EAAanB,EAASK,WAAU,SAAAe,GAAI,OAAIA,EAAKb,KAAOc,OAAOhE,MAC3DkE,EAAWvB,EAASmB,IACnBnB,EAASmB,GAAYR,QACrBX,EAASmB,GAAYR,OAAOlE,OAAS,GACrCuD,EAASmB,GAAYR,OAAON,WAAU,SAAA9C,GAAK,OAAIA,EAAMgD,KAAOc,OAAO7D,MAE1E,OADAwC,EAASmB,GAAYR,OAAOY,GAAYK,EACjC,2BAAKrF,GAAZ,IAAkBlD,KAAM2G,OAVN,2CAAH,0DAcjB8B,EAAgB,uCAAG,WAAOzE,EAAWG,GAAlB,eAAArC,EAAA,sEACMsD,EAAUK,aAAazB,EAAWG,EAAS,aAAc9E,EAAKc,KAAKJ,OADzE,OACfwI,EADe,OAErB3B,GAAY,SAAA1D,GACR,IAAMyD,EAAWzD,EAAKlD,KAAK8G,QACrBgB,EAAanB,EAASK,WAAU,SAAAe,GAAI,OAAIA,EAAKb,KAAOc,OAAOhE,MAC3DkE,EAAWvB,EAASmB,IACnBnB,EAASmB,GAAYR,QACrBX,EAASmB,GAAYR,OAAOlE,OAAS,GACrCuD,EAASmB,GAAYR,OAAON,WAAU,SAAA9C,GAAK,OAAIA,EAAMgD,KAAOc,OAAO7D,MAE1E,OADAwC,EAASmB,GAAYR,OAAOY,GAAYK,EACjC,2BAAKrF,GAAZ,IAAkBlD,KAAM2G,OAVP,2CAAH,wDAchB+B,EAAgB,uCAAG,WAAO1E,EAAWG,EAASI,GAA3B,eAAAzC,EAAA,sEACMsD,EAAUK,aAAazB,EAAWG,EAASI,EAAQlF,EAAKc,KAAKJ,OADnE,OACfwI,EADe,OAErB3B,GAAY,SAAA1D,GACR,IAAMyD,EAAWzD,EAAKlD,KAAK8G,QACrBgB,EAAanB,EAASK,WAAU,SAAAe,GAAI,OAAIA,EAAKb,KAAOc,OAAOhE,MAC3DkE,EAAWvB,EAASmB,IACnBnB,EAASmB,GAAYR,QACrBX,EAASmB,GAAYR,OAAOlE,OAAS,GACrCuD,EAASmB,GAAYR,OAAON,WAAU,SAAA9C,GAAK,OAAIA,EAAMgD,KAAOc,OAAO7D,MAE1E,OADAwC,EAASmB,GAAYR,OAAOY,GAAYK,EACjC,2BAAKrF,GAAZ,IAAkBlD,KAAM2G,OAVP,2CAAH,0DAchBgC,EAA4B,uCAAG,WAAO3E,EAAWG,EAASnE,EAAMP,GAAjC,SAAAqC,EAAA,6DACjCvB,QAAQC,IAAI,cADqB,kBAE1B4E,EAAUS,iBAAiB7B,EAAWG,EAASnE,EAAMX,EAAKc,KAAKJ,MAAON,IAF5C,2CAAH,4DAK5BmJ,EAA4B,SAAC5E,EAAWG,EAAS0E,GACnDjC,GAAY,SAAA1D,GACR,IAAMyD,EAAWzD,EAAKlD,KAAK8G,QACrBgB,EAAanB,EAASK,WAAU,SAAAe,GAAI,OAAIA,EAAKb,KAAOc,OAAOhE,MAC3DkE,EAAWvB,EAASmB,IACnBnB,EAASmB,GAAYR,QACrBX,EAASmB,GAAYR,OAAOlE,OAAS,GACrCuD,EAASmB,GAAYR,OAAON,WAAU,SAAA9C,GAAK,OAAIA,EAAMgD,KAAOc,OAAO7D,MACpE2E,EAAcnC,EAASmB,GAAYR,OAAOY,GAAUW,mBAAqB,GAE/E,OADAlC,EAASmB,GAAYR,OAAOY,GAAUW,kBAAoBC,EAAYC,OAAOF,GACtE,2BAAK3F,GAAZ,IAAkBlD,KAAM2G,QAIhC,MAAO,CACH3G,KAAM2G,EAAS3G,KACf6G,sBACAU,oBACAH,mBACAK,wBACAQ,oBACAE,kBACAR,oBACAa,oBACAC,mBACAC,mBACAC,+BACAC,6BA5JaI,GAEjB,OACI,cAACvC,EAAgBtE,SAAjB,CAA0BC,MAAOuE,EAAjC,SACKtF,EAAMgB,W,uCCaJ4G,MArBf,YAA0D,IAAlC5G,EAAiC,EAAjCA,SAAU6G,EAAuB,EAAvBA,UAAc7H,EAAS,iBACjDhC,EAAOiD,IACL6G,EAAYD,EAClB,OACI,cAAC,IAAD,2BACQ7H,GADR,IAEI+H,OAAQ,SAAC/H,GAAD,OACRhC,EAAKc,KACDkC,GAAY,cAAC8G,EAAD,eAAe9H,IAE3B,cAAC,IAAD,CACIgI,GAAI,CACAC,SAAU,SACVC,MAAO,CAAEC,KAAMnI,EAAMoI,kB,iCCP9BC,MARf,YAA6C,IAAvBL,EAAsB,EAAtBA,GAAIM,EAAkB,EAAlBA,KAAStI,EAAS,iBACxC,OACI,cAACuI,EAAA,EAAD,yBAAQC,GAAIC,IAAMT,GAAIA,GAAU,IAAKU,QAAQ,mBAAsB1I,GAAnE,aACKsI,GAAQtI,EAAMgB,a,gDCkBZ2H,OAtBf,YAAoD,IAAlCC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,KAAMd,EAAoB,EAApBA,OAAW/H,EAAS,kBAC/C,OACI,eAAC8I,GAAA,EAAD,yBAAQC,UAAU,UAAa/I,GAA/B,cACI,eAAC8I,GAAA,EAAOE,MAAR,CAAcnD,GAAG,QAAQoD,KAAK,IAA9B,UACKJ,EACG,qBACIK,IAAI,GACJC,IAAKN,EACLE,UAAU,SAEd,KAEHH,KAEL,cAACE,GAAA,EAAOM,OAAR,CAAe,gBAAc,qBAC7B,cAACN,GAAA,EAAOO,SAAR,CAAiBxD,GAAG,mBAAmBkD,UAAU,sBAAjD,SACKhB,WCnBF,OAA0B,iCC+B1BuB,OAtBf,SAAmBtJ,GACf,IAAMhC,EAAOiD,IAEP1B,EAAS,WACXvB,EAAKuB,QAAO,WACRL,QAAQC,IAAI,kBAIpB,OACI,cAAC,GAAD,CAAQyJ,MAAM,gBAAgBC,KAAMA,GAAMU,GAAG,OAAOC,OAAO,KAAKzB,OAAQ,kBACpE,eAAC0B,EAAA,EAAD,WACOzL,EAAKc,KAAsE,KAA/D,cAAC,EAAD,CAAYiK,UAAU,SAASf,GAAG,QAAlC,mBACZhK,EAAKc,KAAwE,KAAjE,cAAC,EAAD,CAAYiK,UAAU,SAASf,GAAG,SAAlC,oBACbhK,EAAKc,KAAO,cAAC,EAAD,CAAYiK,UAAU,SAASf,GAAG,aAAlC,uBAAwE,KACpFhK,EAAKc,KAAO,cAAC,EAAD,CAAYiK,UAAU,SAASf,GAAG,WAAlC,qBAAoE,KAChFhK,EAAKc,KAAO,cAAC,EAAD,CAAYiK,UAAU,SAASW,QAASnK,EAAxC,oBAAsE,Y,uDCnBrF,SAASoK,GAAU3J,GAC9B,OACI,uBAAM+I,UAAU,uBAAhB,UACI,uBAAOa,QAAS5J,EAAM6J,KAAtB,SAA6B7J,EAAM8J,QACnC,sBAAOf,UAAU,aAAjB,SACI,cAAC,KAAD,CAAcc,KAAM7J,EAAM6J,SAE9B,cAAC,KAAD,CAAOrB,GAAIuB,KAAaF,KAAM7J,EAAM6J,KAAMG,KAAMhK,EAAMgK,KAAMjB,UAAU,kB,aCXrEkB,GAAeC,OAAaC,MAAM,CAC3CC,UAAWF,OACNG,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,YACdC,SAAUN,OACLG,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,YACdhM,SAAU2L,OACLG,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,YACdE,MAAOP,OACFO,MAAM,iBACNF,SAAS,YACd/L,SAAU0L,OACLG,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,YACdG,gBAAiBR,OAAaS,MAAM,CAACT,KAAQ,YAAa,IAAK,4BAGtDU,GAAcV,OAAaC,MAAM,CAC1C5L,SAAU2L,OACLG,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,YACd/L,SAAU0L,OACLG,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,cAGLM,GAAuBX,OAAaC,MAAM,CACnDzK,gBAAiBwK,OACZG,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,YACd5K,YAAauK,OACRG,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,YACdO,mBAAoBZ,OACfS,MAAM,CAACT,KAAQ,eAAgB,MAAO,0BAGlCa,GAAgBb,OAAaC,MAAM,CAC5CN,KAAMK,OACDG,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,YACdS,YAAad,OACRG,IAAI,EAAG,cACPC,IAAI,IAAK,aACTC,SAAS,cAGLU,GAAcf,OAAaC,MAAM,CAC1CvB,MAAOsB,OACFG,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,YACdS,YAAad,OACRG,IAAI,EAAG,cACPC,IAAI,IAAK,aACTC,SAAS,c,gBCfHW,OA7Cf,YAA4C,IAAvBC,EAAsB,EAAtBA,SAAanL,EAAS,kBACvC,OACI,cAAC,KAAD,CACIoL,cAAe,CAAE7M,SAAU,GAAIC,SAAU,IACzC6M,iBAAkBT,GAClBO,SAAQ,uCAAE,WAAO9E,EAAP,kBAAA5F,EAAA,6DAAiB6K,EAAjB,EAAiBA,gBACT,GADR,kBAGIH,EAAS9E,GAHb,uDAKFnH,QAAQC,IAAR,MALE,QAONmM,GAAc,GAPR,yDAAF,wDAHZ,SAaK,gBAAGC,EAAH,EAAGA,aAAH,OACG,eAAC,KAAD,CAAMxC,UAAU,OAAhB,UACI,cAACyC,GAAA,EAAD,CAAKhD,GAAG,KAAKO,UAAU,uBAAvB,mBAEA,cAACyC,GAAA,EAAD,CAAKhD,GAAG,KAAKO,UAAU,wBAAvB,mCACA,cAACyC,GAAA,EAAD,CAAKhD,GAAG,IAAIO,UAAU,qBAAtB,8HAEA,cAACyC,GAAA,EAAD,CAAKzC,UAAU,OAAf,SACI,cAAC,GAAD,CAAWc,KAAK,WAAWG,KAAK,OAAOF,MAAM,eAGjD,cAAC0B,GAAA,EAAD,CAAKzC,UAAU,OAAf,SACI,cAAC,GAAD,CAAWc,KAAK,WAAWG,KAAK,WAAWF,MAAM,eAGpD9J,EAAMK,OAAS,qBAAK0I,UAAU,aAAf,SAA6B/I,EAAMK,MAAMtB,UAEzD,cAACyM,GAAA,EAAD,CAAKzC,UAAU,OAAf,SACI,cAACR,EAAA,EAAD,CAAQG,QAAQ,UAAUsB,KAAK,SAASyB,SAAUF,EAAlD,qBAKJ,eAACC,GAAA,EAAD,CAAKhD,GAAG,IAAIO,UAAU,uBAAtB,+CAA+E,cAAC,IAAD,CAAMf,GAAG,SAAT,6BAA/E,0B,OCbL0D,OAzBf,SAAmB1L,GACf,IAAMhC,EAAOiD,IAQP0K,EAAY3L,EAAMoI,SAASF,MAAQlI,EAAMoI,SAASF,MAAMC,KAAO,KAErE,OAAInK,EAAKmC,UAAkB,6CACvBnC,EAAKc,KAAa,cAAC,IAAD,CAAUkJ,GAAI2D,EAAYA,EAAU1D,SAAW,MAGjE,cAAC2D,GAAA,EAAD,CAAWC,OAAK,EAAC9C,UAAU,OAA3B,SACI,cAACyC,GAAA,EAAD,CAAKzC,UAAU,iBAAf,SACI,cAAC+C,GAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAA/B,SACI,cAAC,GAAD,CAAWf,SAfb,SAAChN,GAAD,OACVH,EAAKE,MAAMC,GAAa,SAACW,GACrBI,QAAQC,IAAI,gBAAkBL,EAAKP,SAAW,SAaV8B,MAAOrC,EAAKqC,e,OC2C7C8L,OA5Df,SAAoBnM,GAChB,OACI,cAAC,KAAD,CACIoL,cAAe,CAAEhB,UAAW,GAAII,SAAU,GAAIC,MAAO,GAAIlM,SAAU,GAAIC,SAAU,GAAIkM,gBAAiB,IACtGW,iBAAkBpB,GAClBkB,SAAQ,uCAAE,WAAO9E,EAAQ+F,GAAf,SAAA3L,EAAA,6DACN2L,EAAKd,eAAc,GADb,kBAGItL,EAAMmL,SAAS9E,GAHnB,sDAKFnH,QAAQC,IAAR,MALE,OAONiN,EAAKd,eAAc,GAPb,yDAAF,wDAHZ,SAaK,gBAAGC,EAAH,EAAGA,aAAH,OACG,eAAC,KAAD,CAAMxC,UAAU,OAAOsD,aAAa,QAApC,UACI,cAACb,GAAA,EAAD,CAAKhD,GAAG,KAAK0D,GAAI,EAAGnD,UAAU,uBAA9B,qBAEA,cAACyC,GAAA,EAAD,CAAKhD,GAAG,KAAKO,UAAU,wBAAvB,oCACA,cAACyC,GAAA,EAAD,CAAKhD,GAAG,IAAIO,UAAU,qBAAtB,mJAEA,eAACyC,GAAA,EAAD,CAAKzC,UAAU,OAAf,UACI,cAAC+C,GAAA,EAAD,CAAKC,GAAI,GAAIE,GAAI,EAAjB,SACI,cAAC,GAAD,CAAWpC,KAAK,YAAYG,KAAK,OAAOF,MAAM,iBAElD,cAACgC,GAAA,EAAD,CAAKC,GAAI,GAAIE,GAAI,EAAjB,SACI,cAAC,GAAD,CAAWpC,KAAK,WAAWG,KAAK,OAAOF,MAAM,mBAIrD,eAAC0B,GAAA,EAAD,CAAKzC,UAAU,OAAf,UACI,cAAC+C,GAAA,EAAD,CAAKC,GAAI,GAAIE,GAAI,EAAjB,SACI,cAAC,GAAD,CAAWpC,KAAK,WAAWG,KAAK,OAAOF,MAAM,gBAEjD,cAACgC,GAAA,EAAD,CAAKC,GAAI,GAAIE,GAAI,EAAjB,SACI,cAAC,GAAD,CAAWpC,KAAK,QAAQG,KAAK,OAAOF,MAAM,eAIlD,eAAC0B,GAAA,EAAD,CAAKzC,UAAU,OAAf,UACI,cAAC+C,GAAA,EAAD,CAAKC,GAAI,GAAIE,GAAI,EAAjB,SACI,cAAC,GAAD,CAAWpC,KAAK,WAAWG,KAAK,WAAWF,MAAM,eAErD,cAACgC,GAAA,EAAD,CAAKC,GAAI,GAAIE,GAAI,EAAjB,SACI,cAAC,GAAD,CAAWpC,KAAK,kBAAkBG,KAAK,WAAWF,MAAM,0BAIhE,cAAC0B,GAAA,EAAD,CAAKzC,UAAU,OAAf,SACI,cAACR,EAAA,EAAD,CAAQG,QAAQ,UAAUsB,KAAK,SAASyB,SAAUF,EAAlD,uBAGJ,eAACC,GAAA,EAAD,CAAKhD,GAAG,IAAIO,UAAU,uBAAtB,6CAA6E,cAAC,IAAD,CAAMf,GAAG,QAAT,4BAA7E,0BC3BLsE,OA1Bf,WACI,IAAMtO,EAAOiD,IACb,EAAgChB,oBAAS,GAAzC,mBAAOsM,EAAP,KAAiBC,EAAjB,KAEMlN,EAAM,uCAAG,WAAOqB,GAAP,SAAAF,EAAA,sEACLzC,EAAKsB,OAAOqB,GAAU,SAAChC,GACzBO,QAAQC,IAAIR,MAFL,OAIX6N,GAAY,GAJD,2CAAH,sDAOZ,OACIxO,EAAKmC,UACD,6CACCnC,EAAKc,MAAQyN,EACV,cAAC,IAAD,CAAUvE,GAAG,MACb,cAAC4D,GAAA,EAAD,CAAWC,OAAK,EAAC9C,UAAU,OAA3B,SACI,cAACyC,GAAA,EAAD,CAAKzC,UAAU,iBAAf,SACI,cAAC+C,GAAA,EAAD,CAAMC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGQ,GAAI,EAAjC,SACI,cAAC,GAAD,CAAYtB,SAAU7L,W,OCZnCoN,OAVf,WAEI,OACI,eAACd,GAAA,EAAD,CAAW7C,UAAU,iBAArB,UACI,cAAC,EAAD,CAAYf,GAAG,YAAYe,UAAU,OAArC,6BACA,cAACR,EAAA,EAAD,CAAQQ,UAAU,OAAlB,uCCKG4D,OAVf,WACI,OACI,cAAC,GAAD,CAAQ/D,MAAM,WAAWW,GAAG,QAAQxB,OAAQ,kBACxC,cAAC0B,EAAA,EAAD,UACI,cAAC,EAAD,CAAYzB,GAAG,gBAAgBe,UAAU,SAAzC,mCCFD6D,OANf,YAAqC,IAAjBC,EAAgB,EAAhBA,KAAM9E,EAAU,EAAVA,OACtB,OACI,qBAAKgB,UAAU,YAAf,SAA6BhB,EAAO8E,MCe7BC,OAhBf,YAAwD,IAA/BjD,EAA8B,EAA9BA,KAAM9I,EAAwB,EAAxBA,MAAOgM,EAAiB,EAAjBA,MAAOhF,EAAU,EAAVA,OACzC,EAAgC9H,oBAAS,GAAzC,mBAAO+M,EAAP,KAAiBC,EAAjB,KACA,OACI,sBAAKlE,UAAW,mBAAqBc,EAArC,UACI,qBAAKd,UAAW,iBAAmBiE,EAAW,YAAc,IAAKtD,QAAS,kBAAMuD,GAAY,SAAApL,GAAI,OAAKA,MAArG,SAA6Gd,IAEzGiM,EAAW,KACVD,GAASA,EAAMhL,OAAS,EACrBgL,EAAMxK,KAAI,SAACsK,EAAMK,GAAP,OAAe,cAAC,GAAD,CAAkCL,KAAMA,EAAM9E,OAAQA,GAAtD,UAAkBhH,EAAlB,YAA2BmM,OAEpD,qBAAKnE,UAAU,sBAAf,8D,2BCXPoE,GAAmB,SAACJ,GAA4D,IAArDK,EAAoD,uDAA3C,KAAMC,EAAqC,uDAAxB,GAAIC,EAAoB,uDAAP,GACjF,IAAIF,EAAQ,OAAOL,EAGnB,IAAMQ,EAAgBC,qBAAUJ,GAAQ,SAACK,GACrC,IAAMC,EAAkBC,kBAAOF,GAAK,SAAC1M,GAAD,OAAqB,IAAVA,KAC/C,OAAOiG,OAAOC,KAAKyG,MAGjBE,EAAgBb,GAASA,EAAMhL,OAAS,GAAKgL,EAAMK,QAAO,SAAAP,GAI5D,IAHA,IACIgB,GAAY,EAEhB,MAHoB7G,OAAOC,KAAKsG,GAGhC,eAA4B,CAAxB,IAAIO,EAAG,MACwC,IAA5CC,oBAASR,EAAcO,GAAMjB,EAAKiB,MACjCD,GAAY,GAIpB,GAAGA,GAA4B,KAAfR,EAAmB,CAAC,IAAD,iBAChBC,GADgB,IAC/B,IAAI,EAAJ,qBAA2B,CAAC,IAApBQ,EAAmB,QACvB,IAAmE,IAAhEC,oBAASlB,EAAKiB,GAAKE,cAAeX,EAAWW,eAAyB,CACrEH,GAAY,EACZ,MACGA,GAAY,GALQ,+BAQnC,OAAOA,KAGX,OAAOD,GAAgCb,GC9B9BkB,GAAkB,SAAClB,GAA4B,IAArBmB,EAAoB,uDAAT,KAC9C,IAAIA,EAAU,OAAOnB,EACrB,IAAMoB,EAAeC,mBAAQrB,GAAO,SAAChM,GAAD,OAAWA,EAAMmN,MACrD,OAAOC,GCgCIE,OA5Bf,YAA6I,IAA7HC,EAA4H,EAA5HA,UAA4H,IAAjHJ,gBAAiH,MAAtG,KAAsG,MAAhGK,mBAAgG,MAAlF,KAAkF,MAA5EC,eAA4E,MAAlE,MAAkE,MAA3DpB,cAA2D,MAAlD,KAAkD,MAA5CC,kBAA4C,MAA/B,GAA+B,MAA3BC,kBAA2B,MAAd,GAAc,EAAVvF,EAAU,EAAVA,OAExH6F,EAAgBT,GAAiBmB,EAAWlB,EAAQC,EAAYC,GAChEa,EAAeF,GAAgBL,EAAeM,GAkBpD,OACI,qBAAKnF,UAAU,iBAAf,SAjBmB,WACnB,IAAI0F,EACJ,GAAGP,GAAYK,EAAa,CACxB,IAAMG,EAAkB,GACxBH,EAAYtM,SAAQ,SAAAlB,GAChB,IAAMsF,EAAS8H,EAAapN,GAC5B2N,EAAgBvM,KAAK,cAAC,GAAD,CAA4C0H,KAAMqE,EAAUnN,MAAOA,EAAOgM,MAAO1G,EAAQ0B,OAAQA,GAAjG,UAAuBmG,EAAvB,YAAmCnN,QAE5D0N,EAAiC,SAAZD,EAAqBE,EAAgBC,UAAYD,OAEtED,EAAqBb,GAAiBA,EAAcrL,KAAI,SAACsK,EAAMK,GAAP,OAAe,cAAC,GAAD,CAAUL,KAAMA,EAAgB+B,SAAU1B,EAAKnF,OAAQA,GAA5BmF,MAGtG,OAAOuB,EAKDI,M,wCCICC,OAhCf,YAAoF,IAAjDlK,EAAgD,EAAhDA,QAASmK,EAAuC,EAAvCA,SAAUC,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,kBAC1D,OACI,eAACC,GAAA,EAAD,CAAMnG,UAAU,oBAAhB,UACI,eAACmG,GAAA,EAAKC,KAAN,CAAWpG,UAAU,YAArB,UACI,cAACmG,GAAA,EAAKE,MAAN,UAAaxK,EAAQiF,OACrB,cAACqF,GAAA,EAAKG,KAAN,UACKzK,EAAQoG,cAEb,eAACsE,GAAA,EAAD,CAAavG,UAAU,UAAvB,UACI,cAAC,EAAD,CAAYL,QAAQ,UAAUV,GAAE,oBAAepD,EAAQiB,IAAvD,0BACA,eAAC0J,GAAA,EAAD,CAAgB7G,QAAQ,YAAYE,MAAM,WAA1C,UACI,cAAC4G,GAAA,EAASC,KAAV,CAAe/F,QAAS,kBAAMsF,EAAOpK,EAAQiB,KAA7C,0BACA,cAAC2J,GAAA,EAASC,KAAV,CAAe/F,QAAS,kBAAMqF,EAAS,CAAEpM,UAAWiC,EAAQiB,MAA5D,4BACA,cAAC2J,GAAA,EAASC,KAAV,CAAe/F,QAAS,kBAAMuF,EAAkB,CAAEtM,UAAWiC,EAAQiB,MAArE,uCAKZ,eAACqJ,GAAA,EAAKC,KAAN,CAAWpG,UAAU,aAAa2G,MAAO,CAAEC,WAAY,mBAAvD,UACI,cAACT,GAAA,EAAKE,MAAN,4BACA,cAACF,GAAA,EAAKG,KAAN,UACK,aAAezK,EAAQqB,OAAOlE,OAAS,oCAE5C,eAACuN,GAAA,EAAD,CAAavG,UAAU,UAAvB,UACI,cAAC,EAAD,CAAYL,QAAQ,UAAUV,GAAE,oBAAepD,EAAQiB,GAAvB,WAAhC,yBACA,cAAC,EAAD,CAAY6C,QAAQ,YAAYV,GAAE,oBAAepD,EAAQiB,GAAvB,eAAlC,qC,4BCfL+J,OARf,YAAiD,IAA1BC,EAAyB,EAAzBA,YAAgB7P,EAAS,kBAC5C,OAAO6P,EACH,cAAC,GAAD,CAAMvB,UAAWuB,EAAa9H,OAAQ,SAAA8E,GAAI,OACtC,cAAC,GAAD,aAAyBjI,QAASiI,GAAU7M,OAEhD,eC6CO8P,OAnDf,YAAuC,IAAb3E,EAAY,EAAZA,SACtB,OACI,cAAC,KAAD,CACIC,cAAe,CAAEvB,KAAM,GAAImB,YAAa,IACxCK,iBAAkBN,GAClBI,SAAQ,uCAAE,WAAO9E,EAAP,kBAAA5F,EAAA,6DAAiB6K,EAAjB,EAAiBA,gBACT,GADR,kBAGIH,EAAS9E,GAHb,uDAKFnH,QAAQC,IAAR,MALE,QAONmM,GAAc,GAPR,yDAAF,wDAHZ,SAaK,gBAAGC,EAAH,EAAGA,aAAH,OACG,eAAC,KAAD,CAAMxC,UAAU,OAAhB,UACI,cAACyC,GAAA,EAAD,CAAKhD,GAAG,KAAR,gCAEA,eAACgD,GAAA,EAAD,WACI,cAACM,GAAA,EAAD,UACI,uBAAOlC,QAAQ,OAAf,4BAEJ,eAACkC,GAAA,EAAD,WACI,cAAC,KAAD,CAAOjC,KAAK,OAAOG,KAAK,OAAOjB,UAAU,eACzC,cAAC,KAAD,CAAcc,KAAK,OAAOd,UAAU,qBAI5C,eAACyC,GAAA,EAAD,WACI,cAACM,GAAA,EAAD,UACI,uBAAOlC,QAAQ,cAAf,2BAEJ,eAACkC,GAAA,EAAD,WACI,cAAC,KAAD,CAAOjC,KAAK,cAAcrB,GAAG,WAAWO,UAAU,eAClD,cAAC,KAAD,CAAcc,KAAK,cAAcd,UAAU,qBAInD,cAACyC,GAAA,EAAD,UACI,cAACjD,EAAA,EAAD,CAAQG,QAAQ,UAAUsB,KAAK,SAASyB,SAAUF,EAAlD,qCC3CXwE,GAA4BjQ,wBAAc,IAExC,SAASkQ,GAA0BhQ,GAC9C,IAAMiQ,EASV,WACI,MAAwBhQ,mBAAS,uBAAjC,mBAAOqI,EAAP,KAAa4H,EAAb,KACA,EAAwBjQ,oBAAS,GAAjC,mBAAOkQ,EAAP,KAAaC,EAAb,KAWA,MAAO,CACH9H,OACA6H,OACAE,yBAZ6B,SAACtP,GAC9BmP,EAAQnP,GACRqP,GAAQ,GACRE,YAAW,WACPF,GAAQ,GACRF,EAAQ,MACT,OAnBoBK,GAE3B,OACI,cAACR,GAA0BjP,SAA3B,CAAoCC,MAAOkP,EAA3C,SACKjQ,EAAMgB,WCNJ,SAASwP,KACpB,OAAOtP,qBAAW6O,ICyBPU,OArBf,SAAwBzQ,GACpB,IAAMhC,EAAOiD,IACPgP,EAAqBO,KAC3B,EAAgCvQ,oBAAS,GAAzC,mBAAOsM,EAAP,KAAiBC,EAAjB,KAEMkE,EAAgB,uCAAG,WAAO1K,GAAP,SAAAvF,EAAA,6DACrBvB,QAAQC,IAAI,+BAAiCnB,EAAKc,KAAKJ,OADlC,SAEfsB,EAAMmL,SAASnF,GAFA,OAGrBiK,EAAmBI,yBAAyB,iCAC5C7D,GAAY,GAJS,2CAAH,sDAOtB,OACiB,IAAbD,EACA,cAAC,IAAD,CAAUvE,GAAG,cACb,cAAC4D,GAAA,EAAD,CAAWC,OAAK,EAAC9C,UAAU,OAA3B,SACI,cAAC,GAAD,CAAgBoC,SAAUuF,O,iBCsDvBC,OA3Ef,YAAqD,IAAjC9G,EAAgC,EAAhCA,KAAM4B,EAA0B,EAA1BA,SAAUmF,EAAgB,EAAhBA,aAChC,EAAkC3Q,oBAAS,GAA3C,mBAAO4Q,EAAP,KAAkBC,EAAlB,KACMC,EAAeC,iBAAO,MAsCtBC,EAAkB,SAACC,GAErB,IADA,IAAMC,EAAQ,GACLC,EAAI,EAAGA,EAAIF,EAASnP,OAAQqP,IACjCD,EAAMhP,KAAK+O,EAASrE,KAAKuE,IAE7B,OAAOD,GAGX,OACI,sBACIpI,UAAS,mBAAc8H,EAAY,YAAc,IACjDQ,WAjCe,SAACC,GACpBA,EAAEC,iBACFT,GAAa,IAgCTU,YA7BgB,WACpBV,GAAa,IA6BTW,OA1BW,SAACH,GAEhB,GADAA,EAAEC,kBACC9F,EAAH,CAEA,IAAMiG,EAAQJ,EAAEK,aAAaD,MAC7B,GAAGd,EAAc,CACb,IAAMO,EAAQF,EAAgBS,GAC9Bd,EAAaO,GAGjBL,GAAa,KAiBTpH,QAlDe,WAChB+B,GACHsF,EAAaa,QAAQC,SAiDjBnC,MAAO,CAAEoC,OAAQrG,EAAW,UAAY,WAN5C,UAQI,uBACIsG,IAAKhB,EACLlH,KAAMA,EACNd,UAAU,aACViB,KAAK,OACLgI,UAAQ,EACRC,SAtDa,SAACX,GACtB,IAAG7F,EAAH,CACA,IAAMiG,EAAQJ,EAAEY,OAAOR,MACvB,GAAGd,EAAc,CACb,IAAMO,EAAQF,EAAgBS,GAC9Bd,EAAaO,QAmDb,qBACIjI,IAAI,SACJH,UAAU,OACVI,IAAI,gCAER,oD,sECnENgJ,GAAgB,CAClBT,MAAO,GACPU,aAAa,EACbC,SAAU,GACVC,YAAY,GA6LDC,OA1Lf,YAAmF,IAAjEN,EAAgE,EAAhEA,SAAUO,EAAsD,EAAtDA,YAAaC,EAAyC,EAAzCA,QAASC,EAAgC,EAAhCA,mBAAuB1S,EAAS,kBAC9E,EAA4BC,mBAASkS,IAArC,mBAAOQ,EAAP,KAAeC,EAAf,KAEArS,qBAAU,WACNmS,GAAsBA,GAAmB,kBAAMG,OAChD,CAACH,IAEJ,IAwBMI,EAAW,uCAAG,gCAAArS,EAAA,6DAChBmS,GAAU,SAAA/Q,GAAI,kCAAUA,GAAV,IAAgBwQ,SAAU,GAAID,aAAa,OAEnDpQ,EAAW,GACjB9C,QAAQC,IAAIwT,GAEZA,EAAOjB,OAASiB,EAAOjB,MAAMzP,SAAQ,SAAA8Q,GACjC7T,QAAQC,IAAI,+BACZ6T,EAAYH,EAAgBE,GAC5B,IAAMpU,EAAO,IAAIsU,SACjBtU,EAAKuU,OAAO,cAAeH,GAC3B/Q,EAASG,KAAKqQ,EAAY7T,EAAMqU,EAAUG,gBAX9B,kBAeoB/Q,QAAQC,IAAIL,GACvCoR,MAAK,SAAAC,GAAS,OAAIA,EAAU9Q,KAAI,SAAA9D,GAAQ,OAAIA,EAASE,KAAKkH,SAC1DuN,MAAK,SAAAzU,GAEF,OADAqU,EAAUM,YACH3U,KAEV4U,OAAM,SAAA3S,GAAG,OAAIoS,EAAUQ,UAAU5S,MArB1B,OAeN4G,EAfM,OAuBZxH,EAAMyT,WAAWjM,GAvBL,kDAyBZwL,EAAUQ,UAAV,MAzBY,0DAAH,qDAoDXX,EAAkB,SAACE,GAErB,OADAH,GAAU,SAAA/Q,GAAI,kCAAUA,GAAV,IAAgBwQ,SAAU,GAAID,aAAa,OAClD,CACHe,WAAY,SAAC1P,GACNA,GAAyC,MAArBA,GACnBvE,QAAQC,IAAI,eACZyT,GAAU,SAAA/Q,GACN,IAAM6R,EAAI,eAAQ7R,EAAKwQ,UAKvB,OAJAqB,EAAKX,EAAKlJ,MAAQ,CACd3B,MAAO,UACPyL,WAAYlQ,GAET,2BAAK5B,GAAZ,IAAkBwQ,SAAUqB,QAE1BjQ,IACNvE,QAAQC,IAAI,gBACZyT,GAAU,SAAA/Q,GACN,IAAM6R,EAAI,eAAQ7R,EAAKwQ,UAKvB,OAJAqB,EAAKX,EAAKlJ,MAAQ,CACd3B,MAAO,OACPyL,WAAYlQ,GAET,2BAAK5B,GAAZ,IAAkBwQ,SAAUqB,SAIxCJ,UAAW,WACPpU,QAAQC,IAAI,mBACZyT,GAAU,SAAA/Q,GAAI,kCAASA,GAAT,IAAeyQ,YAAY,EAAMsB,WAAW,QAE9DJ,UAAW,SAAC5S,GACR1B,QAAQC,IAAI,kBAAmByB,GAC/BgS,GAAU,SAAA/Q,GAAI,kCAASA,GAAT,IAAeyQ,YAAY,EAAOsB,WAAW,UAKjEC,EAAiB,SAACd,GACpB,IAAMe,EAAiBnB,EAAON,UAAYM,EAAON,SAASU,EAAKlJ,MAC/D,GAAG8I,EAAOP,aAAeO,EAAOL,WAC5B,OACI,sBAAKvJ,UAAU,mBAAf,UACI,cAACgL,GAAA,EAAD,CAAaC,IAAKF,EAAiBA,EAAeH,WAAa,IAC/D,qBACI5K,UAAU,kBACVG,IAAI,aACJC,IAAI,qCACJuG,MAAO,CACHuE,QACIH,GAA2C,SAAzBA,EAAe5L,MAAmB,GAAM,SAQtF,OACI,sBAAKa,UAAU,SAAf,UACI,sBAAKA,UAAU,SAAf,UACI,sBAAMA,UAAU,QAAhB,0BACE0J,GACE,wBACI1J,UAAU,oBACVW,QAAS,kBAAM+I,KAFnB,kBAQR,sBAAK1J,UAAU,UAAf,UACI,8BACI,cAAC,GAAD,CACIc,KAAM7J,EAAM6J,KACZ+G,aAtJK,SAACc,GACtBkB,GAAU,SAAA/Q,GACN,IAAMqS,EAAerS,EAAK6P,MAAMhK,OAAOgK,GAEvC,OADAO,GAAYA,EAASiC,GACd,2BACArS,GADP,IAEI6P,MAAOwC,QAiJCzI,SAAUkH,EAAOP,aAAeO,EAAOL,eAG/C,qBAAKvJ,UAAU,QAAf,SAEQ4J,EAAOjB,OAASiB,EAAOjB,MAAMnP,KAAI,SAACwQ,EAAM7F,GAAP,OAC7B,sBAAKnE,UAAU,gBAAf,UACI,sBAAMA,UAAU,WAAhB,SAA4BgK,EAAKlJ,OAChCgK,EAAed,GAAO,IACvB,wBACIhK,UAAU,yBACVW,QAAS,kBAvJbyK,EAuJsCjH,OAtJ9D0F,GAAU,SAAA/Q,GACN3C,QAAQC,IAAI,iBAAkBgV,GAC9B,IAAMD,EAAerS,EAAK6P,MAAMjM,QAEhC,OADAyO,EAAapO,OAAOqO,EAAW,GACxB,2BACAtS,GADP,IAEI6P,MAAOwC,OAPQ,IAACC,GAwJIzE,MAAO,CACH0E,QAASzB,EAAOP,aAAeO,EAAOL,WAAa,OAAS,UAJpE,iBAHJ,oBAAiDpF,YAiBjE,qBAAKnE,UAAU,UAAf,SAxHAyJ,EAEDG,EAAOL,WAEF,cAAC/J,EAAA,EAAD,CACImB,QAAS,kBAAMkJ,EAAUT,KAD7B,mBAQA,cAAC5J,EAAA,EAAD,CACIkD,UAAWkH,EAAOjB,OAASiB,EAAOjB,MAAM3P,OAAS,GAAK4Q,EAAOP,YAC7D1I,QAASoJ,EAFb,oBAZgB,WC8EjBuB,OAjJf,YAAoD,IAA5BlJ,EAA2B,EAA3BA,SAAUmJ,EAAiB,EAAjBA,cAC9B,EAA8CrU,mBAAS,CACnDkT,WAAY,SAAC1P,GAAuBvE,QAAQC,IAAIsE,IAChD6P,UAAW,WAAQpU,QAAQC,IAAI,sBAC/BqU,UAAW,WAAQtU,QAAQC,IAAI,oBAHnC,mBAAO0T,EAAP,KAAwBH,EAAxB,KAMA,OACI,cAAC,KAAD,CACItH,cAAe,CAAExC,MAAO,GAAIoC,YAAa,GAAIuJ,SAAU,QAASC,SAAU,UAAWtR,OAAQ,aAAcD,WAAY,IACvHoI,iBAAkBJ,GAClBE,SAAQ,uCAAE,WAAO9E,EAAP,oBAAA5F,EAAA,6DAAiB6K,EAAjB,EAAiBA,gBACT,GADR,SAGI9E,EAAWH,EAHf,SAKI8E,EAAS3E,EAAUqM,GALvB,uDAQF3T,QAAQC,IAAR,MARE,QAUNmM,GAAc,GAVR,yDAAF,wDAHZ,SAgBK,gBAAGC,EAAH,EAAGA,aAAckJ,EAAjB,EAAiBA,cAAeC,EAAhC,EAAgCA,WAAYC,EAA5C,EAA4CA,UAA5C,OACG,eAAC,KAAD,CAAM5L,UAAU,OAAOlD,GAAG,iBAA1B,UACI,cAAC2F,GAAA,EAAD,CAAKhD,GAAG,KAAR,2BAEA,eAACgD,GAAA,EAAD,WACI,cAACM,GAAA,EAAD,UACI,uBAAOlC,QAAQ,QAAf,2BAEJ,eAACkC,GAAA,EAAD,WACI,cAAC,KAAD,CAAOjC,KAAK,QAAQG,KAAK,OAAOjB,UAAU,eAC1C,sBAAMA,UAAU,aAAhB,SACI,cAAC,KAAD,CAAcc,KAAK,kBAK/B,eAAC2B,GAAA,EAAD,WACI,cAACM,GAAA,EAAD,UACI,uBAAOlC,QAAQ,cAAf,2BAEJ,eAACkC,GAAA,EAAD,WACI,cAAC,KAAD,CAAOjC,KAAK,cAAcrB,GAAG,WAAWO,UAAU,eAClD,sBAAMA,UAAU,aAAhB,SACI,cAAC,KAAD,CAAcc,KAAK,cAAcd,UAAU,uBAKvD,eAACyC,GAAA,EAAD,WACI,cAACM,GAAA,EAAD,UACI,uBAAOlC,QAAQ,WAAf,wBAEJ,eAACkC,GAAA,EAAD,WACI,eAAC,KAAD,CAAOjC,KAAK,WAAWrB,GAAG,SAASO,UAAU,aAA7C,UACI,wBAAQhI,MAAM,MAAd,iBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,QAAd,8BAEJ,sBAAMgI,UAAU,aAAhB,SACI,cAAC,KAAD,CAAcc,KAAK,WAAWd,UAAU,uBAKpD,eAACyC,GAAA,EAAD,WACI,cAACM,GAAA,EAAD,UACI,uBAAOlC,QAAQ,WAAf,wBAEJ,eAACkC,GAAA,EAAD,WACI,eAAC,KAAD,CAAOjC,KAAK,WAAWrB,GAAG,SAASO,UAAU,aAA7C,UACI,wBAAQhI,MAAM,UAAd,qBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,WAAd,yBAEJ,sBAAMgI,UAAU,aAAhB,SACI,cAAC,KAAD,CAAcc,KAAK,WAAWd,UAAU,uBAKpD,eAACyC,GAAA,EAAD,WACI,cAACM,GAAA,EAAD,UACI,uBAAOlC,QAAQ,cAAf,2BAEJ,cAACkC,GAAA,EAAD,UACI,cAAC,KAAD,CACIjC,KAAK,cACLrB,GAAI+J,GACJN,SAAU,SAAA2C,GAAG,OAAIH,EAAc,cAAeG,IAC9ClC,mBAAoBA,EACpB3J,UAAU,oBAKtB,eAACyC,GAAA,EAAD,WACI,cAACM,GAAA,EAAD,UACI,uBAAOlC,QAAQ,SAAf,sBAEJ,eAACkC,GAAA,EAAD,WACI,eAAC,KAAD,CAAOjC,KAAK,aAAarB,GAAG,SAASO,UAAU,aAA/C,UACI,wBAAQhI,MAAM,GAAd,wBAEIuT,EAAc/R,KAAI,SAAAzD,GAAI,OAAI,wBAAsBiC,MAAOjC,EAAK+G,GAAlC,SAAuC/G,EAAKP,UAA/BO,EAAK+G,UAGpD,sBAAMkD,UAAU,aAAhB,SACI,cAAC,KAAD,CAAcc,KAAK,SAASd,UAAU,uBAKlD,cAAC,KAAD,CAAOc,KAAK,gBAAgBG,KAAK,WAAW0F,MAAO,CAAE0E,QAAS,UAE9D,eAAC5I,GAAA,EAAD,WACI,cAACjD,EAAA,EAAD,CAAQG,QAAQ,UAAUsB,KAAK,SAASyB,SAAUF,EAAlD,uBAGA,cAAChD,EAAA,EAAD,CACIG,QAAQ,kBACRK,UAAU,OACV0C,SAAUF,EACV7B,QAAO,sBAAE,sBAAAjJ,EAAA,6DACLgU,EAAc,iBAAiB,GAD1B,SAECC,IAFD,OAGLC,IAHK,2CAJb,8CCnETE,OAxDf,SAAsB7U,GAClB,IAAMhC,EAAOiD,IACPgP,EAAqBO,KAC3B,EAA0CrP,EAAY,iBAAD,OAChCnB,EAAM8U,MAAMC,OAAOpS,UADa,kBAEjD3E,EAAKc,KAAOd,EAAKc,KAAKJ,MAAQ,MAFlC,mBAAO4V,EAAP,KAIA,GAJA,KAIgCrU,oBAAS,IAAzC,mBAAOsM,EAAP,KAAiBC,EAAjB,KAEMwI,EAAkB,uCAAG,WAAOlS,EAASmS,EAAgB7W,GAAhC,SAAAqC,EAAA,6DACvBvB,QAAQC,IAAI,qBADW,kBAEhBa,EAAMkV,0BAA0BlV,EAAM8U,MAAMC,OAAOpS,UAAWG,EAASmS,EAAgB7W,IAFvE,2CAAH,0DAKlB+W,EAAW,uCAAG,WAAO3O,EAAUpI,GAAjB,yBAAAqC,EAAA,6DACV2U,EAAc5O,EAAS4O,mBACtB5O,EAAS4O,YAEVC,EAAgB7O,EAAS6O,qBACxB7O,EAAS6O,cALA,SAOIrV,EAAMmL,SAASnL,EAAM8U,MAAMC,OAAOpS,UAAW6D,GAPjD,cAOV3D,EAPU,OASZmQ,EAAY5U,EAAG,MACb4D,EAAW,GACjBoT,GAAeA,EAAYnT,SAAQ,SAAA8Q,GAC/BC,EAAY5U,EAAG2U,GACf,IAAMpU,EAAO,IAAIsU,SACjBtU,EAAKuU,OAAO,cAAeH,GAC3B/Q,EAASG,KAAK6S,EAAmBnS,EAAMgD,GAAIlH,EAAMqU,EAAUG,gBAf/C,UAkBgB/Q,QAAQC,IAAIL,GACvCoR,MAAK,SAAAC,GAAS,OAAIA,EAAU9Q,KAAI,SAAA9D,GAAQ,OAAIA,EAASE,KAAKkH,SAC1DuN,MAAK,SAAAzU,GAEF,OADAqU,EAAUM,YACH3U,KAEV4U,OAAM,SAAA3S,GAAG,OAAIoS,EAAUQ,UAAU5S,MAxBtB,QAkBV4G,EAlBU,OA0BhBxH,EAAMsV,gBAAgBtV,EAAM8U,MAAMC,OAAOpS,UAAWE,EAAMgD,GAAI2B,GAE9DyI,EAAmBI,yBAAyB,6BAE5C7D,GAAY6I,GA9BI,4CAAH,wDAiCjB,OACiB,IAAb9I,EACI,cAAC,IAAD,CAAUvE,GAAE,oBAAehI,EAAM8U,MAAMC,OAAOpS,UAAlC,aACZ,cAACiJ,GAAA,EAAD,CAAWC,OAAK,EAAC9C,UAAU,OAA3B,SACI,cAAC,GAAD,CAAcoC,SAAUgK,EAAab,cAAeA,EAAc3V,UC3CnE4W,OAXf,YAAkC,IAAXxN,EAAU,EAAVA,OACnB,OACI,cAAC,GAAD,CAAQa,MAAM,SAASW,GAAG,QAAQC,OAAO,KAAKzB,OAAQ,kBAClD,eAAC0B,EAAA,EAAD,WACK1B,IACD,cAAC,EAAD,CAAYC,GAAG,aAAaU,QAAQ,eAAeK,UAAU,SAA7D,kC,UCHVyM,I,OAAU,SAACxV,GAAD,OACZ,eAACyV,GAAA,EAAD,CAAOC,UAAQ,EAACC,SAAO,EAACC,YAAU,EAAC7M,UAAU,QAA7C,UACI,wBAAOA,UAAU,eAAjB,UACI,oBAAIA,UAAU,qBAAd,SAAmC,oBAAI8M,QAAQ,IAAZ,SAAiB7V,EAAM8V,cAC1D,+BAEQ9V,EAAM+V,WAAWxT,KAAI,SAAAuL,GAAG,OAAI,6BAAiCA,GAAjC,uBAAyBA,OAEzD,yBAJI,mBAOZ,uBAAO/E,UAAU,aAAjB,SAEQ/I,EAAMrB,KAAK4D,KAAI,SAAAsK,GAAI,OACf,+BAEQ7M,EAAM+V,WAAWxT,KAAI,SAAAuL,GAAG,OACpB,6BAA+BjB,EAAKiB,IAApC,UAAYjB,EAAKhH,GAAjB,YAAuBiI,OAG/B,6BACK9N,EAAMgB,SAAWhB,EAAMgB,SAAS6L,GAAQ,MAD7C,UAAYA,EAAKhH,GAAjB,eANKgH,EAAKhH,cA8CnBmQ,OA9Bf,YAUI,IATA1H,EASD,EATCA,UACAyH,EAQD,EARCA,WAQD,IAPC7H,gBAOD,MAPY,KAOZ,OANCK,YAMD,EALCC,QAKD,EAJCpB,eAID,MAJU,KAIV,MAHCC,kBAGD,MAHc,GAGd,MAFCC,kBAED,MAFc,GAEd,EADC2I,EACD,EADCA,cAEMrI,EAAgBT,GAAiBmB,EAAWlB,EAAQC,EAAYC,GAChEa,EAAeF,GAAgBL,EAAeM,GAEhDgI,EAAalP,OAAOC,KAAKkH,GAE7B,OAAOA,GAAiB+H,EAAWnU,OAAS,EACxCmU,EAAW3T,KAAI,SAAA4T,GAAK,OAChB,cAAC,GAAD,CAASJ,WAAYA,EAAYpX,KAAMwP,EAAagI,GAAQL,UAAWK,EAAQ,IAA/E,SACKF,OAIT,cAAC,GAAD,CAASF,WAAYA,EAAYpX,KAAMwP,EAAc2H,UAAW,MAAhE,SACKG,K,UCnBEG,GAvCgB,SAAC,GAAgE,IAA9DzT,EAA6D,EAA7DA,UAAWE,EAAkD,EAAlDA,MAAOkM,EAA2C,EAA3CA,SAAUsH,EAAiC,EAAjCA,SAAUC,EAAuB,EAAvBA,QAAS7D,EAAc,EAAdA,QAkB7E,OACI,cAAC8D,GAAA,EAAD,CAAe7G,MAAO,CAAC8G,MAAO,QAA9B,SACI,eAAClH,GAAA,EAAD,WACI,cAAC,EAAD,CAAY5G,QAAQ,UAAUV,GAAE,oBAAerF,EAAf,mBAAmCE,EAAMgD,IAAzE,kBACA,cAAC0C,EAAA,EAAD,CACIG,QAAQ,UACRgB,QAnBgB,SAAC4H,GAC7B,MAAoB,eAAjBzO,EAAMK,OAJmBmT,EAAS,CAAE1T,UAAWA,EAAWG,QAASD,EAAMgD,KAKxD,SAAjBhD,EAAMK,OAJkBoT,EAAQ,CAAE3T,UAAWA,EAAWG,QAASD,EAAMgD,KAKtD,eAAjBhD,EAAMK,OAJkBuP,EAAQ,CAAE9P,UAAWA,EAAWG,QAASD,EAAMgD,UAI1E,GAiBY4F,SAA2B,aAAjB5I,EAAMK,QAA0C,WAAjBL,EAAMK,OAHnD,SAVY,eAAjBL,EAAMK,OAAgC,SACrB,SAAjBL,EAAMK,QAAsC,eAAjBL,EAAMK,OAAgC,UAChD,aAAjBL,EAAMK,OAA8B,WAChC,WAeC,eAACqM,GAAA,EAAD,CAAgB/G,GAAI8G,KAAa5G,QAAQ,YAAYE,MAAM,WAA3D,UACI,cAAC4G,GAAA,EAASC,KAAV,yBACA,cAACD,GAAA,EAASC,KAAV,CAAe/F,QA/BL,kBAAMqF,EAAS,CAAEpM,UAAWA,EAAWG,QAASD,EAAMgD,MA+BhE,mC,yBCeL4Q,OA/Cf,YAAgE,IAA/B9T,EAA8B,EAA9BA,UAAWE,EAAmB,EAAnBA,MAAU7C,EAAS,kBAC3D,OACI,eAACkP,GAAA,EAAD,CAAMQ,MAAO,CAAEgH,OAAQ,OAAQF,MAAO,OAAQpC,QAAS,OAAQuC,cAAe,MAAOC,WAAY,UAAjG,UACI,eAAC1H,GAAA,EAAKC,KAAN,CAAWO,MAAO,CAAEmH,KAAM,GAA1B,UACI,cAAC3H,GAAA,EAAKE,MAAN,UAAavM,EAAM+F,QACnB,cAACsG,GAAA,EAAKG,KAAN,UACKxM,EAAMmI,iBAIf,eAACkE,GAAA,EAAKC,KAAN,CAAWO,MAAO,CAAEmH,KAAM,EAAGH,OAAQ,OAAQ/G,WAAY,mBAAzD,UACI,cAACT,GAAA,EAAKE,MAAN,uBACA,cAACF,GAAA,EAAKG,KAAN,UACKxM,EAAM0R,cAIf,eAACrF,GAAA,EAAKC,KAAN,CAAWO,MAAO,CAAEmH,KAAM,EAAGlH,WAAY,mBAAzC,UACI,cAACT,GAAA,EAAKE,MAAN,uBACA,cAACF,GAAA,EAAKG,KAAN,UACKxM,EAAM2R,cAIf,eAACtF,GAAA,EAAKC,KAAN,CAAWO,MAAO,CAAEmH,KAAM,EAAGlH,WAAY,mBAAzC,UACI,cAACT,GAAA,EAAKE,MAAN,qBACA,cAACF,GAAA,EAAKG,KAAN,UACKxM,EAAMK,YAIf,eAACgM,GAAA,EAAKC,KAAN,CAAWO,MAAO,CAAEmH,KAAM,EAAGlH,WAAY,mBAAzC,UACI,cAACT,GAAA,EAAKE,MAAN,uBACA,cAACF,GAAA,EAAKG,KAAN,UACKxM,EAAMiU,SAAWjU,EAAMiU,SAAW,YAI3C,cAAC5H,GAAA,EAAKC,KAAN,CAAWO,MAAO,CAAEmH,KAAM,EAAGH,OAAQ,OAAQ/G,WAAY,mBAAzD,SACI,cAAC,GAAD,aACIhN,UAAWA,EAAWE,MAAOA,GAAW7C,U,oFCtCtD+W,GAAyB,CAAC,QAAS,WAAY,WAAY,SAAU,YAErEC,GAAS,CACXxC,SAAU,CAAC,UAAW,MAAO,UAAW,OAAQ,YAChDD,SAAU,CAAC,QAAS,OAAQ,UAAW,OACvCrR,OAAQ,CAAC,SAAU,WAAY,cAAe,OAAQ,eAmC3C+T,OAhCf,YAA0G,IAArFtU,EAAoF,EAApFA,UAAWuU,EAAyE,EAAzEA,UAAW9I,EAA8D,EAA9DA,QAASI,EAAqD,EAArDA,QAASpB,EAA4C,EAA5CA,OAAQC,EAAoC,EAApCA,WAAYC,EAAwB,EAAxBA,WAAetN,EAAS,kBACrG,OAAOkX,GAAaA,EAAUnV,OAAS,EACjB,MAAjB/B,EAAMmX,OACH,cAAC,GAAD,CACI7I,UAAW4I,EACXnB,WAAYgB,GACZ7I,SAAUE,EACVG,YAAayI,GAAO5I,GACpBI,QAASA,EACTpB,OAAQA,EACRC,WAAYA,EACZC,WAAYA,EACZ2I,cAAe,SAAApJ,GAAI,OAAI,cAAC,GAAD,aAAwBlK,UAAWA,EAAWE,MAAOgK,GAAU7M,OACrF,cAAC,GAAD,CACDsO,UAAW4I,EACXhJ,SAAUE,EACVG,YAAayI,GAAO5I,GACpBI,QAASA,EACTpB,OAAQA,EACRC,WAAYA,EACZC,WAAYA,EACZvF,OAAQ,SAAA8E,GAAI,OAAI,cAAC,GAAD,aAAuBlK,UAAWA,EAAWE,MAAOgK,GAAU7M,OAItF,sBAAK+I,UAAU,qBAAf,UACI,+FACA,mBAAGE,KAAK,aAAR,yBACA,2D,gBCtCZ,SAASmO,GAAT,GAAoD,IAA/BC,EAA8B,EAA9BA,QAASxN,EAAqB,EAArBA,KAAMhE,EAAe,EAAfA,GAAI6D,EAAW,EAAXA,QACpC,OACI,qBAAKX,UAAU,YAAYlD,GAAIA,EAAIgE,KAAMA,EAAMH,QAASA,EAAxD,SACK2N,EAAU,SAAW,KAuKnBC,OAlKf,SAA4BtX,GACxB,MAA0BC,oBAAS,GAAnC,mBAAOsX,EAAP,KAAeC,EAAf,KAsBMC,EAAkB,SAAC3J,EAAK4J,GAC1B,IAAMC,EAAa3Q,OAAOC,KAAKjH,EAAM4X,SAC/BA,EAAO,eAAQ5X,EAAM4X,SAChB,KAAR9J,EACC6J,EAAW1V,SAAQ,SAAA4V,GACf7Q,OAAOC,KAAKjH,EAAM4X,QAAQC,IAAY5V,SAAQ,SAAAlB,GAC1C6W,EAAQC,GAAW9W,GAAS2W,QAIpC1Q,OAAOC,KAAKjH,EAAM4X,QAAQ9J,IAAM7L,SAAQ,SAAAlB,GACpC6W,EAAQ9J,GAAK/M,GAAS2W,KAG9B1X,EAAM8X,SAAS,SAAUF,IAGvBG,EAAkB,WAAe,IAAdjK,EAAa,uDAAP,GAAS2J,EAAgB3J,GAAK,IACvDkK,EAAoB,WAAe,IAAdlK,EAAa,uDAAP,GAAS2J,EAAgB3J,GAAK,IAEzDmK,EAAY,WAAe,IAAdnK,EAAa,uDAAP,GACf8J,EAAO,eAAQ5X,EAAM4X,SACvBM,GAAU,EACd,GAAW,KAARpK,EAAY,CACX,IAAM6J,EAAa3Q,OAAOC,KAAKjH,EAAM4X,SACrCD,EAAW1V,SAAQ,SAAA4V,GACf7Q,OAAOC,KAAKjH,EAAM4X,QAAQC,IAAY5V,SAAQ,SAAAlB,IACT,IAA9B6W,EAAQC,GAAW9W,KAAiBmX,GAAU,cAIzDlR,OAAOC,KAAKjH,EAAM4X,QAAQ9J,IAAM7L,SAAQ,SAAAlB,IACT,IAAxB6W,EAAQ9J,GAAK/M,KAAiBmX,GAAU,MAGnD,OAAOA,GAOLC,EAAwB,SAACrK,GAC3BmK,EAAUnK,GAAOiK,EAAgBjK,GAAOkK,EAAkBlK,IAG9D,OACI,eAACwB,GAAA,EAAD,CAAavG,UAAW/I,EAAM+I,UAA9B,UACI,eAACwG,GAAA,EAAD,CAAgBxG,UAAU,MAAML,QAAQ,kBAAkBE,MAAM,WAAWkP,SAhEzD,SAAC3B,GACvBnW,EAAM8X,SAAS,QAAS3B,IA+DpB,UACI,cAAC3G,GAAA,EAASC,KAAV,CAAe2I,SAAS,OAAxB,kBACA,cAAC5I,GAAA,EAASC,KAAV,CAAe2I,SAAS,WAAxB,sBACA,cAAC5I,GAAA,EAASC,KAAV,CAAe2I,SAAS,SAAxB,oBACA,cAAC5I,GAAA,EAASC,KAAV,CAAe2I,SAAS,WAAxB,yBAGJ,eAAC7I,GAAA,EAAD,CAAgBxG,UAAU,MAAML,QAAQ,kBAAkBE,MAAM,QAAQkP,SAnEtD,SAACO,GACvBrY,EAAM8X,SAAS,QAASO,IAkEpB,UACI,cAAC7I,GAAA,EAASC,KAAV,CAAe2I,SAAS,MAAxB,uBACA,cAAC5I,GAAA,EAASC,KAAV,CAAe2I,SAAS,OAAxB,4BAGJ,cAAC7I,GAAA,EAAD,CAAgBY,KAAMoH,EAAQxO,UAAU,qBAAqBL,QAAQ,kBAAkBE,MAAM,SAAS0P,UAAU,QAAQR,SApErG,SAAC1K,GACxB,MAAiCA,EAAOmL,MAAM,KAA9C,mBAAOV,EAAP,KAAkBW,EAAlB,KACMC,EAAS,eAAQzY,EAAM4X,QAAQC,IACrCY,EAAUD,IAAgBC,EAAUD,GACpC,IAAMZ,EAAO,2BAAQ5X,EAAM4X,SAAd,mBAAwBC,EAAYY,IACjDzY,EAAM8X,SAAS,SAAUF,IA+DiIc,SAhF3I,SAACC,EAAMC,EAAOC,GACV,WAAhBA,EAAKC,QAAqBtB,EAAQmB,IA+EjC,SACI,sBAAK5P,UAAU,UAAf,UACI,sBAAKA,UAAU,sBAAf,UACI,cAACyG,GAAA,EAASuJ,OAAV,uBACA,eAACvJ,GAAA,EAASC,KAAV,CAAe2I,SAAS,eAAxB,UACI,cAAChB,GAAD,CAAWvN,KAAK,MAAMhE,GAAG,eAAewR,QAASrX,EAAM4X,QAAQrD,SAASyE,MACxE,uBAAOpP,QAAQ,eAAf,oBAEJ,eAAC4F,GAAA,EAASC,KAAV,CAAe2I,SAAS,mBAAxB,UACI,cAAChB,GAAD,CAAWvN,KAAK,UAAUhE,GAAG,mBAAmBwR,QAASrX,EAAM4X,QAAQrD,SAAS0E,UAChF,uBAAOrP,QAAQ,mBAAf,wBAEJ,eAAC4F,GAAA,EAASC,KAAV,CAAe2I,SAAS,gBAAxB,UACI,cAAChB,GAAD,CAAWvN,KAAK,OAAOhE,GAAG,gBAAgBwR,QAASrX,EAAM4X,QAAQrD,SAAS2E,OAC1E,uBAAOtP,QAAQ,gBAAf,qBAEJ,eAAC4F,GAAA,EAASC,KAAV,CAAe2I,SAAS,iBAAxB,UACI,cAAChB,GAAD,CAAWvN,KAAK,QAAQhE,GAAG,iBAAiBwR,QAASrX,EAAM4X,QAAQrD,SAAS4E,QAC5E,uBAAOvP,QAAQ,iBAAf,sBAEJ,cAAC4F,GAAA,EAAS4J,SAAV,CAAmB1P,QAAS,WAAQyO,EAAsB,aAA1D,SAA0EF,IAAc,MAAQ,aAGpG,sBAAKlP,UAAU,sBAAf,UACI,cAACyG,GAAA,EAASuJ,OAAV,uBACA,eAACvJ,GAAA,EAASC,KAAV,CAAe2I,SAAS,oBAAxB,UACI,cAAChB,GAAD,CAAWvN,KAAK,WAAWhE,GAAG,oBAAoBwR,QAASrX,EAAM4X,QAAQpD,SAAS6E,WAClF,uBAAOzP,QAAQ,oBAAf,yBAEJ,eAAC4F,GAAA,EAASC,KAAV,CAAe2I,SAAS,gBAAxB,UACI,cAAChB,GAAD,CAAWvN,KAAK,OAAOhE,GAAG,gBAAgBwR,QAASrX,EAAM4X,QAAQpD,SAAS8E,OAC1E,uBAAO1P,QAAQ,gBAAf,qBAEJ,eAAC4F,GAAA,EAASC,KAAV,CAAe2I,SAAS,mBAAxB,UACI,cAAChB,GAAD,CAAWvN,KAAK,UAAUhE,GAAG,mBAAmBwR,QAASrX,EAAM4X,QAAQpD,SAAS+E,UAChF,uBAAO3P,QAAQ,mBAAf,wBAEJ,eAAC4F,GAAA,EAASC,KAAV,CAAe2I,SAAS,eAAxB,UACI,cAAChB,GAAD,CAAWvN,KAAK,MAAMhE,GAAG,eAAewR,QAASrX,EAAM4X,QAAQpD,SAASgF,MACxE,uBAAO5P,QAAQ,eAAf,oBAEJ,eAAC4F,GAAA,EAASC,KAAV,CAAe2I,SAAS,mBAAxB,UACI,cAAChB,GAAD,CAAWvN,KAAK,UAAUhE,GAAG,mBAAmBwR,QAASrX,EAAM4X,QAAQpD,SAASiF,UAChF,uBAAO7P,QAAQ,mBAAf,wBAEJ,cAAC4F,GAAA,EAAS4J,SAAV,CAAmB1P,QAAS,WAAQyO,EAAsB,aAA1D,SAA0EF,IAAc,MAAQ,aAGpG,sBAAKlP,UAAU,sBAAf,UACI,cAACyG,GAAA,EAASuJ,OAAV,qBACA,eAACvJ,GAAA,EAASC,KAAV,CAAe2I,SAAS,oBAAxB,UACI,cAAChB,GAAD,CAAWvN,KAAK,aAAahE,GAAG,sBAAsBwR,QAASrX,EAAM4X,QAAQ1U,OAAOwW,aACpF,uBAAO9P,QAAQ,sBAAf,2BAEJ,eAAC4F,GAAA,EAASC,KAAV,CAAe2I,SAAS,cAAxB,UACI,cAAChB,GAAD,CAAWvN,KAAK,OAAOhE,GAAG,gBAAgBwR,QAASrX,EAAM4X,QAAQ1U,OAAOyV,OACxE,uBAAO/O,QAAQ,gBAAf,qBAEJ,eAAC4F,GAAA,EAASC,KAAV,CAAe2I,SAAS,oBAAxB,UACI,cAAChB,GAAD,CAAWvN,KAAK,aAAahE,GAAG,sBAAsBwR,QAASrX,EAAM4X,QAAQ1U,OAAOyW,aACpF,uBAAO/P,QAAQ,sBAAf,4BAEJ,eAAC4F,GAAA,EAASC,KAAV,CAAe2I,SAAS,kBAAxB,UACI,cAAChB,GAAD,CAAWvN,KAAK,WAAWhE,GAAG,oBAAoBwR,QAASrX,EAAM4X,QAAQ1U,OAAO0W,WAChF,uBAAOhQ,QAAQ,oBAAf,yBAEJ,eAAC4F,GAAA,EAASC,KAAV,CAAe2I,SAAS,gBAAxB,UACI,cAAChB,GAAD,CAAWvN,KAAK,SAAShE,GAAG,kBAAkBwR,QAASrX,EAAM4X,QAAQ1U,OAAO2W,SAC5E,uBAAOjQ,QAAQ,kBAAf,uBAEJ,cAAC4F,GAAA,EAAS4J,SAAV,CAAmB1P,QAAS,WAAQyO,EAAsB,WAA1D,SAAwEF,IAAc,MAAQ,aAElG,cAACzI,GAAA,EAAS4J,SAAV,CAAmB1P,QA9FX,WACpBuO,IAAcF,IAAoBC,KA6FtB,SAA8CC,IAAc,YAAc,uB,oDCnE/E6B,GAhGE,SAACC,EAAkB/P,GAAnB,OACb,YAAoD,IAAjDgF,EAAgD,EAAhDA,OAAQnF,EAAwC,EAAxCA,KAAwC,IAAlCmQ,iBAAkC,SAAZha,EAAY,kBAC/C,EAA8BC,mBAAS+Z,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA0Bja,mBAASD,EAAMe,OAAzC,mBAAOA,EAAP,KAAcoZ,EAAd,KACMC,EAAWpJ,mBAEjBzQ,qBAAU,WACN6Z,GAAYA,EAASxI,SAAWwI,EAASxI,QAAQyI,UAClD,CAACJ,EAASD,IAEb,IAKMM,EAAiB,SAAChJ,GACP,UAAVA,EAAExD,KACDyM,EAAajJ,IAIfkJ,EAAe,SAAClJ,GAClB6I,EAAS7I,EAAEY,OAAOnR,QAOhBwZ,EAAe,SAACjJ,GAClBA,EAAEC,iBACFvC,EAAO,gBAAGoL,EAASxI,QAAQ/H,KAAO9I,IAClCmZ,GAAW,IAgDf,OAAOD,EACH,cAACnO,GAAA,EAAD,CAAKC,GAAI/L,EAAM+L,GAAIC,GAAIhM,EAAMgM,GAAIC,GAAIjM,EAAMiM,GAAIC,GAAIlM,EAAMkM,GAAzD,SACI,sBAAMuO,OAzDK,WACdza,EAAMya,QAAUza,EAAMya,UAAaP,GAAW,IAwDjB/O,SAAUoP,EAApC,SA9CQ,SAATvQ,EAEK,uBACI+H,IAAKqI,EACLvQ,KAAMA,EACNG,KAAMA,EACN0Q,aAAc3Z,EACdkR,SAAUuI,IAGH,aAATxQ,EAEF,0BACI+H,IAAKqI,EACLvQ,KAAMA,EACN6Q,aAAc3Z,EACd4Z,KAAM,EACNC,KAAM,GACN3I,SAAUuI,EACVK,WAAYP,IAGL,WAATtQ,EAEF,wBACI+H,IAAKqI,EACLvQ,KAAMA,EACN6Q,aAAc3Z,EACdkR,SAAUuI,EACVK,WAAYP,EALhB,SAQQta,EAAM8a,SAAW9a,EAAM8a,QAAQvY,KAAI,SAACwY,EAAK7N,GAAN,OAC/B,wBAAkBnM,MAAOga,EAAzB,SACKA,GADQ7N,QAQ1B,SAUP,qBAAKnE,UAAU,oBAAf,SACI,cAACgR,EAAD,2BAAsB/Z,GAAtB,IAA6B0J,QA9EjB,WACbsQ,GACHE,GAAW,IA4EP,SACKla,EAAMgB,gBClFdga,GAA+B,SAACC,GACzC,IAAMvV,EAZY,SAACwV,EAAQC,EAAYC,GAGvC,IAFA,IAAIhK,EAAI,EAAG1L,EAAQ,EAEb0L,EAAIgK,GAAK1V,GAAS,GACpBA,EAAQwV,EAAOG,QAAQF,EAAYzV,EAAQ,GAC3C0L,IAGJ,OAAO1L,EAIO4V,CAAcL,EAAY,IAAK,GAE7C,OADYA,EAAWxV,MAAM,EAAGC,ICbrB,OAA0B,gDCQnC6V,GAAkB,CACpB/E,MAAO,OACPE,OAAQ,OACR8E,OAAQ,OAGNC,GAAeC,IAAMC,YAAW,WAAc5J,GAAd,IAAGrI,EAAH,EAAGA,QAAH,OAClC,qBACIR,IAAI,GACJC,IAAKyS,GACLpF,MAAM,KACNE,OAAO,KAEP3E,IAAKA,EACLrI,QAASA,OA2DFmS,OAvDf,SAAqB7b,GACjB,MAA4BC,mBAAS,MAArC,mBAAO6b,EAAP,KAAeC,EAAf,KAEMC,EAAWlC,GAAShO,KAAK,YAOzBmQ,EAAe,SAAC5Y,GAClB0Y,EAAU1Y,IAGR6Y,EAAoB,SAAC/Y,GACvBnD,EAAMgP,OAAO8M,EAAQ3Y,GACrB4Y,EAAU,OAGd,OACI,cAAC,GAAD,CAAMzN,UAAWtO,EAAMmc,SAAUpU,OAAQ,SAAC8E,GAAD,OACrC,eAACrB,GAAA,EAAD,CAAKkE,MAAO6L,GAAZ,UACI,cAACzP,GAAA,EAAD,CAAKI,GAAI,GAAID,GAAI,GAAID,GAAI,GAAID,GAAI,EAAjC,SAEI,cACAc,EAAKuP,QACL,OACApB,GAA6B,IAAIqB,KAAKxP,EAAKyP,YAAYC,cAG3D,cAACzQ,GAAA,EAAD,CAAKI,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAA9B,SACI,eAACyD,GAAA,EAAD,CAAUsI,SAAU,SAAA0E,GAAG,OA1BTlL,EA0BkCkL,EA1B/B3W,EA0BoCgH,EAAKhH,GAzB7D,WAANyL,EAAuBtR,EAAM+O,SAAS,CAAE1L,UAAWwC,IAC7C,SAANyL,EAAqB2K,EAAapW,QAArC,EAFyB,IAACyL,EAAGzL,GA0BjB,UACI,cAAC2J,GAAA,EAASpG,OAAV,CAAiBZ,GAAIiT,KAErB,eAACjM,GAAA,EAASiN,KAAV,WACI,cAACjN,GAAA,EAASC,KAAV,CAAe2I,SAAS,OAAxB,kBACA,cAAC5I,GAAA,EAASC,KAAV,CAAe2I,SAAS,SAAxB,4BAIZ,cAAC4D,EAAD,CACI9P,GAAI,GAAID,GAAI,GAAID,GAAI,GAAID,GAAI,GAC5BlC,KAAK,OACL9I,MAAO8L,EAAK6P,KACZ1C,UAAW8B,IAAWjP,EAAKhH,GAC3BmJ,OAAQkN,EACRzB,OAAQ,kBAAMsB,EAAU,OAN5B,SAQKlP,EAAK6P,SA3BoB7P,EAAKhH,Q,UCdpC8W,OA9Bf,YAUI,IATAxM,EASD,EATCA,KACAyM,EAQD,EARCA,QACAC,EAOD,EAPCA,gBACAC,EAMD,EANCA,iBACA3R,EAKD,EALCA,SACAsH,EAID,EAJCA,QACA1K,EAGD,EAHCA,OACAgV,EAED,EAFCA,WAED,IADCC,cACD,MADU,KACV,EACC,OACI,eAACC,GAAA,EAAD,CAAO9M,KAAMA,EAAM+M,OAAQzK,EAA3B,UACI,cAACwK,GAAA,EAAMlE,OAAP,CAAcoE,aAAW,EAAzB,SACI,cAACF,GAAA,EAAM7N,MAAP,UAAcwN,GAAoB,OAEtC,cAACK,GAAA,EAAM9N,KAAP,UAAapH,EAAO,CAAEpJ,KAAMoe,MAC5B,eAACE,GAAA,EAAMG,OAAP,WACI,cAAC7U,EAAA,EAAD,CAAQG,QAAQ,YAAYgB,QAAS+I,EAArC,SACKoK,GAAoC,UAEzC,cAACtU,EAAA,EAAD,CAAQG,QAAQ,UAAUsB,KAAK,SAASoC,KAAM4Q,EAAQtT,QAASyB,EAA/D,SACK2R,GAAsC,kBCmB5CO,OA9Bf,WACI,MAA8Bpd,oBAAS,GAAvC,mBAAOqd,EAAP,KAAgBC,EAAhB,KACA,EAAwBtd,mBAAS,IAAjC,mBAAOtB,EAAP,KAAa6e,EAAb,KAOMC,EAAO,WACTF,GAAW,IAef,MAAO,CACHpN,KAtBS,SAACxR,GACV6e,EAAQ7e,GACR4e,GAAW,IAoBLG,gBAbc,SAAC1d,GASrB,OAAO,cAAC,GAAD,2BAAeA,GAAf,IAAsBmL,SARR,SAACyN,GAClB,IAAM4D,EAAM5D,EACZ4D,EAAIjL,iBACJ,IAAMlL,EAASmW,EAAItK,OAAO9F,MA5BtC,SAA4BuR,GACxB,GAAuB,IAApBA,EAAS5b,OAAc,MAAO,GACjC,IAAMsE,EAAS,GAMf,OAJAsX,EAAS1b,SAAQ,SAAA2b,GACbvX,EAAOuX,EAAM/T,MAAQ+T,EAAM7c,SAGxBsF,EAoBmCwX,CAAmBrB,EAAItK,OAAO9F,KAAK0R,YAC3C,oBAAnB9d,EAAMmL,UAA2BnL,EAAMmL,SAAS,CAAExM,OAAM0H,WAC/DoX,KAGiDtN,KAAMmN,EAASP,WAAYpe,EAAM8T,QAASgL,Q,gCCfxFM,OAdf,YAA0D,IAA7BnV,EAA4B,EAA5BA,MAAOoV,EAAqB,EAArBA,QAAYhe,EAAS,kBACrD,OACI,cAAC,GAAD,yBAAQ4I,MAAO,UAAYA,GAAW5I,GAAtC,IAA6CuJ,GAAG,QAAQ0U,OAAO,MAAMlW,OAAQ,kBACzE,eAAC0B,EAAA,EAAD,WACKzJ,EAAM+H,QAAkC,oBAAjB/H,EAAM+H,QAAyB/H,EAAM+H,SAC7D,cAAC,EAAD,CAAYW,QAAQ,eAAeV,GAAIgW,EAAUA,EAAU,OAAS,QAApE,mC,OCgCDE,OAxCf,SAAqBle,GACjB,MAAkCC,oBAAS,GAA3C,mBAAO2T,EAAP,KAAkBuK,EAAlB,KAeA,OACI,qCACI,oBAAIpV,UAAU,mBAAd,SAhBsB,WAC1B,IAAMgE,EAAQ,GAUd,OATA/M,EAAMoV,aAAepV,EAAMoV,YAAYnT,SAAQ,SAACmc,EAAYlR,GACxDH,EAAM5K,KACF,+BACI,+BAAOic,EAAW3b,WAAiB,IACnC,mBAAGwG,KAAMmV,EAAWzf,KAAM0f,SAAUD,EAAW3b,SAA/C,sBAAsE,IACtE,wBAAQsG,UAAU,OAAOW,QAAS,kBAAM1J,EAAM+O,SAASqP,EAAWvY,KAAlE,sBAHJ,qBAAuBqH,QAOxBH,EAOKuR,KAGP1K,EACG,cAAC,GAAD,CACIpB,YAAaxS,EAAMue,SACnB9K,WAAYzT,EAAMyT,WAClBhB,QAAS,WAAQ0L,GAAa,MAEhC,wBACEpV,UAAU,OACVW,QAAS,WAAQyU,GAAa,IAFhC,gC,OCkDHK,OA7Ef,SAA8Bxe,GAC1B,OACI,cAAC,KAAD,CACIoL,cAAe,CACXxC,MAAO5I,EAAMye,aACbzT,YAAahL,EAAM0e,mBACnBnK,SAAUvU,EAAM2e,gBAChBnK,SAAUxU,EAAM4e,iBAEpBzT,SAAU,SAAC9E,GACPrG,EAAMmL,SAAS9E,IAEnBgF,iBAAkBJ,GAVtB,SAYK,kBACG,eAAC,KAAD,CAAMpF,GAAG,kBAAT,UACI,cAAC2F,GAAA,EAAD,CAAKzC,UAAU,+BAAf,SACI,eAAC+C,GAAA,EAAD,WACI,cAAC,KAAD,CAAOjC,KAAK,QAAQG,KAAK,OAAOjB,UAAU,eAC1C,sBAAMA,UAAU,aAAhB,SACI,cAAC,KAAD,CAAcc,KAAK,iBAK/B,eAAC2B,GAAA,EAAD,WACI,cAACM,GAAA,EAAD,CAAKI,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAA9B,SACI,uBAAOnC,QAAQ,cAAf,2BAEJ,eAACkC,GAAA,EAAD,CAAKI,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAA9B,UACI,cAAC,KAAD,CAAOlC,KAAK,cAAcrB,GAAG,WAAWO,UAAU,eAClD,sBAAMA,UAAU,aAAhB,SACI,cAAC,KAAD,CAAcc,KAAK,cAAcd,UAAU,uBAKvD,eAACyC,GAAA,EAAD,WACI,cAACM,GAAA,EAAD,CAAKI,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAA9B,SACI,uBAAOnC,QAAQ,WAAf,wBAEJ,eAACkC,GAAA,EAAD,CAAKI,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAA9B,UACI,eAAC,KAAD,CAAOlC,KAAK,WAAWrB,GAAG,SAASO,UAAU,aAA7C,UACI,wBAAQhI,MAAM,MAAd,iBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,QAAd,sBAEJ,sBAAMgI,UAAU,aAAhB,SACI,cAAC,KAAD,CAAcc,KAAK,WAAWd,UAAU,uBAKpD,eAACyC,GAAA,EAAD,WACI,cAACM,GAAA,EAAD,CAAKI,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAA9B,SACI,uBAAOnC,QAAQ,WAAf,wBAEJ,eAACkC,GAAA,EAAD,CAAKI,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAA9B,UACI,eAAC,KAAD,CAAOlC,KAAK,WAAWrB,GAAG,SAASO,UAAU,aAA7C,UACI,wBAAQhI,MAAM,UAAd,qBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,WAAd,yBAEJ,sBAAMgI,UAAU,aAAhB,SACI,cAAC,KAAD,CAAcc,KAAK,WAAWd,UAAU,8B,sBCwNzD8V,OAlRf,YAAoD,IAA5Bhc,EAA2B,EAA3BA,MAAOmM,EAAoB,EAApBA,OAAWhP,EAAS,kBACzChC,EAAOiD,IACb,EAAsDE,EAAY,iBAAD,OAC5CnB,EAAM8U,MAAMC,OAAOpS,UADyB,mBACL3C,EAAM8U,MAAMC,OAAOjS,QADd,gBAE7D9E,EAAKc,KAAOd,EAAKc,KAAKJ,MAAQ,KAC9BmE,EAAM2E,mBAHV,mBAAO4N,EAAP,KAAoC0J,GAApC,WAKA,EAAgC3d,EAAY,iBAAD,OACtBnB,EAAM8U,MAAMC,OAAOpS,UADG,mBACiB3C,EAAM8U,MAAMC,OAAOjS,QADpC,aAEvC9E,EAAKc,KAAOd,EAAKc,KAAKJ,MAAQ,MAFlC,mBAAOyd,EAAP,KAAiB4C,EAAjB,KAIA,EAAgC9e,oBAAS,GAAzC,mBAAO+e,EAAP,KAAiBC,EAAjB,KACA,EAAsF5B,KAAxE6B,EAAd,EAAQ/O,KAAmDgP,EAA3D,EAA0CzB,gBAEpC0B,EAAatF,GAAShO,KAAK,UAE3BhF,EAAe,uCAAG,WAAOT,GAAP,eAAA5F,EAAA,sDAEpB,IAAQqN,KAAOzH,EACRA,EAAOyH,KAASjL,EAAMiL,WAAazH,EAAOyH,GAH7B,gBAKdkB,EAAOhP,EAAM8U,MAAMC,OAAOpS,UAAWE,EAAMgD,GAAIQ,GALjC,OAOpB4Y,GAAY,GAPQ,2CAAH,sDAUfI,EAAgB,uCAAG,WAAO/N,GAAP,iBAAA7Q,EAAA,6DACrB6Q,EAAEC,iBACI+N,EAAchO,EAAEY,OAAO,GAAGnR,MAFX,SAGIgD,EAAUM,WAAWrE,EAAM8U,MAAMC,OAAOpS,UAAWE,EAAMgD,GAAIyZ,EAAathB,EAAKc,KAAKJ,OAHxF,OAGf6gB,EAHe,OAIrBR,GAAY,SAAAld,GACR,IAAMsa,EAAWta,EAAKlD,KAAK8G,QAE3B,OADA0W,EAASha,KAAKod,GACP,2BAAK1d,GAAZ,IAAkBlD,KAAMwd,OAETqD,SAASC,cAAc,oBAC/B1e,MAAQ,GAVE,2CAAH,sDAahB2e,EAAmB,uCAAG,6BAAAjf,EAAA,6DAAS9B,EAAT,EAASA,KACjCO,QAAQC,IAAI,mBAAoBR,GADR,SAElBoF,EAAUQ,cAAcvE,EAAM8U,MAAMC,OAAOpS,UAAWE,EAAMgD,GAAIlH,EAAK0E,UAAWrF,EAAKc,KAAKJ,OAFxE,OAGxBqgB,GAAY,SAAAld,GACR,IAAMsa,EAAWta,EAAKlD,KAAK8G,QACrBka,EAAaxD,EAASxW,WAAU,SAAAxC,GAAO,OAAIA,EAAQ0C,KAAOlH,EAAK0E,aAErE,OADmB,IAAhBsc,GAAmBxD,EAASrW,OAAO6Z,EAAY,GAC3C,2BAAK9d,GAAZ,IAAkBlD,KAAMwd,OAPJ,2CAAH,sDAWnBD,EAAiB,uCAAG,WAAO7Y,EAAWic,GAAlB,eAAA7e,EAAA,sEACAsD,EAAUO,cAC5BtE,EAAM8U,MAAMC,OAAOpS,UACnBE,EAAMgD,GACNxC,EACAic,EAAY5C,KACZ1e,EAAKc,KAAKJ,OANQ,OAChByE,EADgB,OAQtB4b,GAAY,SAAAld,GACR,IAAMsa,EAAWta,EAAKlD,KAAK8G,QACrBka,EAAaxD,EAASxW,WAAU,SAAAxC,GAAO,OAAIA,EAAQ0C,KAAOxC,KAEhE,OADA8Y,EAASwD,GAAcxc,EAChB,2BAAKtB,GAAZ,IAAkBlD,KAAMwd,OAZN,2CAAH,wDAgBjByD,EAAsC,eAAjB/c,EAAMK,OAA2B,eACtC,SAAjBL,EAAMK,OAAqB,gBACV,eAAjBL,EAAMK,OAA2B,cAClCL,EAAMK,OAQV,OACI,qCACI,cAAC,GAAD,CAAmB0F,MAAO/F,EAAM+F,MAAOb,OAAQ,WAC3C,OACI,qCACI,cAACQ,EAAA,EAAD,CACIQ,UAAU,aACVW,QAAS,WAAQ1J,EAAM6f,QAAQC,UAFnC,gCAICd,GACG,qCACI,cAACzW,EAAA,EAAD,CACIG,QAAQ,eACRK,UAAU,OACVqD,KAAK,kBACLpC,KAAK,SAJT,kBASA,cAACzB,EAAA,EAAD,CACIG,QAAQ,eACRK,UAAU,OACVW,QAAS,kBAAMuV,GAAY,IAH/B,wBASND,GACE,cAACzW,EAAA,EAAD,CACIG,QAAQ,eACRK,UAAU,OACVW,QAAS,WAAQuV,GAAY,IAHjC,wBAWhB,eAACrT,GAAA,EAAD,CAAW7C,UAAU,eAAe8C,OAAK,EAAzC,UACI,cAACsT,EAAD,CACIvC,QAAQ,iBACRC,gBAAgB,SAChBC,iBAAiB,SACjB3R,SAAUuU,EACV3X,OAAQ,kBAAc,uDAAd,EAAGpJ,KAAyE0E,UAAY,OAEnG2b,EACG,cAAC,GAAD,CACIP,aAAc5b,EAAM+F,MACpB8V,mBAAoB7b,EAAMmI,YAC1B2T,gBAAiB9b,EAAM0R,SACvBqK,gBAAiB/b,EAAM2R,SACvBrJ,SAAUrE,IAGd,qCACI,cAAC0E,GAAA,EAAD,CAAKzC,UAAU,+BAAf,SACI,6BAAKlG,EAAM+F,UAGf,eAAC4C,GAAA,EAAD,WACI,cAACM,GAAA,EAAD,CAAKI,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAA9B,yBACA,cAACD,GAAA,EAAD,CACItD,GAAG,IAAI0D,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAChClC,KAAK,cAFT,SAIKhH,EAAMmI,iBAIf,eAACQ,GAAA,EAAD,WACI,cAACM,GAAA,EAAD,CAAKI,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAA9B,sBACA,cAACqT,EAAD,CACI5W,GAAG,IAAI0D,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAChChL,MAAO8B,EAAM0R,SACb1K,KAAK,WACLmF,OAAQlI,EACRgU,QAAS,CAAC,MAAO,UAAW,OAAQ,SALxC,SAOKjY,EAAM0R,cAIf,eAAC/I,GAAA,EAAD,WACI,cAACM,GAAA,EAAD,CAAKI,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAA9B,sBACA,cAACqT,EAAD,CACI5W,GAAG,IAAI0D,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAChChL,MAAO8B,EAAM2R,SACb3K,KAAK,WACLmF,OAAQlI,EACRgU,QAAS,CAAC,WAAY,OAAQ,UAAW,MAAO,WALpD,SAOKjY,EAAM2R,iBAMvB,eAAChJ,GAAA,EAAD,WACI,cAACM,GAAA,EAAD,CAAKI,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAA9B,oBACA,eAACD,GAAA,EAAD,CAAKtD,GAAG,IAAI0D,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAArC,UACKlJ,EAAMK,OAEH,cAACqF,EAAA,EAAD,CACIQ,UAAU,OAAOgX,KAAK,KACtBC,OAAyB,aAAjBnd,EAAMK,QAA0C,WAAjBL,EAAMK,OAC7CwG,QAnHD,WACvB,MAAoB,eAAjB7G,EAAMK,OAAgClD,EAAMqW,SAAS,CAAE1T,UAAW3C,EAAM8U,MAAMC,OAAOpS,UAAWG,QAASD,EAAMgD,KAC9F,SAAjBhD,EAAMK,OAA0BlD,EAAMsW,QAAQ,CAAE3T,UAAW3C,EAAM8U,MAAMC,OAAOpS,UAAWG,QAASD,EAAMgD,KACpG7F,EAAMyS,QAAQ,CAAE9P,UAAW3C,EAAM8U,MAAMC,OAAOpS,UAAWG,QAASD,EAAMgD,MA6G3D,SAKK+Z,UAMjB,eAACpU,GAAA,EAAD,WACI,cAACM,GAAA,EAAD,CAAKI,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAA9B,wBACA,cAACD,GAAA,EAAD,CAAKtD,GAAG,IAAI0D,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAArC,SAAyCiP,GAA6B,IAAIqB,KAAKxZ,EAAMyZ,YAAYC,iBAGrG,eAAC/Q,GAAA,EAAD,WACI,cAACM,GAAA,EAAD,CAAKI,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAA9B,wBACA,cAACD,GAAA,EAAD,CAAKtD,GAAG,IAAI0D,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAArC,SAAyClJ,EAAMuZ,aAGnD,eAAC5Q,GAAA,EAAD,WACI,cAACM,GAAA,EAAD,CAAKI,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAA9B,yBACA,cAACD,GAAA,EAAD,CAAKtD,GAAG,IAAI0D,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAArC,SAAyClJ,EAAMiU,SAAWjU,EAAMiU,SAAW,kBAG/E,eAACtL,GAAA,EAAD,WACI,cAACM,GAAA,EAAD,CAAKI,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAA9B,yBACA,cAACD,GAAA,EAAD,CAAKtD,GAAG,IAAI0D,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAArC,SAA0ClJ,EAAMod,UAAajF,GAA6B,IAAIqB,KAAKxZ,EAAMod,WAAW1D,YAAc,WAGtI,eAAC/Q,GAAA,EAAD,WACI,cAACM,GAAA,EAAD,CAAKI,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAA9B,gCACA,cAACD,GAAA,EAAD,CAAKtD,GAAG,IAAI0D,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAArC,SAA0ClJ,EAAMqd,UAAalF,GAA6B,IAAIqB,KAAKxZ,EAAMqd,WAAW3D,YAAc,WAGtI,eAAC/Q,GAAA,EAAD,WACI,cAACM,GAAA,EAAD,CAAKI,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAA9B,yBACA,cAACD,GAAA,EAAD,CAAKI,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAAGlG,GAAG,sBAApC,SACI,cAAC,GAAD,CACIuP,YAAaA,EAAYzW,KACzB4f,SAAU,SAACxL,EAAMI,GAAP,OACNnT,EAAMkV,0BACFlV,EAAM8U,MAAMC,OAAOpS,UACnBE,EAAMgD,GACNkN,EACAI,IAGRM,WAAY,SAACjM,GACTtI,QAAQC,IAAIqI,GACZxH,EAAMsV,gBACFtV,EAAM8U,MAAMC,OAAOpS,UACnBE,EAAMgD,GACN2B,GAEJsX,YAMhB,cAAC,EAAD,CAAY9W,GAAE,UAAKnF,EAAMgD,GAAX,QAAqBkD,UAAU,OAA7C,4BAEA,eAACyC,GAAA,EAAD,WACI,cAACM,GAAA,EAAD,CAAKI,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAA9B,SACI,cAACxD,EAAA,EAAD,CAAQG,QAAQ,kBAAkBsB,KAAK,SAASoC,KAAK,cAArD,2BAEJ,cAACN,GAAA,EAAD,CAAKI,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAA9B,SACI,cAACoU,GAAA,EAAD,CAAMta,GAAG,cAAcsF,SAAUkU,EAAjC,SACI,cAACc,GAAA,EAAKC,MAAN,CAAYC,UAAU,UAAtB,SACI,cAACF,GAAA,EAAKG,QAAN,CAAc9X,GAAG,WAAW+X,YAAY,2BAMxD,eAAC/U,GAAA,EAAD,WACI,cAACM,GAAA,EAAD,CAAKI,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAA9B,sBACA,cAAC,GAAD,CACIoQ,SAAUA,EAASxd,KACnBqQ,OAAQkN,EACRnN,SAAUmQ,cCxR5BsB,GAAW,qBAEV,SAASC,GAAqB1L,GACjCnW,aAAaC,QAAQ2hB,GAAUE,KAAKC,UAAU5L,IC0BnC6L,OA1Bf,SAAuBC,GACnB,MAAoC5gB,mBAAS4gB,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAsBA,OAnBAxgB,qBAAU,WACN,IAAMygB,EDDHN,KAAKO,MAAMriB,aAAaK,QAAQuhB,KCE/BQ,EAGAD,EAAcC,GAFdP,GAAqBI,KAK1B,IAGHtgB,qBAAU,WACNkgB,GAAqBK,KACtB,CAACA,IAMG,CAACA,EAJR,SAAsBI,EAAOngB,GACzBggB,GAAc,SAAAlf,GAAI,kCAAUA,GAAV,mBAAiBqf,EAAQngB,UCGpCogB,OAvBf,YAA2F,IAArEnE,EAAoE,EAApEA,OAAQoE,EAA4D,EAA5DA,UAAWC,EAAiD,EAAjDA,YAAaC,EAAoC,EAApCA,QAASlW,EAA2B,EAA3BA,cAAeD,EAAY,EAAZA,SACpEoW,EAAgBF,EAAY9e,KAAI,SAACsK,EAAMK,GAAP,OAClC,wBAAQrH,GAAE,gBAAWqH,GAA4BnM,MAAO8L,EAAKhH,GAA7D,SAAkEgH,EAAKyU,IAAvE,gBAA0CpU,OAG9C,OACI,cAAC,KAAD,CACI9B,cAAeA,EACfD,SAAUA,EAFd,SAIK,WACG,OACI,cAAC,KAAD,CAAMtF,GAAImX,EAAV,SACI,cAAC,KAAD,CAAOnT,KAAMuX,EAAW5Y,GAAG,SAA3B,SACK+Y,UCCdC,OAff,SAAsBxhB,GAMlB,OACI,eAACmgB,GAAA,EAAD,CAAMsB,QAAM,EAACC,YAAU,EAACvW,SANP,SAACmG,GAClBA,EAAEC,iBACFvR,EAAMmL,SAASmG,EAAEY,OAAOyP,WAAW5gB,QAIagI,UAAW/I,EAAM+I,UAAjE,UACI,cAACgB,GAAA,EAAD,CAAaC,KAAK,OAAOH,KAAK,SAAS0W,YAAY,SAASxX,UAAU,YACtE,cAACR,EAAA,EAAD,CAAQyB,KAAK,SAAStB,QAAQ,eAA9B,wB,uCCWGkZ,OApBf,YAA2D,IAAnCC,EAAkC,EAAlCA,WAAY/J,EAAsB,EAAtBA,SAAa9X,EAAS,kBACtD,OACI,cAACsP,GAAA,EAAD,CAAawS,QAAM,EAAC/Y,UAAU,OAA9B,SACC/I,EAAM+hB,QAAU/hB,EAAM+hB,OAAOxf,KAAI,SAACyf,EAAO9U,GAAR,OAChC,cAAC,KAAD,CAEElD,KAAK,QACLtB,QAAQ,YACRmB,KAAK,QACL9I,MAAOihB,EAAMjhB,MACbsW,QAASwK,IAAeG,EAAMjhB,MAC9BkR,SAAU,SAACX,GAAD,OAAOwG,EAASxG,EAAE2Q,cAAclhB,QAP5C,SASGihB,EAAMnY,MARFqD,S,kBCRIgV,G,WACjB,WAAYC,GAAc,qBACtBC,KAAK9N,cAAgB6N,E,wCAGzB,SAAIE,GACA,GAAiC,IAA9BD,KAAK9N,cAAcvS,OACtB,OAAOqgB,KAAK9N,cAAcgO,MAAK,SAAAC,GAAM,OAAIA,EAAO1c,KAAOwc,S,KC6DlDG,GAAmB,SAACC,EAAWC,EAAcC,EAASC,EAAYC,GAC3E,IAAIva,EAAO,GACX,OAAOma,GACH,IAAK,SACDna,GAAQoa,EAAankB,SACrB+J,GAAQ,yBACRA,GAAQqa,EACR,MACJ,IAAK,SACDra,GAAQoa,EAAankB,SACrB,IAFJ,EAEUukB,EA1BC,SAACC,EAASC,GAKzB,IAJA,IAAMC,EAAWvC,KAAKO,MAAM8B,GACtBG,EAAWxC,KAAKO,MAAM+B,GAEtBF,EAAU,GAChB,MAFa9b,OAAOC,KAAKgc,GAEzB,eAAqB,CAAjB,IAAInV,EAAG,KACJmV,EAASnV,KAASoV,EAASpV,KAC1BgV,EAAQhV,GAAO,CACXiV,QAASE,EAASnV,GAClBkV,QAASE,EAASpV,KAI9B,OAAOgV,EAaiBK,CAAWP,EAAYC,GACjCO,EAAcpc,OAAOC,KAAK6b,GAAS1V,QAAO,SAAAU,GAAG,MAAY,eAARA,GAAgC,cAARA,KAC3EsD,EAAI,EAJZ,eAKmBgS,GALnB,IAKI,IAAI,EAAJ,qBAA4B,CAAC,IAArBtV,EAAoB,QACDxF,GAAZ,aAARwF,EAA4B,wBAClB,gBAAkBA,EAAM,iBACrCxF,GAAQ,QAAUwa,EAAQhV,GAAKkV,QAAU,IACzC1a,KAAW8I,EAAIgS,EAAYrhB,OAAU,QAAU,IATvD,8BAWIuG,GAAQ,MAAQqa,EAChB,MACJ,IAAK,SACDra,GAAQoa,EAAankB,SACrB+J,GAAQ,yBACRA,GAAQqa,EAKhB,OAAOra,GClEI+a,OAvBf,SAAkBrjB,GACd,IAAMhC,EAAOiD,IACb,EAAgBE,EAAY,iBAAD,OACNnB,EAAM8U,MAAMC,OAAOpS,UADb,mBACiC3C,EAAM8U,MAAMC,OAAOjS,QADpD,YAEvB9E,EAAKc,KAAOd,EAAKc,KAAKJ,MAAQ,MAF3BS,EAAP,oBAcA,OACI,cAACyM,GAAA,EAAD,CAAWC,OAAK,EAAhB,SACI,cAAC,GAAD,CAAMyC,UAAWnP,EAAIR,KAAMoJ,OAXb,SAAC8E,GACnB,IAAIA,IAAS7M,EAAMsU,eAAgD,IAA/BtU,EAAMsU,cAAcvS,OAAc,OAAO,KAC7E,IAAMuhB,EAAOtI,GAA6B,IAAIqB,KAAKxP,EAAK0W,WAAWhH,YAE7DiH,EADa,IAAItB,GAAWliB,EAAMsU,eACXlV,IAAIyN,EAAK2W,WAChClb,EAAOka,GAAiB3V,EAAK4W,OAAQD,EAAWF,EAAMzW,EAAKkW,QAASlW,EAAKmW,SAC/E,OAAO,8BAAM1a,U,cCAfob,GAAqB,CACvBnP,SAAU,CACNyE,KAAK,EACLC,SAAS,EACTC,MAAM,EACNC,OAAO,GAEX3E,SAAU,CACN6E,UAAU,EACVC,MAAM,EACNC,SAAS,EACTC,KAAK,EACLC,SAAS,GAEbvW,OAAQ,CACJwW,YAAY,EACZf,MAAM,EACNgB,YAAY,EACZC,UAAU,EACVC,QAAQ,IA4LD8J,OAxLf,YAA+C,IAArB1d,EAAoB,EAApBA,OAAWjG,EAAS,kBACpChC,EAAOiD,IACPgP,EAAqBO,KAC3B,EAA0BrP,EAAY,iBAAD,OAChBnB,EAAM8U,MAAMC,OAAOpS,UADH,kBAEjC3E,EAAKc,KAAOd,EAAKc,KAAKJ,MAAQ,MAF3B4V,EAAP,oBAIA,EAAkF+I,KAApEuG,EAAd,EAAQzT,KAAiD0T,EAAzD,EAAwCnG,gBACxC,EAAkFL,KAApEyG,EAAd,EAAQ3T,KAAiD4T,EAAzD,EAAwCrG,gBACxC,EAAgFL,KAAlE2G,EAAd,EAAQ7T,KAAgD8T,EAAxD,EAAuCvG,gBACvC,EAAgFL,KAAlE6G,EAAd,EAAQ/T,KAAgDgU,EAAxD,EAAuCzG,gBACvC,EAAuCkD,GAAc,CAAEvI,MAAO,OAAQlC,MAAO,WAAY/I,OAAQsW,GAAoBU,OAAQ,KAA7H,mBAAOtD,EAAP,KAAmBuD,EAAnB,KACA,EAAkCpkB,mBAAS,KAA3C,mBAAOqkB,EAAP,KAAkBC,EAAlB,KAEMC,EAAwB,SAACC,GAC3BF,EAAaE,IAGX7d,EAAiB,uCAAG,6BAAAnG,EAAA,6DAAS9B,EAAT,EAASA,KAAT,SAChBqB,EAAM+O,SAASpQ,EAAKgE,UAAWhE,EAAKmE,SADpB,OAEtBmN,EAAmBI,yBAAyB,+BAFtB,2CAAH,sDAKjBlJ,EAAiB,uCAAG,+BAAA1G,EAAA,6DAAS9B,EAAT,EAASA,KAAM0H,EAAf,EAAeA,OAAf,SAChBrG,EAAMqW,SAAS1X,EAAKgE,UAAWhE,EAAKmE,QAASuD,EAAOxB,gBADpC,OAEtBoL,EAAmBI,yBAAyB,gCAFtB,2CAAH,sDAKjBjJ,EAAgB,uCAAG,6BAAA3G,EAAA,6DAAS9B,EAAT,EAASA,KAAT,SACfqB,EAAMsW,QAAQ3X,EAAKgE,UAAWhE,EAAKmE,SADpB,OAErBmN,EAAmBI,yBAAyB,+CAFvB,2CAAH,sDAKhBhJ,EAAgB,uCAAG,+BAAA5G,EAAA,6DAAS9B,EAAT,EAASA,KAAM0H,EAAf,EAAeA,OAAf,SACfrG,EAAMyS,QAAQ9T,EAAKgE,UAAWhE,EAAKmE,QAASuD,EAAOnD,QADpC,OAErB+M,EAAmBI,yBAAyB,oBAFvB,2CAAH,sDAKtB,OACI,qCACI,cAACwT,EAAD,CACIjH,QAAQ,eACRE,iBAAiB,SACjB3R,SAAUvE,EACVmB,OAAQ,kBACJ,+CADI,EAAGpJ,KAC+CmE,WAG9D,cAACihB,EAAD,CACInH,QAAQ,eACRE,iBAAiB,SACjBE,OAAO,wBACP7R,SAAUhE,EACVY,OAAQ,kBACJ,cAAC,GAAD,CACIiV,OAAO,wBACPoE,UAAU,iBACVhW,cAAe,CAAE,eAAkB,IACnCiW,YAAa/M,EAAc3V,KAC3B2iB,QAAQ,gBAIpB,cAAC2C,EAAD,CACIrH,QAAQ,cACRE,iBAAiB,UACjB3R,SAAU/D,EACVW,OAAQ,kBAAc,8CAAd,EAAGpJ,KAAgEmE,QAAU,kEAEzF,cAACqhB,EAAD,CACIvH,QAAQ,iBACRE,iBAAiB,WACjBE,OAAO,kBACP7R,SAAU9D,EACVU,OAAQ,kBACJ,qCACI,4FACA,cAAC,GAAD,CACIiV,OAAO,kBACPoE,UAAU,SACVhW,cAAe,CAAE,OAAU,IAC3BiW,YAAa,CAAC,CAAEne,OAAQ,UAAY,CAAEA,OAAQ,aAC9Coe,QAAQ,iBAKxB,eAAC,IAAD,WACI,cAAC,IAAD,CAAOlgB,KAAMpB,EAAM8U,MAAM1T,KAAMsjB,OAAK,EAAC3c,OAAQ,kBACzC,qCACI,cAAC,GAAD,CAAaA,OAAQ,kBACjB,qCACI,cAACQ,EAAA,EAAD,CACIQ,UAAU,aACVL,QAAQ,kBACRgB,QAAS,WAAQ1J,EAAM6f,QAAQ1d,KAAK,cAHxC,8BAOA,8CACA,cAAC,GAAD,CACI0f,WAAYyC,EACZvC,OAAQ,CACJ,CAAElY,KAAM,OAAQ9I,MAAO,KACvB,CAAE8I,KAAM,QAAS9I,MAAO,MAE5B+W,SAAU0M,IAEd,cAAC,GAAD,CACIzb,UAAU,aACVoC,SAAU,SAACkC,GAAiBgX,EAAiB,SAAUhX,MAE3D,cAAC,GAAD,CACItE,UAAU,kBACV6O,QAASkJ,EAAW1T,OACpB0K,SAAUuM,UAItB,cAAC,GAAD,CACI1hB,UAAW3C,EAAM8U,MAAMC,OAAOpS,UAC9B2R,cAAeA,EAAc3V,KAC7BuY,UAAWjR,EACXkR,OAAQmN,EAERlW,QAAS0S,EAAW3K,MACpB3H,QAASsS,EAAWzI,MACpBjL,OAAQ0T,EAAW1T,OACnBC,WAAYyT,EAAWsD,OACvB9W,WAAY,CAAC,QAAS,eAEtByB,SAAU6U,EACVvN,SAAUyN,EACVxN,QAAS0N,EACTvR,QAASyR,UAIrB,cAAC,IAAD,CAAO9iB,KAAI,UAAKpB,EAAM8U,MAAM1T,KAAjB,aAAkCsjB,OAAK,EAAC3c,OAAQ,SAAC4c,GACxD,IAAM9d,EAAWZ,EAAON,WAAU,SAAAif,GAAG,OAAIA,EAAI/e,KAAOc,OAAOge,EAAY7P,MAAMC,OAAOjS,YAC9ED,GAAuB,IAAdgE,EAAmBZ,EAAOY,GAAY,KACrD,GAAIhE,EACJ,OACI,mCACI,cAAC,GAAD,2BACQ8hB,GADR,IAEI9hB,MAAOA,EACPyR,cAAeA,EAAc3V,KAC7BqQ,OAAQhP,EAAMgP,OACdD,SAAU6U,EACVvN,SAAUyN,EACVxN,QAAS0N,EACTvR,QAASyR,EACThP,0BAA2BlV,EAAMkV,0BACjCI,gBAAiBtV,EAAMsV,wBAKvC,cAAC,IAAD,CAAOlU,KAAI,UAAKpB,EAAM8U,MAAM1T,KAAjB,iBAAsCsjB,OAAK,EAAC3c,OAAQ,SAAC4c,GAC5D,IAAM9d,EAAWZ,EAAON,WAAU,SAAAif,GAAG,OAAIA,EAAI/e,KAAOc,OAAOge,EAAY7P,MAAMC,OAAOjS,YAC9ED,GAAuB,IAAdgE,EAAmBZ,EAAOY,GAAY,KAC/Cge,EAAWF,EAAY7P,MAAMgQ,IAAIvM,MAAM,KAE7C,GADAsM,EAASE,MAAOF,EAASE,MACrBliB,EACJ,OACI,qCACI,cAAC,GAAD,CAAmB+F,MAAO/F,EAAM+F,MAAOoV,QAAS6G,EAASG,KAAK,KAAMjd,OAAQ,WACxE,OACI,cAACQ,EAAA,EAAD,CACIQ,UAAU,aACVW,QAAS,WAAQ1J,EAAM6f,QAAQC,UAFnC,sCAMR,cAAC,GAAD,aAAUxL,cAAeA,EAAc3V,MAAUgmB,iB,eCnI9DM,OA7Ef,YAA8C,IAArBrgB,EAAoB,EAApBA,QAAY5E,EAAQ,kBACnChC,EAAOiD,IACb,EAA0BE,EAAY,iBAAD,OAChBnB,EAAM8U,MAAMC,OAAOpS,UADH,kBAEjC3E,EAAKc,KAAOd,EAAKc,KAAKJ,MAAQ,MAF3B4V,EAAP,oBAIA,EAAgBnT,EAAY,iBAAD,OACNnB,EAAM8U,MAAMC,OAAOpS,UADb,YAEvB3E,EAAKc,KAAOd,EAAKc,KAAKJ,MAAQ,MAF3BS,EAAP,oBAKM+lB,EAAUpL,GAAShO,KAAK,QACxBkQ,EAAWlC,GAAShO,KAAK,YAEzBqZ,EAAU,uCAAG,WAAOpkB,GAAP,eAAAN,EAAA,sEACMqE,EAAYE,cAAchF,EAAM8U,MAAMC,OAAOpS,UAAW3E,EAAKc,KAAKJ,MAAOqC,GAD/E,OACTqC,EADS,OAEflE,QAAQC,IAAIiE,GAFG,2CAAH,sDAkBhB,OACI,eAACwI,GAAA,EAAD,CAAWC,OAAK,EAAhB,UACQ,cAACL,GAAA,EAAD,CAAKzC,UAAU,yBAAf,SACI,cAACmc,EAAD,CAAS1c,GAAG,KAAKzH,MAAO6D,EAAQiF,KAAMA,KAAK,OAAOmF,OAAQmW,EAA1D,SACKvgB,EAAQiF,SAIjB,cAAC2B,GAAA,EAAD,CAAKzC,UAAU,yBAAf,SACI,cAACiT,EAAD,CAAUxT,GAAG,IAAIzH,MAAO6D,EAAQoG,YAAanB,KAAK,cAAcmF,OAAQmW,EAAxE,SACKvgB,EAAQoG,gBAIjB,cAACQ,GAAA,EAAD,UACI,cAACM,GAAA,EAAD,CAAKtD,GAAG,KAAR,8BAIA8L,GAAiBA,EAAc3V,KAAK4D,KAAI,SAACggB,EAAQzU,GAC7C,OACI,eAACtC,GAAA,EAAD,WACI,cAACM,GAAA,EAAD,CAAK4D,MAAO,CAAE0V,UAAW,SAAzB,mBAAwC7C,EAAOnY,UAA/C,YAA4DmY,EAAO/X,YACnE,cAACsB,GAAA,EAAD,CAAK4D,MAAO,CAAE0V,UAAW,QAAzB,SAAoC7C,EAAOhkB,aAFrCuP,MAQtB,cAACtC,GAAA,EAAD,UACI,cAACM,GAAA,EAAD,CAAKtD,GAAG,KAAR,uBAEJ,cAACgD,GAAA,EAAD,CAAKkE,MAAO,CAAE2V,eAAgB,UAA9B,6BAAwDzgB,EAAQqB,QAAUrB,EAAQqB,OAAOlE,OAAzF,qCAEA,cAACyJ,GAAA,EAAD,CAAKkE,MAAO,CAAE2V,eAAgB,UAA9B,SACI,cAACvZ,GAAA,EAAD,CAAKtD,GAAG,KAAR,4BAEJ,cAACgD,GAAA,EAAD,CAAKkE,MAAO,CAAE2V,eAAgB,UAA9B,SACI,cAAC,GAAD,CAAM/W,UAAWnP,EAAIR,KAAMoJ,OAnDrB,SAAC8E,GACnB,IAAIA,IAAS7M,EAAMsU,eAAgD,IAA/BtU,EAAMsU,cAAcvS,OAAc,OAAO,KAC7E,IAAMuhB,EAAOtI,GAA6B,IAAIqB,KAAKxP,EAAK0W,WAAWhH,YAC7D+I,EAAa,IAAIpD,GAAW5N,EAAc3V,MAC1C6kB,EAAY8B,EAAWlmB,IAAIyN,EAAK2W,WAC9B3e,EAAmB6b,KAAKO,MAAMpU,EAAKmW,SAAWnW,EAAKkW,SAAnDle,eACFke,EAAUrC,KAAKO,MAAMpU,EAAKkW,SAC1BC,EAAUtC,KAAKO,MAAMpU,EAAKmW,SAC1BuC,EAAeD,EAAWlmB,IAAIyF,GAC9ByD,EHvCoB,SAACma,EAAWC,EAAc8C,EAAiB7C,EAAS8C,GAClF,IAAInd,EAAO,GACX,OAAOma,GACH,IAAK,eACDna,GAAQoa,EAAankB,SACrB+J,GAAQ,uBACRA,GAAQmd,EAAQzC,QAAQlgB,QACxBwF,GAAQ,wBACR,MACJ,IAAK,gBACDA,GAAQoa,EAAankB,SACrB+J,GAAQ,wBACRA,GAAQmd,EAAQzC,QAAQlgB,QACxBwF,GAAQ,wBACR,MACJ,IAAK,eACDA,GAAQoa,EAAankB,SACrB+J,GAAQ,uBACRA,GAAQmd,EAAQ1C,QAAQjgB,QACxBwF,GAAQ,wBACR,MACJ,IAAK,SACDA,GAAQoa,EAAankB,SACrB+J,GAAQ,0CACR,MACJ,IAAK,aACDA,GAAQoa,EAAankB,SACrB+J,GAAQ,UACRA,GAAQkd,EAAgBjnB,SACxB+J,GAAQ,sBACR,MACJ,IAAK,gBACDA,GAAQoa,EAAankB,SACrB+J,GAAQ,YACRA,GAAQkd,EAAgBjnB,SACxB+J,GAAQ,wBACR,MACJ,IAAK,SACDA,GAAQoa,EAAankB,SACrB+J,GAAQ,2BACR,MACJ,IAAK,SACDA,GAAQoa,EAAankB,SACrB+J,GAAQ,2BAMhB,OADAA,EAAQqa,EGTS+C,CAAmB7Y,EAAK4W,OAAQD,EAAW+B,EAAcjC,EAAM,CAAEP,UAASC,YACvF,OAAO,8BAAM1a,SA2CL,cAACkD,GAAA,EAAD,QCwBDma,OAxFf,YAAsC,IAAV7Q,EAAS,EAATA,MAClB9W,EAAOiD,IACPqE,ECjBCpE,qBAAWkE,GDkBZ6K,EAAqBO,KAC3B,EAA0BrP,EAAY,gBAAiBnD,EAAKc,KAAOd,EAAKc,KAAKJ,MAAQ,MAA9E4V,EAAP,oBACA,EAA+E+I,KAAjEuI,EAAd,EAAQzV,KAAmD0V,EAA3D,EAA0CnI,gBAC1C,EAA0FL,KAA5EyI,EAAd,EAAQ3V,KAAqD4V,EAA7D,EAA4CrI,gBAE5C,OACI,qCACI,cAACmI,EAAD,CACIjJ,QAAQ,iBACRC,gBAAgB,SAChBC,iBAAiB,SACjB3R,SAAQ,uCAAE,WAAOvG,GAAP,SAAAnE,EAAA,sEACA6E,EAASE,oBAAoBZ,GAD7B,OAENqL,EAAmBI,yBAAyB,iCAFtC,2CAAF,sDAIRtI,OAAQ,kBAAc,yDAAd,EAAGpJ,KAA2EgE,UAAY,OAEtG,cAACojB,EAAD,CACInJ,QAAQ,mBACRE,iBAAiB,MACjBE,OAAO,2BACP7R,SAAQ,uCAAE,WAAOxM,GAAP,SAAA8B,EAAA,sEACA6E,EAASc,sBAAsBzH,GAD/B,OAENsR,EAAmBI,yBAAyB,+CAFtC,2CAAF,sDAIRtI,OAAQ,kBACJ,cAAC,GAAD,CACIiV,OAAO,2BACPoE,UAAU,iBACVhW,cAAe,CAAE,eAAkB,IACnCiW,YAAa/M,EAAc3V,KAC3B2iB,QAAQ,gBAIpB,eAAC,IAAD,WACI,cAAC,IAAD,CAAOlgB,KAAM0T,EAAMgQ,IAAKJ,OAAK,EAAC3c,OAAQ,kBAClC,qCACI,cAAC,GAAD,IACA,cAAC,GAAD,CACI8H,YAAavK,EAAS3G,KACtBoQ,SAAU6W,EACV5W,OAAQ1J,EAASY,kBACjB+I,kBAAmB6W,UAI/B,cAAC,IAAD,CAAO1kB,KAAI,UAAK0T,EAAMgQ,IAAX,0BAAwCJ,OAAK,EAAC3c,OAAQ,SAAC4c,GAAD,OAC7D,cAAC,GAAD,2BACQA,GADR,IAEIxZ,SAAU7F,EAASgB,kBACnB4O,0BAA2B5P,EAASgC,6BACpCgO,gBAAiBhQ,EAASiC,gCAGlC,cAAC,IAAD,CAAOnG,KAAI,UAAK0T,EAAMgQ,IAAX,sBAAoC/c,OAAQ,SAAC4c,GACpD,IAAMle,EAAanB,EAAS3G,KAAKgH,WAAU,SAAAe,GAAI,OAAIA,EAAKb,KAAOc,OAAOge,EAAY7P,MAAMC,OAAOpS,cACzFsD,GAA0B,IAAhBQ,EAAqBnB,EAAS3G,KAAK8H,GAAYR,OAAS,GACxE,OACI,cAAC,GAAD,2BACQ0e,GADR,IAEI1e,OAAQA,EACR8I,SAAUzJ,EAASsB,kBACnByP,SAAU/Q,EAAS6B,kBACnBmP,QAAShR,EAAS8B,iBAClBqL,QAASnN,EAAS+B,iBAClB2H,OAAQ1J,EAASwB,gBACjBoO,0BAA2B5P,EAASgC,6BACpCgO,gBAAiBhQ,EAASiC,gCAItC,cAAC,IAAD,CAAOnG,KAAI,UAAK0T,EAAMgQ,IAAX,QAAsBJ,OAAK,EAAC3c,OAAQ,SAAC4c,GAAD,OAC3C,cAAC,GAAD,2BAAoBA,GAApB,IAAiCxZ,SAAU7F,EAASS,uBAExD,cAAC,IAAD,CAAO3E,KAAI,UAAK0T,EAAMgQ,IAAX,gBAA8BJ,OAAK,EAAC3c,OAAQ,SAAC4c,GACpD,IAAM/f,EAAUU,EAAS3G,KAAK2jB,MAAK,SAAA5b,GAAI,OAAIA,EAAKb,KAAOc,OAAOge,EAAY7P,MAAMC,OAAOpS,cACvF,GAAIiC,EACJ,OAAO,cAAC,GAAD,aAAgBA,QAASA,GAAa+f,c,OE/FlD,SAASqB,GAAShmB,GAC7B,OACI,sBAAK+I,UAAU,YAAf,UACI,eAACyC,GAAA,EAAD,WACI,cAACM,GAAA,EAAD,CAAKI,GAAI,EAAGD,GAAI,EAAGga,EAAG,EAAGla,GAAI,GAAIhD,UAAU,QAA3C,0BACA,cAAC+C,GAAA,EAAD,CAAKI,GAAI,EAAGD,GAAI,EAAGga,EAAG,EAAGla,GAAI,GAAIhD,UAAU,cAA3C,SAA2D/I,EAAMlB,KAAKsL,eAG1E,eAACoB,GAAA,EAAD,WACI,cAACM,GAAA,EAAD,CAAKI,GAAI,EAAGD,GAAI,EAAGga,EAAG,EAAGla,GAAI,GAAIhD,UAAU,QAA3C,yBACA,cAAC+C,GAAA,EAAD,CAAKI,GAAI,EAAGD,GAAI,EAAGga,EAAG,EAAGla,GAAI,GAAIhD,UAAU,cAA3C,SAA2D/I,EAAMlB,KAAK0L,cAG1E,eAACgB,GAAA,EAAD,WACI,cAACM,GAAA,EAAD,CAAKI,GAAI,EAAGD,GAAI,EAAGga,EAAG,EAAGla,GAAI,GAAIhD,UAAU,QAA3C,yBACA,cAAC+C,GAAA,EAAD,CAAKI,GAAI,EAAGD,GAAI,EAAGga,EAAG,EAAGla,GAAI,GAAIhD,UAAU,cAA3C,SAA2D/I,EAAMlB,KAAKP,cAG1E,eAACiN,GAAA,EAAD,WACI,cAACM,GAAA,EAAD,CAAKI,GAAI,EAAGD,GAAI,EAAGga,EAAG,EAAGla,GAAI,GAAGhD,UAAU,QAA1C,qBACA,cAAC+C,GAAA,EAAD,CAAKI,GAAI,EAAGD,GAAI,EAAGga,EAAG,EAAGla,GAAI,GAAGhD,UAAU,cAA1C,SAA0D/I,EAAMlB,KAAK2L,c,OCnBtE,SAASyb,GAAmBlmB,GACvC,OACI,cAAC,KAAD,CACIoL,cAAe,CACX1L,gBAAiB,GACjBC,YAAa,GACbmL,mBAAoB,IAExBK,SAAQ,uCAAE,WAAO9E,EAAP,kBAAA5F,EAAA,6DAAiB6K,EAAjB,EAAiBA,gBACT,GADR,SAEAtL,EAAMmL,SAAS9E,EAAO3G,gBAAiB2G,EAAO1G,aAF9C,OAGN2L,GAAc,GAHR,2CAAF,wDAKRD,iBAAkBR,GAXtB,SAaK,gBAAGU,EAAH,EAAGA,aAAH,OACG,eAAC,KAAD,CAAMxC,UAAU,OAAhB,UACI,eAACyC,GAAA,EAAD,WACI,cAACM,GAAA,EAAD,UACI,uBAAOlC,QAAQ,kBAAf,gCAEJ,eAACkC,GAAA,EAAD,WACI,cAAC,KAAD,CAAOjC,KAAK,kBAAkBG,KAAK,WAAWqC,aAAa,iBAC3D,uBAAMtD,UAAU,aAAhB,UACK/I,EAAMK,OAAS,8BAAML,EAAMK,MAAMtB,UAClC,cAAC,KAAD,CAAc8K,KAAK,6BAK/B,eAAC2B,GAAA,EAAD,WACI,cAACM,GAAA,EAAD,UACI,uBAAOlC,QAAQ,cAAf,4BAEJ,eAACkC,GAAA,EAAD,WACI,cAAC,KAAD,CAAOjC,KAAK,cAAcG,KAAK,WAAWqC,aAAa,iBACvD,sBAAMtD,UAAU,aAAhB,SACI,cAAC,KAAD,CAAcc,KAAK,wBAK/B,eAAC2B,GAAA,EAAD,WACI,cAACM,GAAA,EAAD,UACI,uBAAOlC,QAAQ,qBAAf,oCAEJ,eAACkC,GAAA,EAAD,WACI,cAAC,KAAD,CAAOjC,KAAK,qBAAqBG,KAAK,WAAWqC,aAAa,QAC9D,sBAAMtD,UAAU,aAAhB,SACI,cAAC,KAAD,CAAcc,KAAK,+BAK/B,cAAC2B,GAAA,EAAD,UACI,cAACjD,EAAA,EAAD,CAAQG,QAAQ,UAAUsB,KAAK,SAASyB,SAAUF,EAAlD,4BCjDT,SAAS4a,GAAgBnmB,GACpC,IAAMhC,EAAOiD,IAEPmlB,EAAoB,uCAAG,WAAO1mB,EAAiBC,GAAxB,SAAAc,EAAA,sDACzBzC,EAAKyB,eAAeC,EAAiBC,EAArC,+BAAAc,EAAA,MAAkD,WAAOG,GAAP,SAAAH,EAAA,yDAC1CG,EAD0C,gCAEpC5C,EAAKuB,QAAO,kBAAMS,EAAM6f,QAAQ1d,KAAK,iBAFD,6BAGvCjD,QAAQC,IAAIyB,GAH2B,2CAAlD,uDADyB,2CAAH,wDAS1B,OACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOQ,KAAMpB,EAAM8U,MAAMgQ,IAAKJ,OAAK,EAAC3c,OAAQ,kBACxC,eAAC6D,GAAA,EAAD,CAAWC,OAAK,EAAC9C,UAAU,OAAOlD,GAAG,eAArC,UACI,cAAC2F,GAAA,EAAD,CAAKhD,GAAG,KAAR,iCACA,cAACgD,GAAA,EAAD,UACI,cAAC,GAAD,CAAU1M,KAAMd,EAAKc,SAEzB,eAAC0M,GAAA,EAAD,WACI,qEACA,cAAC,IAAD,CAAMxD,GAAG,yBAAT,kBAA8C,aAK1D,cAAC,IAAD,CAAO5G,KAAMpB,EAAM8U,MAAMgQ,IAAM,kBAAmBJ,OAAK,EAAC3c,OAAQ,kBAC5D,eAAC6D,GAAA,EAAD,CAAWC,OAAK,EAAC9C,UAAU,OAAOlD,GAAG,kBAArC,UACI,oDACA,cAACqgB,GAAD,CAAoB/a,SAAUib,EAAsB/lB,MAAOrC,EAAKqC,iB,OCtCrE,SAASgmB,GAAmBrmB,GACvC,IAAMsmB,EAAS9V,KACf,OACI,qBAAKzH,UAAW,kCAAoCud,EAAOnW,KAAO,OAAS,IAA3E,SACI,qBAAKpH,UAAU,sBAAf,SACKud,EAAOhe,SCkCTie,OA1Bf,WAEI,OACI,cAAC,IAAD,UACI,cAACxmB,EAAD,UACI,cAACsF,EAAD,UACI,eAAC2K,GAAD,WACI,cAAC,GAAD,IACA,cAAC,GAAD,IACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAO5O,KAAK,SAASyG,UAAW6D,KAChC,cAAC,IAAD,CAAOtK,KAAK,UAAUyG,UAAWyE,KACjC,cAAC,EAAD,CAAclL,KAAK,aAAayG,UAAW6E,KAC3C,cAAC,EAAD,CAActL,KAAK,YAAYyG,UAAW8d,KAC1C,cAAC,EAAD,CAAcvkB,KAAK,WAAWyG,UAAWse,KACzC,cAAC,EAAD,CAAc/kB,KAAK,IAAIyG,UAAW6E,kBCpB/C8Z,OARf,WACE,OACE,qBAAKzd,UAAU,MAAf,SACE,cAAC,GAAD,OCKS0d,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBvT,MAAK,YAAkD,IAA/CwT,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASlf,OACP,cAAC,IAAMmf,WAAP,UACE,cAAC,GAAD,MAEF1H,SAAS2H,eAAe,SAM1BV,O","file":"static/js/main.15ae9bd2.chunk.js","sourcesContent":["const authTokenKey = \"track_app_auth_token\";\n\nexport function setLocalAuthToken(token) {\n    localStorage.setItem(authTokenKey, token);\n}\n\nexport function getLocalAuthToken() {\n    return localStorage.getItem(authTokenKey);\n}\n\nexport function removeLocalAuthToken() {\n    localStorage.removeItem(authTokenKey);\n}","import axios from 'axios';\nimport { setLocalAuthToken, getLocalAuthToken, removeLocalAuthToken } from '../utility/local/authStorage';\n\nconst auth = {\n    isAuthenticated: false, \n    async login(credentials, cb) {\n        try{\n            const response = await axios.post(\n                '/api/auth/login', \n                { \n                    userName: credentials.userName, \n                    password: credentials.password \n                }\n            );\n            auth.isAuthenticated = true;\n            setLocalAuthToken(response.data.token);\n            cb({ ...response.data.user, token: response.data.token }, null);\n            return response.data;\n        } catch(err) {\n            auth.isAuthenticated = false;\n            cb(null, { message: err.response.data.message });\n        }\n    },\n    async tokenLogin(cb) {\n        const token = getLocalAuthToken();\n\n        if(!token) {\n            auth.isAuthenticated = false;\n            console.log(\"Token not found\");\n            cb(null);\n            return;\n        }\n\n        console.log(\"Token found\");\n        let response = null;\n        try {\n            response = await axios.get(\n                '/api/user/login',\n                { headers: { 'Authorization': `Bearer ${token}` } }\n            );\n            auth.isAuthenticated = true;\n            cb({ ...response.data, token }, null);\n        } catch(err) {\n            auth.isAuthenticated = false;\n            cb(null, { message: err.message });\n        }\n\n        return response;\n    },\n    async signup(user, cb) {\n        try {\n            const response = await axios.post(\n                '/api/auth/register',\n                { ...user }\n            );\n            console.log(response);\n            cb(response.data, null);\n            return response.data;\n        } catch(err) {\n            cb(null, { message: err.message });\n        }\n    },\n    async logout(cb) {\n        auth.isAuthenticated = false;\n        removeLocalAuthToken();\n        cb();\n    }, \n    async changePassword(currentPassword, newPassword, token, cb) {\n        try {\n            console.log(\"authApi\", { currentPassword, newPassword });\n            const response = await axios.patch(\n                '/api/user/changePassword',\n                { currentPassword, newPassword },\n                { headers: { 'Authorization': `Bearer ${token}` } }\n            );\n            console.log(response);\n            cb(null);\n            return response.data;\n        } catch(err) {\n            cb({ message: err.response.data.message });\n        }\n    }\n}\n\nexport default auth;","import React, { useState, useEffect, createContext } from 'react';\nimport authApi from '../api/auth';\n\nexport const authContext = createContext({ });\n\nexport default function ProvideAuth(props) {\n    const auth = useProvideAuth();\n\n    return (\n        <authContext.Provider value={auth}>\n            {props.children}\n        </authContext.Provider>\n    )\n}\n\nfunction useProvideAuth() {\n    const [user, setUser] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const loginWithToken = async () => {\n            await authApi.tokenLogin((user) => {\n                user ? console.log(\"Logged in as \" + user.userName) : console.log(\"Not logged in\");\n                setUser(user);\n                setError(null);\n                setIsLoading(false);\n            });\n        }\n        console.log(\"Logging in with token\");\n        setIsLoading(true);\n        loginWithToken();\n\n    }, []);\n\n    const signup = (userInfo, cb) => {\n        return authApi.signup(userInfo, (data) => {\n            console.log(data);\n            cb(data);\n        })\n    }\n\n    const login = (credentials, cb) => {\n        console.log(\"logging in\");\n        setIsLoading(true);\n        authApi.login(credentials, (user, error) => {\n            if(error) setError(error);\n            else {\n                setUser(user);\n                setError(null);\n                cb(user);\n            }\n        })\n        setIsLoading(false);\n    }\n\n    const logout = cb => {\n        return authApi.logout(() => {\n            setUser(null);\n            setError(null);\n            cb && cb();\n        });\n    }\n\n    const changePassword = (currentPassword, newPassword, cb) => {\n        return authApi.changePassword(currentPassword, newPassword, user.token, (err) => {\n            if(err) {\n                setError(err);\n                cb(err);\n            } else {\n                setError(null);\n                cb(null);\n            }\n        });\n    }\n\n    return {\n        user,\n        isLoading,\n        error,\n        signup,\n        login, \n        logout,\n        changePassword\n    }\n}","import { useContext } from \"react\";\nimport { authContext } from \"../contexts/AuthContext\";\n\nexport default function useAuth() {\n    return useContext(authContext);\n}","import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction useResource(path, authToken, forkedPaths = null) {\n    const [resource, setResource] = useState({\n        data: [],\n        isLoading: false,\n        isError: false\n    });\n\n    const [refresh, setRefresh] = useState(false);\n\n    const getResource = () => setRefresh(prev => !prev);\n\n    useEffect(() => {\n\n        const fetchResource = async () => {\n            setResource({ data: [], isLoading: true, isError: false });\n            try {\n                const headers = authToken ? { 'Authorization': `Bearer ${authToken}` } : {}\n                let response;\n                if(forkedPaths) {\n                    if(forkedPaths.length === 0) return setResource({ data: [], isLoading: false, isError: false });\n                    \n                    const promises = [];\n                    forkedPaths.forEach(fork => {\n                        promises.push(axios.get(path + \"/\" + fork, { headers }));\n                    });\n\n                    response = await Promise.all(promises);\n\n                    const responseData = response.map(res => ({\n                        filename: res.headers['content-filename'],\n                        data: res.data\n                    }));\n\n                    setResource({ data: responseData, isLoading: false, isError: false });\n                } else {\n                    response = await axios.get(path, { headers });\n                    setResource({ data: response.data, isLoading: false, isError: false });\n                }\n\n            } catch(err) {\n                console.log(err);\n                setResource({ data: err, isLoading: false, isError: true })\n            }\n        }\n\n        fetchResource();\n\n    }, [path, authToken, refresh]);\n\n    return [resource, setResource, getResource];\n}\n\nexport default useResource;","export function authHeader(authToken) {\n    return { 'Authorization': `Bearer ${authToken}`}\n}","import axios from 'axios';\nimport { authHeader } from './util';\n\nasync function createIssue(projectId, issueInfo, authToken) {\n    try {\n        const headers = authHeader(authToken)\n        const issue = await axios.post(`/api/projects/${projectId}/issues`, issueInfo, { headers });\n        return issue.data;\n    } catch(err) {\n        console.log(err);\n    }\n}\n\nasync function updateIssue(projectId, issueId, update, authToken) {\n    try {\n        const headers = authHeader(authToken);\n        const issue = await axios.patch(`/api/projects/${projectId}/issues/${issueId}`, update, { headers });\n        return issue.data;\n    } catch(err) {\n        console.log(err);\n    }\n}\n\nasync function deleteIssue(projectId, issueId, authToken) {\n    try {\n        const headers = authHeader(authToken);\n        const issue = await axios.delete(`/api/projects/${projectId}/issues/${issueId}`, { headers });\n        return issue.data;\n    } catch(err) {\n        console.log(err);\n    }\n}\n\nasync function assignIssue(projectId, issueId, assigneeId, authToken) {\n    try {\n        const headers = authHeader(authToken);\n        const issue = await axios.patch(\n            `/api/projects/${projectId}/issues/${issueId}/assign`,\n            { assigneeId },\n            { headers }\n        )\n        return issue.data;\n    } catch(err) {\n        console.log(err);\n    }\n}\n\nasync function advanceIssue(projectId, issueId, status, authToken) {\n    try {\n        const headers = authHeader(authToken);\n        const issue = await axios.patch(\n            `/api/projects/${projectId}/issues/${issueId}/advance`,\n            { status },\n            { headers }\n        )\n        return issue.data;\n    } catch(err) {\n        console.log(err);\n    }\n}\n\nasync function addComment(projectId, issueId, comment, authToken) {\n    try {\n        const headers = authHeader(authToken);\n        const result = await axios.post(\n            `/api/projects/${projectId}/issues/${issueId}/comments`,\n            { comment },\n            { headers }\n        )\n        console.log(result);\n        return result.data;\n    } catch(err) {\n        console.log(err);\n    }\n}\n\nasync function updateComment(projectId, issueId, commentId, comment, authToken) {\n    try {\n        const headers = authHeader(authToken);\n        const result = await axios.patch(\n            `/api/projects/${projectId}/issues/${issueId}/comments/${commentId}`,\n            { comment },\n            { headers }\n        )\n        console.log(result);\n        return result.data;\n    } catch(err) {\n        console.log(err);\n    }\n}\n\nasync function deleteComment(projectId, issueId, commentId, authToken) {\n    try {\n        const headers = authHeader(authToken);\n        const result = await axios.delete(\n            `/api/projects/${projectId}/issues/${issueId}/comments/${commentId}`,\n            { headers }\n        )\n        console.log(result);\n        return result.data;\n    } catch(err) {\n        console.log(err);\n    }\n}\n\n// This function returns a promise instead of waiting for it to resolve. \n// The callback is passed the current percentage of the upload\nasync function createAttachment(projectId, issueId, data, authToken, cb) {\n    try {\n        const headers = authHeader(authToken);\n        let config = {\n            onUploadProgress: function(progressEvent) {\n                let percentCompleted = Math.round( (progressEvent.loaded * 100) / progressEvent.total );\n                cb && (typeof cb === \"function\") && cb(percentCompleted);\n            },\n            headers\n        };\n        return axios.post(\n            `/api/projects/${projectId}/issues/${issueId}/attachments`,\n            data,\n            config\n        )\n    } catch(err) {\n        console.log(err);\n\n    }\n}\n\nasync function getAttachment(projectId, issueId, attachmentId, authToken) {\n    try {\n        const headers = authHeader(authToken);\n        return axios.get(\n            `/api/projects/${projectId}/issues/${issueId}/attachments/${attachmentId}`,\n            { headers }            \n        );\n    } catch(err) {\n        console.log(err);\n    }\n}\n\nasync function deleteAttachment(projectId, issueId, attachmentId, authToken) {\n    try {\n        const headers = authHeader(authToken);\n        const result = axios.delete(\n            `/api/projects/${projectId}/issues/${issueId}/attachments/${attachmentId}`,\n            { headers }\n        )\n        console.log(result);\n        return result;\n    } catch(err) {\n        console.log(err);\n    }\n}\n\nconst issuesApi = {\n    createIssue, updateIssue, deleteIssue, assignIssue, advanceIssue, \n    addComment, updateComment, deleteComment, \n    createAttachment, getAttachment, deleteAttachment\n}\n\nexport default issuesApi;","import axios from 'axios';\nimport { authHeader } from './util';\n\nasync function createProject(projectInfo, authToken) {\n    try {\n        const headers = authHeader(authToken)\n        const project = await axios.post(\"/api/projects\", projectInfo, { headers });\n        return project;\n    } catch(err) {\n        console.log(err);\n    }\n}\n\nasync function updateProject(projectId, authToken, update) {\n    try {\n        const headers = authHeader(authToken);\n        const project = await axios.patch(`/api/projects/${projectId}`, update, { headers });\n        return project;\n    } catch(err) {\n        console.log(err);\n    }\n}\n\nasync function deleteProject(projectId, authToken) {\n    try {\n        const headers = authHeader(authToken);\n        const project = await axios.delete(`/api/projects/${projectId}`, { headers });\n        return project;\n    } catch(err) {\n        console.log(err);\n    }\n}\n\nasync function addProjectCollaborator(projectId, collaboratorId, authToken) {\n    try {\n        const headers = authHeader(authToken);\n        const result = await axios.post(`/api/projects/${projectId}/collaborators`, { collaboratorId }, { headers })\n        return result;\n    } catch(err) {\n        console.log(err);\n    }\n}\n\nasync function removeProjectCollaborator(projectId, collaboratorId, authToken) {\n    try {\n        const headers = authHeader(authToken);\n        const result = await axios.delete(`/api/projects/${projectId}/collaborators`, { collaboratorId }, { headers })\n        return result;\n    } catch(err) {\n        console.log(err);\n    }\n}\n\nconst projectsApi = {\n    createProject, updateProject, deleteProject, addProjectCollaborator, removeProjectCollaborator\n}\n\nexport default projectsApi;","import React, { createContext } from 'react';\n\nimport useAuth from '../hooks/useAuth';\nimport useResource from '../hooks/useResource';\nimport issuesApi from '../api/issues';\nimport projectsApi from '../api/projects';\n\nexport const projectsContext = createContext({ });\n\nexport default function ProvideProjects(props) {\n    const projects = useProvideProjects();\n\n    return (\n        <projectsContext.Provider value={projects}>\n            {props.children}\n        </projectsContext.Provider>\n    );\n}\n\nfunction useProvideProjects() {\n    const auth = useAuth();\n    const [projects, setProjects] = useResource('/api/projects', auth.user ? auth.user.token : null);\n\n    const handleDeleteProject = async ({ data }) => {\n        await projectsApi.deleteProject(data.projectId, auth.user.token);\n        setProjects(prev => {\n            const projects = prev.data.slice();\n            const index = projects.findIndex(elem => elem.id === data.projectId);\n            projects.splice(index, 1);\n            return { ...prev, data: projects };\n        });\n    }\n\n    const handleAddProject = async (newProject) => {\n        const project = await projectsApi.createProject(newProject, auth.user.token);\n        setProjects(prev => {\n            const projects = prev.data.slice();\n            projects.push({ ...project.data, issues: [] }); // TODO: Modify backend to init empty array instead of here\n            return { ...prev, data: projects };\n        });\n    }\n\n    const handleEditProject = async (projectId, updates) => {\n\n    }\n\n    const handleAddCollaborator = async ({ data, values }) => {\n        await projectsApi.addProjectCollaborator(data.projectId, values.collaboratorId, auth.user.token);\n    }\n\n    const handleCreateIssue = async (projectId, issueDetails) => {\n        const newIssue = await issuesApi.createIssue(projectId, issueDetails, auth.user.token);\n        setProjects(prev => {\n            const projects = prev.data.slice();\n            const projectIdx = projects.findIndex(proj => proj.id === Number(projectId));\n            projects[projectIdx].issues.push(newIssue);\n            return { ...prev, data: projects}\n        });\n        return newIssue;\n    }\n\n    const handleDeleteIssue = async (projectId, issueId) => {\n        await issuesApi.deleteIssue(projectId, issueId, auth.user.token);\n        setProjects(prev => {\n            const projects = prev.data.slice();\n            const projectIdx = projects.findIndex(proj => proj.id === Number(projectId));\n            const issueIdx = projects[projectIdx] \n                && projects[projectIdx].issues \n                && projects[projectIdx].issues.length > 0 \n                && projects[projectIdx].issues.findIndex(issue => issue.id === Number(issueId));\n            projects[projectIdx].issues.splice(issueIdx, 1);\n            return { ...prev, data: projects }\n        });\n    }\n    \n    const handleEditIssue = async (projectId, issueId, issueUpdates) => {\n        //Do not fire request if there are no changes to the issue\n        if(Object.keys(issueUpdates).length === 0) return;\n\n        const updatedIssue = await issuesApi.updateIssue(projectId, issueId, issueUpdates, auth.user.token);\n        setProjects(prev => {\n            const projects = prev.data.slice();\n            const projectIdx = projects.findIndex(proj => proj.id === Number(projectId));\n            const issueIdx = projects[projectIdx] \n                && projects[projectIdx].issues \n                && projects[projectIdx].issues.length > 0 \n                && projects[projectIdx].issues.findIndex(issue => issue.id === Number(issueId));\n            projects[projectIdx].issues[issueIdx] = updatedIssue;\n            return { ...prev, data: projects }\n        });\n    }\n\n    const handleAssignIssue = async (projectId, issueId, collaboratorId) => {\n        const updatedIssue = await issuesApi.assignIssue(projectId, issueId, collaboratorId, auth.user.token);\n        setProjects(prev => {\n            const projects = prev.data.slice();\n            const projectIdx = projects.findIndex(proj => proj.id === Number(projectId));\n            const issueIdx = projects[projectIdx] \n                && projects[projectIdx].issues \n                && projects[projectIdx].issues.length > 0 \n                && projects[projectIdx].issues.findIndex(issue => issue.id === Number(issueId));\n            projects[projectIdx].issues[issueIdx] = updatedIssue;\n            return { ...prev, data: projects }\n        });\n    }\n\n    const handleStartIssue = async (projectId, issueId) => {\n        const updatedIssue = await issuesApi.advanceIssue(projectId, issueId, \"inprogress\", auth.user.token);\n        setProjects(prev => {\n            const projects = prev.data.slice();\n            const projectIdx = projects.findIndex(proj => proj.id === Number(projectId));\n            const issueIdx = projects[projectIdx] \n                && projects[projectIdx].issues \n                && projects[projectIdx].issues.length > 0 \n                && projects[projectIdx].issues.findIndex(issue => issue.id === Number(issueId));\n            projects[projectIdx].issues[issueIdx] = updatedIssue;\n            return { ...prev, data: projects }\n        });\n    } \n\n    const handleCloseIssue = async (projectId, issueId, status) => {\n        const updatedIssue = await issuesApi.advanceIssue(projectId, issueId, status, auth.user.token);\n        setProjects(prev => {\n            const projects = prev.data.slice();\n            const projectIdx = projects.findIndex(proj => proj.id === Number(projectId));\n            const issueIdx = projects[projectIdx] \n                && projects[projectIdx].issues \n                && projects[projectIdx].issues.length > 0 \n                && projects[projectIdx].issues.findIndex(issue => issue.id === Number(issueId));\n            projects[projectIdx].issues[issueIdx] = updatedIssue;\n            return { ...prev, data: projects }\n        });\n    }\n\n    const handleIssueAttachmentRequest = async (projectId, issueId, data, cb) => {\n        console.log(\"in context\")\n        return issuesApi.createAttachment(projectId, issueId, data, auth.user.token, cb);\n    }\n\n    const addIssueAttachmentHandles = (projectId, issueId, attachmentHandles) => {\n        setProjects(prev => {\n            const projects = prev.data.slice();\n            const projectIdx = projects.findIndex(proj => proj.id === Number(projectId));\n            const issueIdx = projects[projectIdx] \n                && projects[projectIdx].issues \n                && projects[projectIdx].issues.length > 0 \n                && projects[projectIdx].issues.findIndex(issue => issue.id === Number(issueId));\n            const currHandles = projects[projectIdx].issues[issueIdx].attachmentHandles || [];\n            projects[projectIdx].issues[issueIdx].attachmentHandles = currHandles.concat(attachmentHandles);\n            return { ...prev, data: projects }\n        });\n    }\n\n    return {\n        data: projects.data,\n        handleDeleteProject,\n        handleEditProject,\n        handleAddProject,\n        handleAddCollaborator,\n        handleDeleteIssue,\n        handleEditIssue,\n        handleCreateIssue,\n        handleAssignIssue,\n        handleStartIssue,\n        handleCloseIssue,\n        handleIssueAttachmentRequest,\n        addIssueAttachmentHandles\n    }\n}","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport useAuth from '../../hooks/useAuth';\n\n// A wrapper for <Route> that redirects to the login\n// screen if you're not yet authenticated.\nfunction PrivateRoute({ children, component, ...props }) {\n    let auth = useAuth();\n    const Component = component;\n    return (\n        <Route\n            {...props}\n            render={(props) =>\n            auth.user ? (\n                children || <Component {...props}/>\n            ) : (\n                <Redirect\n                    to={{\n                        pathname: \"/login\",\n                        state: { from: props.location }\n                    }}\n                />\n            )}\n        />\n    );\n}\n\nexport default PrivateRoute;","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { Link } from 'react-router-dom';\n\nfunction LinkButton({ to, text, ...props }) {\n    return (\n        <Button as={Link} to={to ? to : \"#\"} variant=\"outline-primary\" {...props}>\n            {text || props.children}\n        </Button>\n    );\n}\n\nexport default LinkButton;","import { Navbar } from 'react-bootstrap'\nimport './NavBar.css';\n\nfunction NavBar({ title, logo, render, ...props }) {\n    return (\n        <Navbar className=\"NavBar\" {...props}>\n            <Navbar.Brand id=\"brand\" href=\"/\">\n                {logo ? \n                    <img \n                        alt=\"\"\n                        src={logo}\n                        className=\"logo\"\n                    /> : \n                    null\n                }\n                {title}\n            </Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\" className=\"justify-content-end\">\n                {render()}\n            </Navbar.Collapse>\n        </Navbar>\n    )\n}\n\nexport default NavBar;","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React from 'react';\nimport { Nav } from 'react-bootstrap';\n\nimport LinkButton from '../../display/Button/LinkButton';\nimport NavBar from '../../display/NavBar/NavBar';\nimport useAuth from '../../../hooks/useAuth';\n\nimport logo from '../../../logo.svg';\n\nfunction TopNavBar(props) {\n    const auth = useAuth();\n\n    const logout = () => {\n        auth.logout(() => {\n            console.log(\"Logged out\")\n        })\n    }\n    \n    return (\n        <NavBar title=\"Issue Tracker\" logo={logo} bg=\"dark\" expand=\"md\" render={() => (\n            <Nav >\n                { !auth.user ? <LinkButton className=\"m-sm-1\" to=\"login\">Login</LinkButton> : null }\n                { !auth.user ? <LinkButton className=\"m-sm-1\" to=\"signup\">Signup</LinkButton> : null }\n                { auth.user ? <LinkButton className=\"m-sm-1\" to=\"/dashboard\">Dashboard</LinkButton> : null }\n                { auth.user ? <LinkButton className=\"m-sm-1\" to=\"/account\">Account</LinkButton> : null }\n                { auth.user ? <LinkButton className=\"m-sm-1\" onClick={logout}>Logout</LinkButton> : null }\n            </Nav>\n        )} />\n    )\n}\n\nexport default TopNavBar;","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormControl } from 'react-bootstrap';\n\nimport './TextInput.css';\n\nexport default function TextInput(props) {\n    return (\n        <span className=\"text-input-container\">\n            <label htmlFor={props.name}>{props.label}</label>\n            <span  className=\"form-error\">\n                <ErrorMessage name={props.name} />\n            </span>\n            <Field as={FormControl} name={props.name} type={props.type} className=\"form-input\" />\n        </span>\n    )\n}","import * as Yup from 'yup';\n\nexport const SignupSchema = Yup.object().shape({\n    firstName: Yup.string()\n        .min(3, 'Too Short!')\n        .max(20, 'Too Long!')\n        .required('Required'),\n    lastName: Yup.string()\n        .min(3, 'Too Short!')\n        .max(20, 'Too Long!')\n        .required('Required'),\n    userName: Yup.string()\n        .min(3, 'Too Short!')\n        .max(20, 'Too Long!')\n        .required('Required'),\n    email: Yup.string()\n        .email('Invalid email')\n        .required('Required'),\n    password: Yup.string()\n        .min(6, 'Too Short!')\n        .max(20, 'Too Long!')\n        .required('Required'),\n    confirmPassword: Yup.string().oneOf([Yup.ref('password'), ''], 'Passwords do not match')\n});\n\nexport const LoginSchema = Yup.object().shape({\n    userName: Yup.string()\n        .min(3, 'Too Short!')\n        .max(20, 'Too Long!')\n        .required('Required'),\n    password: Yup.string()\n        .min(6, 'Too Short!')\n        .max(20, 'Too Long!')\n        .required('Required'),\n});\n\nexport const ChangePasswordSchema = Yup.object().shape({\n    currentPassword: Yup.string()\n        .min(6, 'Too Short!')\n        .max(20, 'Too Long!')\n        .required('Required'),\n    newPassword: Yup.string()\n        .min(6, 'Too Short!')\n        .max(20, 'Too Long!')\n        .required('Required'),\n    confirmNewPassword: Yup.string()\n        .oneOf([Yup.ref('newPassword'), null], 'Passwords must match')\n})\n\nexport const ProjectSchema = Yup.object().shape({\n    name: Yup.string()\n        .min(3, \"Too Short!\")\n        .max(30, \"Too Long!\")\n        .required(\"Required\"),\n    description: Yup.string()\n        .min(3, \"Too Short!\")\n        .max(512, \"Too Long!\")\n        .required(\"Required\")\n});\n\nexport const IssueSchema = Yup.object().shape({\n    title: Yup.string()\n        .min(3, \"Too Short!\")\n        .max(30, \"Too Long!\")\n        .required(\"Required\"),\n    description: Yup.string()\n        .min(3, \"Too Short!\")\n        .max(512, \"Too Long!\")\n        .required(\"Required\")\n});","import React from 'react';\nimport { Formik, Form } from 'formik';\nimport { Link } from 'react-router-dom';\nimport { Row, Button } from 'react-bootstrap';\n\nimport TextInput from './inputs/TextInput/TextInput';\nimport { LoginSchema } from '../../utility/schema/validation'\n\nfunction LoginForm({ onSubmit, ...props }) {\n    return (\n        <Formik\n            initialValues={{ userName: \"\", password: \"\" }}\n            validationSchema={LoginSchema}\n            onSubmit={async (values, { setSubmitting }) => {\n                setSubmitting(true);\n                try {\n                    await onSubmit(values)\n                } catch (err) {\n                    console.log(err);\n                }\n                setSubmitting(false);\n            }}\n        >\n            {({ isSubmitting }) => (\n                <Form className=\"form\">\n                    <Row as=\"h3\" className=\"center-align heading\">Login</Row>\n\n                    <Row as=\"h5\" className=\"left-align subheading\">Login to your account</Row>\n                    <Row as=\"p\" className=\"left-align message\">Welcome! You must log in to your account to view and manage your projects with [insert issue tracker name here]!</Row>\n\n                    <Row className=\"mx-4\">\n                        <TextInput name=\"userName\" type=\"text\" label=\"Username\" />\n                    </Row>\n\n                    <Row className=\"mx-4\">\n                        <TextInput name=\"password\" type=\"password\" label=\"Password\" />\n                    </Row>\n\n                    {props.error && <div className=\"form-error\">{props.error.message}</div>}\n\n                    <Row className=\"my-3\">\n                        <Button variant=\"primary\" type=\"submit\" disabled={isSubmitting}>\n                            Login\n                        </Button>\n                    </Row>\n\n                    <Row as=\"p\" className=\"center-align message\">Don't have an account yet? Please <Link to=\"signup\">&nbsp;Sign up&nbsp;</Link> to continue.</Row>\n                </Form>\n            )}\n        </Formik>\n    )\n}\n\nexport default LoginForm;","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Container, Col, Row } from 'react-bootstrap';\nimport useAuth from '../../hooks/useAuth';\nimport LoginForm from '../../components/form/LoginForm';\n\nimport '../page.css';\n\nfunction LoginPage(props) {\n    const auth = useAuth();\n\n    const login = (credentials) => (\n        auth.login(credentials, (user) => {\n            console.log(\"Signed in as \" + user.userName + \"!\");\n        })\n    );\n\n    const fromState = props.location.state ? props.location.state.from : null;\n\n    if (auth.isLoading) return <div>Loading...</div>;\n    if (auth.user) return <Redirect to={fromState ? fromState.pathname : \"/\"} />;\n\n    return (\n        <Container fluid className=\"page\">\n            <Row className=\"form-container\">\n                <Col xs={12} sm={8} md={6} lg={5}>\n                    <LoginForm onSubmit={login} error={auth.error} />\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default LoginPage;","import React from 'react';\nimport { Formik, Form } from 'formik';\nimport { Link } from 'react-router-dom';\nimport { Row, Button, Col } from 'react-bootstrap';\nimport { SignupSchema } from '../../utility/schema/validation';\nimport TextInput from './inputs/TextInput/TextInput';\n\nimport './form.css';\n\nfunction SignupForm(props) {\n    return (\n        <Formik\n            initialValues={{ firstName: \"\", lastName: \"\", email: \"\", userName: \"\", password: \"\", confirmPassword: \"\" }}\n            validationSchema={SignupSchema}\n            onSubmit={async (values, form) => {\n                form.setSubmitting(true);\n                try {\n                    await props.onSubmit(values);\n                } catch (err) {\n                    console.log(err);\n                }\n                form.setSubmitting(false);\n            }}\n        >\n            {({ isSubmitting }) => (\n                <Form className=\"form\" autoComplete=\"false\">\n                    <Row as=\"h3\" lg={1} className=\"center-align heading\">Sign Up</Row>\n\n                    <Row as=\"h5\" className=\"left-align subheading\">Sign up for an account</Row>\n                    <Row as=\"p\" className=\"left-align message\">Sign up today and you can begin keeping track of all tasks and issues related to your projects with [insert issue tracker name here]!</Row>\n\n                    <Row className=\"mx-4\">\n                        <Col xs={12} md={6}>\n                            <TextInput name=\"firstName\" type=\"text\" label=\"First name\" />\n                        </Col>\n                        <Col xs={12} md={6}>\n                            <TextInput name=\"lastName\" type=\"text\" label=\"Last name\" />\n                        </Col>\n                    </Row>\n\n                    <Row className=\"mx-4\">\n                        <Col xs={12} md={6}>\n                            <TextInput name=\"userName\" type=\"text\" label=\"User name\" />\n                        </Col>\n                        <Col xs={12} md={6}>\n                            <TextInput name=\"email\" type=\"text\" label=\"Email\" />\n                        </Col>\n                    </Row>\n\n                    <Row className=\"mx-4\">\n                        <Col xs={12} md={6}>\n                            <TextInput name=\"password\" type=\"password\" label=\"Password\" />\n                        </Col>\n                        <Col xs={12} md={6}>\n                            <TextInput name=\"confirmPassword\" type=\"password\" label=\"Confirm Password\" />\n                        </Col>\n                    </Row>\n\n                    <Row className=\"my-3\">\n                        <Button variant=\"primary\" type=\"submit\" disabled={isSubmitting}>Sign up</Button>\n                    </Row>\n                    \n                    <Row as=\"p\" className=\"center-align message\">Already have an account? Please <Link to=\"login\">&nbsp;Log in&nbsp;</Link> to continue.</Row>\n                </Form>\n            )}\n        </Formik>\n    )\n}\n\nexport default SignupForm;","import React, { useState } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { Redirect } from 'react-router-dom';\n\nimport SignupForm from '../../components/form/SignupForm';\nimport useAuth from '../../hooks/useAuth';\n\nimport '../page.css';\n\nfunction SignupPage() {\n    const auth = useAuth();\n    const [redirect, setRedirect] = useState(false); \n\n    const signup = async (userInfo) => {\n        await auth.signup(userInfo, (data) => {\n            console.log(data)\n        });\n        setRedirect(true);\n    }\n\n    return (\n        auth.isLoading ? \n            <div>Loading...</div> :\n            (auth.user || redirect) ?\n                <Redirect to=\"/\" /> :\n                <Container fluid className=\"page\">\n                    <Row className=\"form-container\">\n                        <Col  xs={12} sm={10} md={8} xl={6}>\n                            <SignupForm onSubmit={signup} />\n                        </Col>\n                    </Row>\n                </Container>\n    )\n}\n\nexport default SignupPage;","import React from 'react';\nimport { Button, Container } from 'react-bootstrap';\n\nimport LinkButton from '../../components/display/Button/LinkButton';\nimport './Dashboard.css';\n\nfunction Dashboard() {\n\n    return (\n        <Container className=\"tile-container\">\n            <LinkButton to=\"/projects\" className=\"tile\">Projects&Issues</LinkButton>\n            <Button className=\"tile\">Reports (Coming Soon)</Button>\n        </Container>       \n    )\n}\n\nexport default Dashboard;","import React from 'react';\nimport { Nav } from 'react-bootstrap';\n\nimport LinkButton from '../../display/Button/LinkButton';\nimport NavBar from '../../display/NavBar/NavBar';\n\nfunction ProjectsNavBar() {\n    return (\n        <NavBar title=\"Projects\" bg=\"light\" render={() => (\n            <Nav>\n                <LinkButton to=\"/projects/new\" className=\"m-sm-1\">Add New Project</LinkButton>\n            </Nav>\n        )}/>\n    )\n}\n\nexport default ProjectsNavBar;","import React from 'react';\n\nfunction ListItem({ item, render }) {\n    return (\n        <div className=\"list-item\" >{render(item)}</div>\n    )\n}\n\nexport default ListItem;","import React, { useState } from 'react';\nimport ListItem from './ListItem';\n\nfunction ListItemGroup({ name, value, items, render }) {\n    const [collapse, setCollapse] = useState(false);\n    return (\n        <div className={\"list-item-group \" + name }>\n            <div className={\"group-header \" + (collapse ? \"collapsed\" : \"\")} onClick={() => setCollapse(prev => !prev)}>{value}</div>\n            {\n                collapse ? null :\n                (items && items.length > 0) ? \n                    items.map((item, idx) => <ListItem key={`${value}-${idx}`} item={item} render={render} />)\n                :\n                    <div className=\"empty-group-message\">There are no items to display for this group</div>\n            }\n        </div>\n    )\n}\n\nexport default ListItemGroup;","import { mapValues, pickBy, includes } from 'lodash';\n\nexport const useFilteredItems = (items, filter = null, searchText = \"\", searchKeys = []) => {\n    if(!filter) return items;\n    \n    // Maps property keys of 'filter' prop to an array containing the values that are not being filtered out\n    const allowedValues = mapValues(filter, (obj) => {\n        const selectedFilters = pickBy(obj, (value) => value === true);\n        return Object.keys(selectedFilters);\n    });\n    \n    const filteredItems = items && items.length > 0 && items.filter(item => {\n        const allowedKeys = Object.keys(allowedValues);\n        let isAllowed = true;\n        // Filter out items based on the current filter\n        for(let key of allowedKeys) {\n            if(includes(allowedValues[key], item[key]) === false) {\n                isAllowed = false;\n            }\n        }\n        // Also, filter out items not matching the current search (item['searchKeys'] !== 'searchText')\n        if(isAllowed && searchText !== \"\") {\n            for(let key of searchKeys) {\n                if(includes(item[key].toLowerCase(), searchText.toLowerCase()) === true) {\n                    isAllowed = true;\n                    break;\n                } else isAllowed = false;\n            }\n        }\n        return isAllowed;\n    });\n\n    return filteredItems ? filteredItems : items;\n}","import { groupBy } from 'lodash';\n\nexport const useGroupedItems = (items, groupKey = null) => {\n    if(!groupKey) return items;\n    const groupedItems = groupBy(items, (value) => value[groupKey]);\n    return groupedItems;\n}\n","import React from 'react';\n\nimport ListItem from './ListItem'\nimport ListItemGroup from './ListItemGroup';\nimport './List.css';\nimport { useFilteredItems } from '../../../hooks/useFilteredItems';\nimport { useGroupedItems } from '../../../hooks/useGroupedItems';\n\n\nfunction List({ listItems, groupKey = null, groupValues = null, orderBy = 'asc', filter = null, searchText = \"\", searchKeys = [], render }) {\n\n    const filteredItems = useFilteredItems(listItems, filter, searchText, searchKeys);\n    const groupedItems = useGroupedItems(filteredItems, groupKey);\n\n    const listComponents = () => {\n        let listComponentArray;\n        if(groupKey && groupValues) {\n            const groupComponents = [];\n            groupValues.forEach(value => {\n                const values = groupedItems[value];\n                groupComponents.push(<ListItemGroup key={`${groupKey}=${value}`} name={groupKey} value={value} items={values} render={render}/>);\n            })\n            listComponentArray = orderBy === 'desc' ? groupComponents.reverse() : groupComponents;\n        } else {\n            listComponentArray = filteredItems && filteredItems.map((item, idx) => <ListItem item={item} key={idx} keyValue={idx} render={render} />);\n        }\n\n        return listComponentArray;\n    }\n\n    return (\n        <div className=\"list-container\">\n            { listComponents() }\n        </div>\n    )\n}\n\nexport default List;","import React from 'react';\nimport { Card, Dropdown, DropdownButton, ButtonGroup } from 'react-bootstrap';\nimport LinkButton from '../../display/Button/LinkButton';\n\nfunction ProjectListOverviewCard({ project, onDelete, onEdit, onAddCollaborator }) {\n    return (\n        <Card className=\"project-list-card\">\n            <Card.Body className=\"left-side\">\n                <Card.Title>{project.name}</Card.Title>\n                <Card.Text>\n                    {project.description}\n                </Card.Text>\n                <ButtonGroup className=\"buttons\">\n                    <LinkButton variant=\"primary\" to={`/projects/${project.id}`} >View Project</LinkButton>\n                    <DropdownButton variant=\"secondary\" title=\"Settings\">\n                        <Dropdown.Item onClick={() => onEdit(project.id)}>Edit Project</Dropdown.Item>\n                        <Dropdown.Item onClick={() => onDelete({ projectId: project.id })}>Delete Project</Dropdown.Item>\n                        <Dropdown.Item onClick={() => onAddCollaborator({ projectId: project.id })}>Add Collaborator</Dropdown.Item>\n                    </DropdownButton>\n                </ButtonGroup>\n            </Card.Body>\n\n            <Card.Body className=\"right-side\" style={{ borderLeft: '1px solid black' }}>\n                <Card.Title>Issue Details</Card.Title>\n                <Card.Text>\n                    {\"There are \" + project.issues.length + \" issues related to this project\"}\n                </Card.Text>\n                <ButtonGroup className=\"buttons\">\n                    <LinkButton variant=\"primary\" to={`/projects/${project.id}/issues`}>View Issues</LinkButton>\n                    <LinkButton variant=\"secondary\" to={`/projects/${project.id}/issues/new`}>Add New Issue</LinkButton>\n                </ButtonGroup>\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default ProjectListOverviewCard;","import React from 'react';\n\nimport List from '../../display/List/List';\nimport ProjectListOverviewCard from './ProjectListOverviewCard';\nimport './ProjectList.css';\n\nfunction ProjectList({ projectList, ...props }) {\n    return projectList ? \n        <List listItems={projectList} render={item => (\n            <ProjectListOverviewCard project={item} {...props} />\n        )}/> : \n        \"No projects\"\n}\n\nexport default ProjectList;","import React from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport { Row, Col, Button } from 'react-bootstrap';\nimport { ProjectSchema } from '../../utility/schema/validation';\n\nfunction NewProjectForm({ onSubmit }) {\n    return (\n        <Formik\n            initialValues={{ name: \"\", description: \"\" }}\n            validationSchema={ProjectSchema}\n            onSubmit={async (values, { setSubmitting }) => {\n                setSubmitting(true);\n                try {\n                    await onSubmit(values)\n                } catch (err) {\n                    console.log(err);\n                }\n                setSubmitting(false);\n            }}\n        >\n            {({ isSubmitting }) => (\n                <Form className=\"form\">\n                    <Row as=\"h3\">Create New Project</Row>\n\n                    <Row>\n                        <Col>\n                            <label htmlFor=\"name\">Project Name</label>\n                        </Col>\n                        <Col>\n                            <Field name=\"name\" type=\"text\" className=\"form-input\" />\n                            <ErrorMessage name=\"name\" className=\"form-error\" />\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col>\n                            <label htmlFor=\"description\">Description</label>\n                        </Col>\n                        <Col>\n                            <Field name=\"description\" as=\"textarea\" className=\"form-input\" />\n                            <ErrorMessage name=\"description\" className=\"form-error\" />\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Button variant=\"primary\" type=\"submit\" disabled={isSubmitting}>\n                            Create Project\n                        </Button>\n                    </Row>\n\n                </Form>\n            )}\n        </Formik>\n    )\n}\n\nexport default NewProjectForm;","import React, { useState, createContext } from 'react';\n\nexport const notificationBannerContext = createContext({ });\n\nexport default function ProvideNotificationBanner(props) {\n    const notificationBanner = useProvideNotificationBanner();\n\n    return (\n        <notificationBannerContext.Provider value={notificationBanner}>\n            {props.children}\n        </notificationBannerContext.Provider>\n    )\n}\n\nfunction useProvideNotificationBanner() {\n    const [text, setText] = useState(\"Notification Banner\");\n    const [show, setShow] = useState(false);\n\n    const showNotificationWithText = (value) => {\n        setText(value);\n        setShow(true);\n        setTimeout(() => { \n            setShow(false);\n            setText(\"\");\n        }, 5000);\n    }\n\n    return {\n        text,\n        show,\n        showNotificationWithText\n    }\n}","import { useContext } from \"react\";\nimport { notificationBannerContext } from \"../contexts/NotificationBannerContext\";\n\nexport default function useNotificationBanner() {\n    return useContext(notificationBannerContext);\n}","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\n\nimport useAuth from '../../hooks/useAuth';\nimport NewProjectForm from '../../components/form/NewProjectForm';\nimport useNotificationBanner from '../../hooks/useNotificationBanner';\n\nfunction NewProjectPage(props) {\n    const auth = useAuth();\n    const notificationBanner = useNotificationBanner();\n    const [redirect, setRedirect] = useState(false);\n\n    const createNewProject = async (newProject) => {\n        console.log(\"Creating project with token \" + auth.user.token);\n        await props.onSubmit(newProject);\n        notificationBanner.showNotificationWithText(\"Project successfully created!\");\n        setRedirect(true);\n    }\n\n    return (\n        redirect === true ? \n        <Redirect to=\"/projects\"/> :\n        <Container fluid className=\"page\">\n            <NewProjectForm onSubmit={createNewProject} />\n        </Container>\n    )\n}\n\nexport default NewProjectPage;","import React, { useState, useRef } from 'react';\nimport './Dropzone.css';\n\nfunction Dropzone({ name, disabled, onFilesAdded }) {\n    const [highlight, setHighlight] = useState(false);\n    const fileInputRef = useRef(null);\n\n    const openFileDialog = () => {\n        if(disabled) return;\n        fileInputRef.current.click();\n    }\n\n    const handleFilesAdded = (e) => {\n        if(disabled) return;\n        const files = e.target.files;\n        if(onFilesAdded) {\n            const array = fileListToArray(files);\n            onFilesAdded(array);\n        }\n    }\n\n    const handleDragOver = (e) => {\n        e.preventDefault();\n        setHighlight(true);\n    }\n\n    const handleDragLeave = () => {\n        setHighlight(false);\n    }\n\n    const handleDrop = (e) => {\n        e.preventDefault();\n        if(disabled) return;\n\n        const files = e.dataTransfer.files;\n        if(onFilesAdded) {\n            const array = fileListToArray(files);\n            onFilesAdded(array);\n        }\n\n        setHighlight(false);\n    }\n\n    const fileListToArray = (fileList) => {\n        const array = [];\n        for (let i = 0; i < fileList.length; i++) {\n            array.push(fileList.item(i));\n        }\n        return array;\n    }\n\n    return (\n        <div \n            className={`dropzone ${highlight ? 'highlight' : ''}`}\n            onDragOver={handleDragOver}\n            onDragLeave={handleDragLeave}\n            onDrop={handleDrop}\n            onClick={openFileDialog}\n            style={{ cursor: disabled ? 'default' : 'pointer' }}\n        >\n            <input \n                ref={fileInputRef}\n                name={name}\n                className=\"file-input\"\n                type=\"file\"\n                multiple\n                onChange={handleFilesAdded}\n            />\n            <img \n                alt=\"upload\"\n                className=\"icon\"\n                src=\"/upload_file_black_24dp.svg\"\n            />\n            <span>Upload Files</span>\n        </div>\n    )\n}\n\nexport default Dropzone;","import React, { useEffect, useState } from 'react';\nimport { Button, ProgressBar } from 'react-bootstrap';\nimport Dropzone from '../Dropzone/Dropzone';\n\nimport './Upload.css';\n\nconst initialUpload = {\n    files: [],\n    isUploading: false,\n    progress: {},\n    successful: false\n};\n\nfunction Upload({ onChange, sendRequest, onClose, setUploadCallbacks, ...props }) {\n    const [upload, setUpload] = useState(initialUpload);\n\n    useEffect(() => {\n        setUploadCallbacks && setUploadCallbacks(() => uploadCallbacks);\n    }, [setUploadCallbacks])\n\n    const handleFilesAdded = (files) => {\n        setUpload(prev => {\n            const updatedFiles = prev.files.concat(files);\n            onChange && onChange(updatedFiles);\n            return {\n                ...prev,\n                files: updatedFiles\n            }\n        });\n    }\n\n    const handleFilesRemoved = (fileIndex) => {\n        setUpload(prev => {\n            console.log(\"removing file:\", fileIndex)\n            const updatedFiles = prev.files.slice();\n            updatedFiles.splice(fileIndex, 1);\n            return {\n                ...prev,\n                files: updatedFiles\n            };\n        });\n    }\n\n    // Only when clicking the upload button in renderActions, else upload handled externally\n    const uploadFiles = async () => {\n        setUpload(prev => ({ ...prev, progress: {}, isUploading: true }));\n\n        const promises = [];\n        console.log(upload);\n        let callbacks;\n        upload.files && upload.files.forEach(file => {\n            console.log(\"sending request from upload\")\n            callbacks = uploadCallbacks(file);\n            const data = new FormData();\n            data.append('attachments', file);\n            promises.push(sendRequest(data, callbacks.progressCb));\n        });\n\n        try {\n            const attachmentHandles = await Promise.all(promises)\n                .then(responses => responses.map(response => response.data.id))\n                .then(data => {\n                    callbacks.successCb();\n                    return data;\n                })\n                .catch(err => callbacks.failureCb(err));\n\n            props.onComplete(attachmentHandles);\n        } catch(err) {\n            callbacks.failureCb(err);\n        }\n    }\n\n    const renderActions = () => {\n        if(!sendRequest) return null;\n\n        if(upload.successful) {\n            return (\n                <Button\n                    onClick={() => setUpload(initialUpload)}\n                >\n                    Clear\n                </Button>\n            )\n        } else {\n            return (\n                <Button \n                    disabled={!upload.files || upload.files.length < 0 || upload.isUploading}\n                    onClick={uploadFiles}\n                >\n                    Upload\n                </Button>\n            )\n        }\n    }\n\n    const uploadCallbacks = (file) => {\n        setUpload(prev => ({ ...prev, progress: {}, isUploading: true }));\n        return {\n            progressCb: (percentCompleted) => {\n                if(percentCompleted && percentCompleted !== 100) {\n                    console.log(\"isuploading\")\n                    setUpload(prev=> {\n                        const copy = { ...prev.progress }\n                        copy[file.name] = {\n                            state: \"pending\",\n                            percentage: percentCompleted\n                        }\n                        return { ...prev, progress: copy };\n                    });\n                } else if(percentCompleted) {\n                    console.log(\"issuccessful\")\n                    setUpload(prev=> {\n                        const copy = { ...prev.progress }\n                        copy[file.name] = {\n                            state: \"done\",\n                            percentage: percentCompleted\n                        }\n                        return { ...prev, progress: copy }\n                    });\n                }\n            },\n            successCb: () => { \n                console.log(\"calling success\");\n                setUpload(prev => ({...prev, successful: true, uploading: false }))\n            },\n            failureCb: (err) => { \n                console.log(\"calling failure\", err);\n                setUpload(prev=> ({ ...prev, successful: false, uploading: false }))\n            }\n        }\n    }\n\n    const renderProgress = (file) => {\n        const uploadProgress = upload.progress && upload.progress[file.name];\n        if(upload.isUploading || upload.successful) {\n            return (\n                <div className=\"progress-wrapper\">\n                    <ProgressBar now={uploadProgress ? uploadProgress.percentage : 0} />\n                    <img \n                        className=\"successful-icon\"\n                        alt=\"successful\"\n                        src=\"/file_download_done_black_24dp.svg\"\n                        style={{\n                            opacity:\n                                uploadProgress && uploadProgress.state === \"done\" ? 0.5 : 0\n                        }}\n                    />\n                </div>\n            )\n        }\n    }\n\n    return (\n        <div className=\"upload\">\n            <div className=\"header\">\n                <span className=\"title\">Upload Files</span>\n                { onClose &&\n                    <button \n                        className=\"close-upload link\"\n                        onClick={() => onClose()}\n                    >\n                        X\n                    </button>\n                }\n            </div>\n            <div className=\"content\">\n                <div>\n                    <Dropzone \n                        name={props.name}\n                        onFilesAdded={handleFilesAdded}\n                        disabled={upload.isUploading || upload.successful}\n                    />\n                </div>\n                <div className=\"files\">\n                    {\n                        upload.files && upload.files.map((file, idx) => (\n                            <div className=\"file-progress\" key={`file.name-${idx}`}>\n                                <span className=\"filename\">{file.name}</span>\n                                {renderProgress(file)}{\" \"}\n                                <button \n                                    className=\"remove-attachment link\"\n                                    onClick={() => handleFilesRemoved(idx)}\n                                    style={{ \n                                        display: upload.isUploading || upload.successful ? \"none\" : \"inline\"\n                                    }}\n                                >\n                                    X\n                                </button>\n                            </div>\n                        ))\n                    }\n                </div>\n            </div>\n            <div className=\"actions\">{renderActions()}</div>\n        </div>\n    );\n}\n\nexport default Upload;","import React, { useState } from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport { Row, Col, Button } from 'react-bootstrap';\n\nimport Upload from './inputs/Upload/Upload';\nimport { IssueSchema } from '../../utility/schema/validation';\n\nfunction NewIssueForm({ onSubmit, collaborators }) {\n    const [uploadCallbacks, setUploadCallbacks] = useState({\n        progressCb: (percentCompleted) => { console.log(percentCompleted) },\n        successCb: () => { console.log(\"Successful upload\") },\n        failureCb: () => { console.log(\"Failed upload\") }\n    });\n\n    return (\n        <Formik\n            initialValues={{ title: \"\", description: \"\", category: \"other\", priority: \"regular\", status: \"unassigned\", assigneeId: \"\" }}\n            validationSchema={IssueSchema}\n            onSubmit={async (values, { setSubmitting }) => {\n                setSubmitting(true);\n                try {\n                    const newIssue = values;\n\n                    await onSubmit(newIssue, uploadCallbacks);\n\n                } catch (err) {\n                    console.log(err);\n                }\n                setSubmitting(false);\n            }}\n        >\n            {({ isSubmitting, setFieldValue, submitForm, resetForm }) => (\n                <Form className=\"form\" id=\"new-issue-form\">\n                    <Row as=\"h3\">Add New Issue</Row>\n\n                    <Row>\n                        <Col>\n                            <label htmlFor=\"title\">Issue Title</label>\n                        </Col>\n                        <Col>\n                            <Field name=\"title\" type=\"text\" className=\"form-input\" />\n                            <span className=\"form-error\">\n                                <ErrorMessage name=\"title\" />\n                            </span>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col>\n                            <label htmlFor=\"description\">Description</label>\n                        </Col>\n                        <Col>\n                            <Field name=\"description\" as=\"textarea\" className=\"form-input\" />\n                            <span className=\"form-error\">\n                                <ErrorMessage name=\"description\" className=\"form-error\" />\n                            </span>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col>\n                            <label htmlFor=\"category\">Category</label>\n                        </Col>\n                        <Col>\n                            <Field name=\"category\" as=\"select\" className=\"form-input\">\n                                <option value=\"bug\">Bug</option>\n                                <option value=\"feature\">Feature</option>\n                                <option value=\"task\">Task</option>\n                                <option value=\"other\">Uncategorized</option>\n                            </Field>\n                            <span className=\"form-error\">\n                                <ErrorMessage name=\"category\" className=\"form-error\" />\n                            </span>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col>\n                            <label htmlFor=\"priority\">Priority</label>\n                        </Col>\n                        <Col>\n                            <Field name=\"priority\" as=\"select\" className=\"form-input\">\n                                <option value=\"trivial\">Trivial</option>\n                                <option value=\"low\">Low</option>\n                                <option value=\"regular\">Regular</option>\n                                <option value=\"high\">High</option>\n                                <option value=\"critical\">Critical</option>\n                            </Field>\n                            <span className=\"form-error\">\n                                <ErrorMessage name=\"priority\" className=\"form-error\" />\n                            </span>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col>\n                            <label htmlFor=\"attachments\">Attachments</label>\n                        </Col>\n                        <Col>\n                            <Field \n                                name=\"attachments\"\n                                as={Upload} \n                                onChange={val => setFieldValue('attachments', val)}\n                                setUploadCallbacks={setUploadCallbacks}\n                                className=\"form-input\" \n                            />\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col>\n                            <label htmlFor=\"assign\">Assign</label>\n                        </Col>\n                        <Col>\n                            <Field name=\"assigneeId\" as=\"select\" className=\"form-input\" >\n                                <option value=\"\">Unassigned</option>\n                                {\n                                    collaborators.map(user => <option key={user.id} value={user.id}>{user.userName}</option>)\n                                }\n                            </Field>\n                            <span className=\"form-error\">\n                                <ErrorMessage name=\"assign\" className=\"form-error\" />\n                            </span>\n                        </Col>\n                    </Row>\n\n                    <Field name=\"createAnother\" type=\"checkbox\" style={{ display: \"none\" }}></Field>\n\n                    <Row>\n                        <Button variant=\"primary\" type=\"submit\" disabled={isSubmitting}>\n                            Add Issue\n                        </Button>\n                        <Button \n                            variant=\"outline-primary\" \n                            className=\"mx-1\" \n                            disabled={isSubmitting} \n                            onClick={async () => {\n                                setFieldValue(\"createAnother\", true);\n                                await submitForm(); \n                                resetForm();\n                            }}\n                        >\n                            Add And Create Another\n                        </Button>\n                    </Row>\n\n                </Form>\n            )}\n        </Formik>\n    )\n}\n\nexport default NewIssueForm;","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\n\nimport NewIssueForm from '../../components/form/NewIssueForm';\nimport useResource from '../../hooks/useResource';\nimport useAuth from '../../hooks/useAuth';\nimport useNotificationBanner from '../../hooks/useNotificationBanner';\n\nfunction NewIssuePage(props) {\n    const auth = useAuth();\n    const notificationBanner = useNotificationBanner();\n    const [collaborators, setCollaborators] = useResource(\n        `/api/projects/${props.match.params.projectId}/collaborators`,\n        auth.user ? auth.user.token : null\n    );\n    const [redirect, setRedirect] = useState(false);\n\n    const addIssueAttachment = async (issueId, attachmentData, cb) => {\n        console.log(\"in new issue page\")\n        return props.onCreateAttachmentRequest(props.match.params.projectId, issueId, attachmentData, cb);\n    }\n\n    const addNewIssue = async (newIssue, cb) => {\n        const attachments = newIssue.attachments;\n        delete newIssue.attachments;\n\n        const createAnother = newIssue.createAnother;\n        delete newIssue.createAnother;\n        \n        const issue = await props.onSubmit(props.match.params.projectId, newIssue);\n        \n        let callbacks = cb(null);\n        const promises = [];\n        attachments && attachments.forEach(file => {\n            callbacks = cb(file);\n            const data = new FormData();\n            data.append('attachments', file);\n            promises.push(addIssueAttachment(issue.id, data, callbacks.progressCb));\n        })\n\n        const attachmentHandles = await Promise.all(promises)\n            .then(responses => responses.map(response => response.data.id))\n            .then(data => {\n                callbacks.successCb();\n                return data;\n            })\n            .catch(err => callbacks.failureCb(err));\n\n        props.onAddAttachment(props.match.params.projectId, issue.id, attachmentHandles);\n\n        notificationBanner.showNotificationWithText(\"Issue successfully added!\");\n\n        setRedirect(createAnother ? false : true);\n    }\n\n    return (\n        redirect === true ? \n            <Redirect to={`/projects/${props.match.params.projectId}/issues`} /> :\n            <Container fluid className=\"page\">\n                <NewIssueForm onSubmit={addNewIssue} collaborators={collaborators.data}/>\n            </Container>\n    )\n}\n\nexport default NewIssuePage;","import React from 'react';\nimport { Nav } from 'react-bootstrap';\n\nimport LinkButton from '../../display/Button/LinkButton';\nimport NavBar from '../../display/NavBar/NavBar';\n\nfunction IssueNavBar({ render }) {\n    return (\n        <NavBar title=\"Issues\" bg=\"light\" expand=\"lg\" render={() => (\n            <Nav>\n                {render()}\n                <LinkButton to=\"issues/new\" variant=\"outline-dark\" className=\"m-sm-1\">Add New Issue</LinkButton>\n            </Nav>\n        )}/>\n    )\n}\n\nexport default IssueNavBar;","import React from 'react';\nimport { useFilteredItems } from '../../../hooks/useFilteredItems';\nimport { useGroupedItems } from '../../../hooks/useGroupedItems';\n\nimport { Table } from 'react-bootstrap';\n\nimport './TableList.css';\n\nconst MyTable = (props) => (\n    <Table bordered striped responsive className=\"table\">\n        <thead className=\"table-header\">\n            <tr className=\"table-header-group\"><td colSpan=\"8\">{props.groupName}</td></tr>\n            <tr key=\"table-header\">\n                {\n                    props.headerKeys.map(key => <th key={`table-header-${key}`}>{key}</th>)\n                }\n                <th></th>\n            </tr>\n        </thead>\n        <tbody className=\"table-body\">\n            {\n                props.data.map(item => (\n                    <tr key={item.id}>\n                        {\n                            props.headerKeys.map(key => (\n                                <td key={`${item.id}-${key}`}>{item[key]}</td>\n                            ))\n                        }\n                        <td key={`${item.id}-options`}>\n                            {props.children ? props.children(item) : null}\n                        </td>\n                    </tr>\n                ))\n            }\n        </tbody>\n    </Table>\n)\n\nfunction TableList({ \n    listItems, \n    headerKeys, \n    groupKey = null, \n    groupValues = null, \n    orderBy = 'asc', \n    filter = null, \n    searchText = \"\", \n    searchKeys = [],\n    renderButtons\n}) {\n    const filteredItems = useFilteredItems(listItems, filter, searchText, searchKeys);\n    const groupedItems = useGroupedItems(filteredItems, groupKey);\n\n    let groupNames = Object.keys(groupedItems);\n\n    return groupedItems && (groupNames.length > 0) ? (\n        groupNames.map(group => \n            <MyTable headerKeys={headerKeys} data={groupedItems[group]} groupName={group + 's'} >\n                {renderButtons}\n            </MyTable>\n        )\n    ) : (\n        <MyTable headerKeys={headerKeys} data={groupedItems} groupName={\"All\"} >\n            {renderButtons}\n        </MyTable>\n    )\n}\n\n\nexport default TableList;","import React from 'react';\nimport { Button, Dropdown, DropdownButton, ButtonGroup, ButtonToolbar } from 'react-bootstrap';\nimport LinkButton from '../../display/Button/LinkButton';\n\nconst IssueListButtonToolbar = ({ projectId, issue, onDelete, onAssign, onStart, onClose }) => {\n    const handleDeleteIssue = () => onDelete({ projectId: projectId, issueId: issue.id });\n    const handleAssignIssue = () => onAssign({ projectId: projectId, issueId: issue.id });\n    const handleStartIssue = () => onStart({ projectId: projectId, issueId: issue.id });\n    const handleCloseIssue = () => onClose({ projectId: projectId, issueId: issue.id });\n    const handleAdvanceIssueClick = (e) => {\n        if(issue.status === \"unassigned\") return handleAssignIssue(e);\n        if(issue.status === \"open\") return handleStartIssue(e);\n        if(issue.status === \"inprogress\") return handleCloseIssue(e);\n    }\n\n    const advanceIssueButtonText = () => {\n        if(issue.status === \"unassigned\") return \"Assign\"\n        if(issue.status === \"open\" || issue.status === \"inprogress\") return \"Advance\"\n        if(issue.status === \"resolved\") return \"Resolved\";\n        return \"Closed\";\n    }\n\n    return (\n        <ButtonToolbar style={{width: '100%'}}>\n            <ButtonGroup>\n                <LinkButton variant=\"primary\" to={`/projects/${projectId}/issues/${issue.id}`}>View</LinkButton>\n                <Button \n                    variant=\"primary\" \n                    onClick={handleAdvanceIssueClick}\n                    disabled={issue.status === \"resolved\" || issue.status === \"closed\"}\n\n                >\n                    {advanceIssueButtonText()}\n                </Button>\n                <DropdownButton as={ButtonGroup} variant=\"secondary\" title=\"Settings\">\n                    <Dropdown.Item >Edit Issue</Dropdown.Item>\n                    <Dropdown.Item onClick={handleDeleteIssue}>Delete Issue</Dropdown.Item>\n                </DropdownButton>\n            </ButtonGroup>\n        </ButtonToolbar>\n    )\n}\n\nexport default IssueListButtonToolbar;","import React from 'react';\nimport { Card } from 'react-bootstrap';\nimport IssueListButtonToolbar from './IssueListButtonToolbar';\n\nfunction IssueListOverviewCard({ projectId, issue, ...props }) {\n    return (\n        <Card style={{ height: '100%', width: '100%', display: 'flex', flexDirection: 'row', alignItems: \"center\" }}>\n            <Card.Body style={{ flex: 5 }}>\n                <Card.Title>{issue.title}</Card.Title>\n                <Card.Text>\n                    {issue.description}\n                </Card.Text>\n            </Card.Body>\n\n            <Card.Body style={{ flex: 1, height: \"100%\", borderLeft: '1px solid black' }}>\n                <Card.Title>Category</Card.Title>\n                <Card.Text>\n                    {issue.category}\n                </Card.Text>\n            </Card.Body>\n\n            <Card.Body style={{ flex: 1, borderLeft: '1px solid black' }}>\n                <Card.Title>Priority</Card.Title>\n                <Card.Text>\n                    {issue.priority}\n                </Card.Text>\n            </Card.Body>\n\n            <Card.Body style={{ flex: 1, borderLeft: '1px solid black' }}>\n                <Card.Title>Status</Card.Title>\n                <Card.Text>\n                    {issue.status}\n                </Card.Text>\n            </Card.Body>\n\n            <Card.Body style={{ flex: 1, borderLeft: '1px solid black' }}>\n                <Card.Title>Assigned</Card.Title>\n                <Card.Text>\n                    {issue.assignee ? issue.assignee : \"None\"}\n                </Card.Text>\n            </Card.Body>\n\n            <Card.Body style={{ flex: 2, height: \"100%\", borderLeft: '1px solid black' }}>\n                <IssueListButtonToolbar \n                    projectId={projectId} issue={issue} {...props}\n                />\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default IssueListOverviewCard;","import React from 'react';\nimport TableList from '../../display/TableList/TableList';\nimport List from '../../display/List/List';\nimport IssueListOverviewCard from './IssueListOverviewCard';\nimport IssueListButtonToolbar from './IssueListButtonToolbar';\n\nconst issueDisplayParameters = [\"title\", \"category\", \"priority\", \"status\", \"assignee\"];\n\nconst groups = { \n    priority: ['trivial', 'low', 'regular', 'high', 'critical'],\n    category: ['other', 'task', 'feature', 'bug'],\n    status: ['closed', 'resolved', 'inprogresss', 'open', 'unassigned'] \n}\n\nfunction IssueList({ projectId, issueList, groupBy, orderBy, filter, searchText, searchKeys, ...props }) {\n    return issueList && issueList.length > 0 ?\n        (props.viewAs === '2' ? \n            <TableList \n                listItems={issueList} \n                headerKeys={issueDisplayParameters}\n                groupKey={groupBy}\n                groupValues={groups[groupBy]}\n                orderBy={orderBy}\n                filter={filter}\n                searchText={searchText}\n                searchKeys={searchKeys}\n                renderButtons={item => <IssueListButtonToolbar projectId={projectId} issue={item} {...props} />}\n            /> : <List\n                listItems={issueList} \n                groupKey={groupBy}\n                groupValues={groups[groupBy]}\n                orderBy={orderBy}\n                filter={filter}\n                searchText={searchText}\n                searchKeys={searchKeys}\n                render={item => <IssueListOverviewCard projectId={projectId} issue={item} {...props} />}\n            />\n        )\n        : \n        <div className=\"empty-list-message\">\n            <span>There are currently no issues to display for this project. </span> \n            <a href=\"issues/new\">Click here </a> \n            <span>to create an issue.</span>\n        </div>\n}\n\nexport default IssueList;","import React, { useState } from 'react';\nimport { Dropdown, DropdownButton, ButtonGroup } from 'react-bootstrap';\nimport './IssueFilterControl.css';\n\nfunction Checkmark({ checked, name, id, onClick }) {\n    return (\n        <div className=\"checkmark\" id={id} name={name} onClick={onClick}>\n            {checked ? \"\\u2713\" : \"\"}\n        </div>\n    )\n}\n\nfunction IssueFilterControl(props) {\n    const [isOpen, setOpen] = useState(false);\n\n    const toggleShow = (open, event, meta) => {\n        if(meta.source !== \"select\") setOpen(open);\n    }\n\n    const handleSelectGroup = (group) => {\n        props.onSelect(\"group\", group);\n    }\n\n    const handleSelectOrder = (order) => {\n        props.onSelect(\"order\", order);\n    }\n\n    const handleSelectFilter = (filter) => {\n        const [filterKey, filterValue] = filter.split(\" \");\n        const newValues = { ...props.filters[filterKey] };\n        newValues[filterValue] = !newValues[filterValue];\n        const filters = { ...props.filters, [filterKey]: newValues };\n        props.onSelect(\"filter\", filters);\n    }\n\n    const setAllFiltersTo = (key, newValue) => {\n        const filterKeys = Object.keys(props.filters);\n        const filters = { ...props.filters };\n        if(key === \"\") {\n            filterKeys.forEach(filterKey => {\n                Object.keys(props.filters[filterKey]).forEach(value => {\n                    filters[filterKey][value] = newValue;\n                });\n            });\n        } else {\n            Object.keys(props.filters[key]).forEach(value => {\n                filters[key][value] = newValue;\n            });\n        }\n        props.onSelect(\"filter\", filters);\n    }\n\n    const checkAllFilters = (key = \"\") => { setAllFiltersTo(key, true); }\n    const uncheckAllFilters = (key = \"\") => { setAllFiltersTo(key, false); }\n\n    const isCleared = (key = \"\") => {\n        const filters = { ...props.filters };\n        let cleared = true;\n        if(key === \"\") {\n            const filterKeys = Object.keys(props.filters);\n            filterKeys.forEach(filterKey => {\n                Object.keys(props.filters[filterKey]).forEach(value => {\n                    if(filters[filterKey][value] === true) cleared = false;\n                });\n            });\n        } else {\n            Object.keys(props.filters[key]).forEach(value => {\n                if(filters[key][value] === true) cleared = false;\n            });\n        }\n        return cleared;\n    }\n\n    const handleToggleAll = () => {\n        isCleared() ? checkAllFilters() : uncheckAllFilters()\n    }\n\n    const handleToggleFilterKey = (key) => {\n        isCleared(key) ? checkAllFilters(key) : uncheckAllFilters(key)\n    }\n\n    return (\n        <ButtonGroup className={props.className}>\n            <DropdownButton className=\"m-1\" variant=\"outline-primary\" title=\"Group by\" onSelect={handleSelectGroup}>\n                <Dropdown.Item eventKey=\"none\">None</Dropdown.Item>\n                <Dropdown.Item eventKey=\"category\">Category</Dropdown.Item>\n                <Dropdown.Item eventKey=\"status\">Status</Dropdown.Item>\n                <Dropdown.Item eventKey=\"priority\">Priority</Dropdown.Item>\n            </DropdownButton>\n\n            <DropdownButton className=\"m-1\" variant=\"outline-primary\" title=\"Order\" onSelect={handleSelectOrder}>\n                <Dropdown.Item eventKey=\"asc\">Ascending</Dropdown.Item>\n                <Dropdown.Item eventKey=\"desc\">Desccending</Dropdown.Item>\n            </DropdownButton>\n\n            <DropdownButton show={isOpen} className=\"filterDropdown m-1\" variant=\"outline-primary\" title=\"Filter\" menuAlign=\"right\" onSelect={handleSelectFilter} onToggle={toggleShow}>\n                <div className=\"filters\">\n                    <div className=\"dropdown-item-group\">\n                        <Dropdown.Header>Category</Dropdown.Header>\n                        <Dropdown.Item eventKey=\"category bug\">\n                            <Checkmark name=\"bug\" id=\"checkbox-bug\" checked={props.filters.category.bug} />\n                            <label htmlFor=\"checkbox-bug\">Bug</label>\n                        </Dropdown.Item>\n                        <Dropdown.Item eventKey=\"category feature\">\n                            <Checkmark name=\"feature\" id=\"checkbox-feature\" checked={props.filters.category.feature} />\n                            <label htmlFor=\"checkbox-feature\">Feature</label>\n                        </Dropdown.Item>\n                        <Dropdown.Item eventKey=\"category task\">\n                            <Checkmark name=\"task\" id=\"checkbox-task\" checked={props.filters.category.task} />\n                            <label htmlFor=\"checkbox-task\">Task</label>\n                        </Dropdown.Item>\n                        <Dropdown.Item eventKey=\"category other\">\n                            <Checkmark name=\"other\" id=\"checkbox-other\" checked={props.filters.category.other} />\n                            <label htmlFor=\"checkbox-other\">Other</label>\n                        </Dropdown.Item>\n                        <Dropdown.ItemText onClick={() => { handleToggleFilterKey(\"category\") }}>{isCleared() ? \"All\" : \"Clear\"}</Dropdown.ItemText>\n                    </div>\n                    \n                    <div className=\"dropdown-item-group\">\n                        <Dropdown.Header>Priority</Dropdown.Header>\n                        <Dropdown.Item eventKey=\"priority critical\">\n                            <Checkmark name=\"critical\" id=\"checkbox-critical\" checked={props.filters.priority.critical} />\n                            <label htmlFor=\"checkbox-critical\">Critical</label>\n                        </Dropdown.Item>\n                        <Dropdown.Item eventKey=\"priority high\">\n                            <Checkmark name=\"high\" id=\"checkbox-high\" checked={props.filters.priority.high} />\n                            <label htmlFor=\"checkbox-high\">High</label>\n                        </Dropdown.Item>\n                        <Dropdown.Item eventKey=\"priority regular\">\n                            <Checkmark name=\"regular\" id=\"checkbox-regular\" checked={props.filters.priority.regular} />\n                            <label htmlFor=\"checkbox-regular\">Regular</label>\n                        </Dropdown.Item>\n                        <Dropdown.Item eventKey=\"priority low\">\n                            <Checkmark name=\"low\" id=\"checkbox-low\" checked={props.filters.priority.low} />\n                            <label htmlFor=\"checkbox-low\">Low</label>\n                        </Dropdown.Item>\n                        <Dropdown.Item eventKey=\"priority trivial\">\n                            <Checkmark name=\"trivial\" id=\"checkbox-trivial\" checked={props.filters.priority.trivial} />\n                            <label htmlFor=\"checkbox-trivial\">Trivial</label>\n                        </Dropdown.Item>\n                        <Dropdown.ItemText onClick={() => { handleToggleFilterKey(\"priority\") }}>{isCleared() ? \"All\" : \"Clear\"}</Dropdown.ItemText>\n                    </div>\n\n                    <div className=\"dropdown-item-group\">\n                        <Dropdown.Header>Status</Dropdown.Header>\n                        <Dropdown.Item eventKey=\"status unassigned\">\n                            <Checkmark name=\"unassigned\" id=\"checkbox-unassigned\" checked={props.filters.status.unassigned} />\n                            <label htmlFor=\"checkbox-unassigned\">Unassigned</label>\n                        </Dropdown.Item>\n                        <Dropdown.Item eventKey=\"status open\">\n                            <Checkmark name=\"open\" id=\"checkbox-open\" checked={props.filters.status.open} />\n                            <label htmlFor=\"checkbox-open\">Open</label>\n                        </Dropdown.Item>\n                        <Dropdown.Item eventKey=\"status inprogress\">\n                            <Checkmark name=\"inprogress\" id=\"checkbox-inprogress\" checked={props.filters.status.inprogress} />\n                            <label htmlFor=\"checkbox-inprogress\">In-progress</label>\n                        </Dropdown.Item>\n                        <Dropdown.Item eventKey=\"status resolved\">\n                            <Checkmark name=\"resolved\" id=\"checkbox-resolved\" checked={props.filters.status.resolved} />\n                            <label htmlFor=\"checkbox-resolved\">Resolved</label>\n                        </Dropdown.Item>\n                        <Dropdown.Item eventKey=\"status closed\">\n                            <Checkmark name=\"closed\" id=\"checkbox-closed\" checked={props.filters.status.closed} />\n                            <label htmlFor=\"checkbox-closed\">Closed</label>\n                        </Dropdown.Item>\n                        <Dropdown.ItemText onClick={() => { handleToggleFilterKey(\"status\") }}>{isCleared() ? \"All\" : \"Clear\"}</Dropdown.ItemText>\n                    </div>\n                    <Dropdown.ItemText onClick={handleToggleAll}>{isCleared() ? \"Check All\" : \"Clear All\"}</Dropdown.ItemText>\n                </div>\n            </DropdownButton>\n        </ButtonGroup>\n    )\n}\n\nexport default IssueFilterControl;","import React, { useState, useRef, useEffect } from 'react';\nimport { Col } from 'react-bootstrap';\nimport './withEdit.css';\n\nconst withEdit = (WrappedComponent, type) => (\n    ({ onEdit, name, isEditing = false, ...props }) => { // isEditing prop is used to force editing mode from outside\n        const [editing, setEditing] = useState(isEditing);\n        const [value, setValue] = useState(props.value);\n        const inputRef = useRef();\n\n        useEffect(() => {\n            inputRef && inputRef.current && inputRef.current.focus();\n        }, [editing, isEditing]);\n\n        const handleClick = () => {\n            if(isEditing) return;\n            setEditing(true);\n        }\n\n        const handleKeyPress = (e) => {\n            if(e.key === \"Enter\") {\n                handleSubmit(e);\n            }\n        }\n\n        const handleChange = (e) => {\n            setValue(e.target.value);\n        }\n\n        const handleBlur = () => {\n            (props.onBlur && props.onBlur()) || setEditing(false);\n        }\n\n        const handleSubmit = (e) => {\n            e.preventDefault();\n            onEdit({ [inputRef.current.name]: value });\n            setEditing(false);\n        }\n\n        const inputComponent = () => {\n            if(type === \"text\") {\n                return (\n                    <input \n                        ref={inputRef} \n                        name={name}\n                        type={type} \n                        defaultValue={value} \n                        onChange={handleChange} \n                    />\n                )\n            } else if(type === \"textarea\") {\n                return (\n                    <textarea \n                        ref={inputRef}\n                        name={name} \n                        defaultValue={value} \n                        rows={5}\n                        cols={75}\n                        onChange={handleChange} \n                        onKeyPress={handleKeyPress}\n                    />\n                )\n            } else if(type === \"select\") {\n                return (\n                    <select\n                        ref={inputRef}\n                        name={name}\n                        defaultValue={value}\n                        onChange={handleChange}\n                        onKeyPress={handleKeyPress}\n                    >\n                        {\n                            props.options && props.options.map((opt, idx) => (\n                                <option key={idx} value={opt}>\n                                    {opt}\n                                </option>\n                            ))\n                        }\n                    </select>\n                )\n            }\n            return null;\n        }\n\n        return editing ? (\n            <Col xs={props.xs} sm={props.sm} md={props.md} lg={props.lg}>\n                <form onBlur={handleBlur} onSubmit={handleSubmit}>\n                    {inputComponent()}\n                </form>\n            </Col>\n        ) : (\n            <div className=\"component-wrapper\">\n                <WrappedComponent {...props} onClick={handleClick}>\n                    {props.children}\n                </WrappedComponent>\n            </div>\n        )\n    }\n)\n\nexport default withEdit;","const getNthIndexOf = (string, searchTerm, n) => {\n    let i = 0, index = 0;\n\n    while(i < n && index >= 0) {\n        index = string.indexOf(searchTerm, index + 1);\n        i++;\n    }\n\n    return index;\n}\n\nexport const removeTimezoneFromDateString = (dateString) => {\n    const index = getNthIndexOf(dateString, \" \", 5);\n    const res = dateString.slice(0, index);\n    return res;\n} \n","export default __webpack_public_path__ + \"static/media/edit-icon-png-small.4aeb2e4d.png\";","import React, { useState } from 'react';\nimport { Row, Col, Dropdown } from 'react-bootstrap';\nimport List from '../../display/List/List';\nimport withEdit from '../../hocs/withEdit/withEdit';\nimport { removeTimezoneFromDateString } from '../../../utility/strings';\nimport editIcon from '../../../images/edit-icon-png-small.png';\n\n\nconst commentBoxStyle = {\n    width: \"50vw\",\n    height: \"100%\",\n    margin: \"1em\",\n};\n\nconst CustomToggle = React.forwardRef(({ onClick }, ref) => (\n    <img \n        alt=\"\"\n        src={editIcon}\n        width=\"25\"\n        height=\"25\"\n\n        ref={ref}\n        onClick={onClick}\n    />\n));\n\nfunction CommentList(props) {\n    const [editId, setEditId] = useState(null);\n\n    const EditArea = withEdit(Col, 'textarea');\n\n    const handleDropdownSelect = (e, id) => {\n        if(e === \"delete\") return props.onDelete({ commentId: id });\n        if(e === \"edit\") return showEditArea(id);\n    }\n\n    const showEditArea = (commentId) => {\n        setEditId(commentId);\n    } \n\n    const handleEditComment = (comment) => {\n        props.onEdit(editId, comment);\n        setEditId(null);\n    }\n\n    return (\n        <List listItems={props.comments} render={(item) => (\n            <Row style={commentBoxStyle} key={item.id}>\n                <Col lg={11} md={11} sm={10} xs={9}>\n                {\n                    \"Posted By: \" + \n                    item.creator + \n                    \" on \" + \n                    removeTimezoneFromDateString(new Date(item.created_at).toString()) \n                }\n                </Col>\n                <Col lg={1} md={1} sm={2} xs={3}>\n                    <Dropdown onSelect={evt => handleDropdownSelect(evt, item.id)}>\n                        <Dropdown.Toggle as={CustomToggle} />\n\n                        <Dropdown.Menu>\n                            <Dropdown.Item eventKey=\"edit\">Edit</Dropdown.Item>\n                            <Dropdown.Item eventKey=\"delete\">Delete</Dropdown.Item>\n                        </Dropdown.Menu>\n                    </Dropdown>\n                </Col>\n                <EditArea \n                    lg={11} md={11} sm={11} xs={11}\n                    name=\"body\"\n                    value={item.body}\n                    isEditing={editId === item.id}\n                    onEdit={handleEditComment}\n                    onBlur={() => setEditId(null)}\n                >\n                    {item.body}\n                </EditArea>\n            </Row>\n        )}/>\n    )\n}\n\nexport default CommentList;","import React from 'react';\nimport { Modal, Button } from 'react-bootstrap';\n\nfunction DialogBox({\n    show,\n    heading,\n    closeButtonText,\n    submitButtonText,\n    onSubmit,\n    onClose,\n    render,\n    renderData,\n    formId = null,\n}) {\n    return (\n        <Modal show={show} onHide={onClose}>\n            <Modal.Header closeButton>\n                <Modal.Title>{heading ? heading : \"\"}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>{render({ data: renderData })}</Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={onClose}>\n                    {closeButtonText ? closeButtonText : \"Close\"}\n                </Button>\n                <Button variant=\"primary\" type=\"submit\" form={formId} onClick={onSubmit}>\n                    {submitButtonText ? submitButtonText : \"Submit\"}\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    )\n}\n\n\nexport default DialogBox;","import { useState } from 'react';\nimport DialogBox from '../components/display/DialogBox/DialogBox';\n\nfunction extractInputValues(nodeList) {\n    if(nodeList.length === 0) return {};\n    const values = {};\n    \n    nodeList.forEach(input => { \n        values[input.name] = input.value;\n    });\n\n    return values;\n}\n\nfunction useDialogBox() {\n    const [visible, setVisible] = useState(false);\n    const [data, setData] = useState({});\n\n    const show = (data) => {\n        setData(data);\n        setVisible(true);\n    }\n\n    const hide = () => {\n        setVisible(false);\n    }\n\n    const RenderDialogBox = (props) => {\n        const handleSubmit = (event) => {\n            const evt = event;\n            evt.preventDefault();\n            const values = evt.target.form && extractInputValues(evt.target.form.childNodes);\n            typeof props.onSubmit === \"function\" && props.onSubmit({ data, values });\n            hide();\n        }\n\n        return <DialogBox {...props} onSubmit={handleSubmit} show={visible} renderData={data} onClose={hide}/>\n    };\n\n    return {\n        show, RenderDialogBox\n    }\n}\n\nexport default useDialogBox;","import React from 'react';\nimport { Nav, Button } from 'react-bootstrap';\n\nimport LinkButton from '../../display/Button/LinkButton';\nimport NavBar from '../../display/NavBar/NavBar';\nimport './Navigation.css';\n\nfunction IssueDetailNavBar({ title, linkUrl, ...props }) {\n    return (\n        <NavBar title={\"Issue: \" + title} {...props} bg=\"light\" sticky=\"top\" render={() => (\n            <Nav>\n                {props.render && typeof props.render === \"function\" && props.render()}\n                <LinkButton variant=\"outline-dark\" to={linkUrl ? linkUrl + \"/new\" : \"./new\"}>Add New Issue</LinkButton>\n            </Nav>\n        )}/>    \n    )\n}\n\n\n\n\nexport default IssueDetailNavBar;","import React, { useState } from 'react';\nimport Upload from '../../form/inputs/Upload/Upload';\nimport './Attachments.css'\n\nfunction Attachments(props) {\n    const [uploading, setUploading] = useState(false);\n    const renderAttachmentItems = () => {\n        const items = [];\n        props.attachments && props.attachments.forEach((attachment, idx) => {\n            items.push(\n                <li key={`attachment-${idx}`}>\n                    <span>{attachment.filename}</span>{\" \"}\n                    <a href={attachment.data} download={attachment.filename}>Download</a>{\" \"}\n                    <button className=\"link\" onClick={() => props.onDelete(attachment.id)}>Remove</button>\n                </li>\n            )\n        });\n        return items;\n    }\n\n    return (\n        <>\n            <ul className=\"attachments-list\">\n                {\n                    renderAttachmentItems()\n                }   \n            </ul>\n            {uploading ? \n                <Upload \n                    sendRequest={props.onCreate}\n                    onComplete={props.onComplete}\n                    onClose={() => { setUploading(false) }}\n                /> \n                : <button \n                    className=\"link\" \n                    onClick={() => { setUploading(true) }}\n                >\n                    Add Attachment\n                </button>\n            }\n        </>\n    );\n}\n\nexport default Attachments;","import React from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport { Row, Col } from 'react-bootstrap';\nimport { IssueSchema } from '../../utility/schema/validation';\n\n\nfunction EditIssueDetailsForm(props) {\n    return(\n        <Formik\n            initialValues={{ \n                title: props.initialTitle,\n                description: props.initialDescription,\n                category: props.initialCategory,\n                priority: props.initialPriority\n            }}\n            onSubmit={(values) => {\n                props.onSubmit(values);\n            }}\n            validationSchema={IssueSchema}\n        >\n            {() => (\n                <Form id=\"edit-issue-form\" >\n                    <Row className=\"justify-content-center title\">\n                        <Col>\n                            <Field name=\"title\" type=\"text\" className=\"form-input\" />\n                            <span className=\"form-error\">\n                                <ErrorMessage name=\"title\" />\n                            </span>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col lg={4} md={4} sm={4} xs={4}>\n                            <label htmlFor=\"description\">Description</label>\n                        </Col>\n                        <Col lg={6} md={6} sm={6} xs={6}>\n                            <Field name=\"description\" as=\"textarea\" className=\"form-input\" />\n                            <span className=\"form-error\">\n                                <ErrorMessage name=\"description\" className=\"form-error\" />\n                            </span>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col lg={4} md={4} sm={4} xs={4}>\n                            <label htmlFor=\"category\">Category</label>\n                        </Col>\n                        <Col lg={6} md={6} sm={6} xs={6}>\n                            <Field name=\"category\" as=\"select\" className=\"form-input\">\n                                <option value=\"bug\">Bug</option>\n                                <option value=\"feature\">Feature</option>\n                                <option value=\"task\">Task</option>\n                                <option value=\"other\">Other</option>\n                            </Field>\n                            <span className=\"form-error\">\n                                <ErrorMessage name=\"category\" className=\"form-error\" />\n                            </span>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col lg={4} md={4} sm={4} xs={4}>\n                            <label htmlFor=\"priority\">Priority</label>\n                        </Col>\n                        <Col lg={6} md={6} sm={6} xs={6}>\n                            <Field name=\"priority\" as=\"select\" className=\"form-input\">\n                                <option value=\"trivial\">Trivial</option>\n                                <option value=\"low\">Low</option>\n                                <option value=\"regular\">Regular</option>\n                                <option value=\"high\">High</option>\n                                <option value=\"critical\">Critical</option>\n                            </Field>\n                            <span className=\"form-error\">\n                                <ErrorMessage name=\"priority\" className=\"form-error\" />\n                            </span>\n                        </Col>\n                    </Row>\n                </Form>\n            )}\n        </Formik>\n    )\n}\n\nexport default EditIssueDetailsForm;","import React, { useState } from 'react';\nimport { Container, Row, Col, Button, Form } from 'react-bootstrap';\nimport CommentList from '../../components/app/CommentList/CommentList';\nimport useResource from '../../hooks/useResource';\nimport useAuth from '../../hooks/useAuth';\nimport useDialogBox from '../../hooks/useDialogBox';\nimport withEdit from '../../components/hocs/withEdit/withEdit';\nimport issuesApi from '../../api/issues';\nimport IssueDetailNavBar from '../../components/app/Navigation/IssueDetailNavBar';\nimport Attachments from '../../components/app/Attachments/Attachments';\nimport LinkButton from '../../components/display/Button/LinkButton';\nimport { removeTimezoneFromDateString } from '../../utility/strings';\nimport './IssueDetails.css';\nimport EditIssueDetailsForm from '../../components/form/EditIssueDetailsForm';\n\nfunction IssueDetails({ issue, onEdit, ...props }) {\n    const auth = useAuth();\n    const [attachments, setAttachments, getAttachments] = useResource(\n        `/api/projects/${props.match.params.projectId}/issues/${props.match.params.issueId}/attachments`,\n        auth.user ? auth.user.token : null,\n        issue.attachmentHandles\n    )\n    const [comments, setComments] = useResource(\n        `/api/projects/${props.match.params.projectId}/issues/${props.match.params.issueId}/comments`,\n        auth.user ? auth.user.token : null\n    );\n    const [editMode, setEditMode] = useState(false);\n    const { show: showDeleteCommentDialogBox, RenderDialogBox: DeleteCommentDialogBox } = useDialogBox();\n\n    const EditSelect = withEdit(Col, \"select\");\n\n    const handleEditIssue = async (values) => {\n        //Remove the fields that have not been changed\n        for(let key in values) \n            if(values[key] === issue[key]) delete values[key];\n\n        await onEdit(props.match.params.projectId, issue.id, values);\n\n        setEditMode(false);\n    }\n\n    const handleAddComment = async (e) => {\n        e.preventDefault();\n        const commentData = e.target[1].value\n        const newComment = await issuesApi.addComment(props.match.params.projectId, issue.id, commentData, auth.user.token);\n        setComments(prev => {\n            const comments = prev.data.slice();\n            comments.push(newComment);\n            return { ...prev, data: comments }\n        });\n        const commentBox = document.querySelector(\"textarea#comment\");\n        commentBox.value = \"\";\n    }\n\n    const handleDeleteComment = async ({ data }) => {\n        console.log(\"Deleting comment\", data);\n        await issuesApi.deleteComment(props.match.params.projectId, issue.id, data.commentId, auth.user.token);\n        setComments(prev => {\n            const comments = prev.data.slice();\n            const commentIdx = comments.findIndex(comment => comment.id === data.commentId);\n            if(commentIdx !== -1) comments.splice(commentIdx, 1);\n            return { ...prev, data: comments };\n        })\n    }\n\n    const handleEditComment = async (commentId, commentData) => {\n        const comment = await issuesApi.updateComment(\n            props.match.params.projectId, \n            issue.id, \n            commentId, \n            commentData.body, \n            auth.user.token\n        );\n        setComments(prev => {\n            const comments = prev.data.slice();\n            const commentIdx = comments.findIndex(comment => comment.id === commentId);\n            comments[commentIdx] = comment;\n            return { ...prev, data: comments };\n        })\n    }\n\n    const advanceButtonText = (issue.status === \"unassigned\") ? \"Assign Issue\" :\n        (issue.status === \"open\") ? \"Advance Issue\" :\n        (issue.status === \"inprogress\") ? \"Close Issue\" : \n        issue.status;\n\n    const handleAdvanceIssue = () => {\n        if(issue.status === \"unassigned\") return props.onAssign({ projectId: props.match.params.projectId, issueId: issue.id });\n        if(issue.status === \"open\") return props.onStart({ projectId: props.match.params.projectId, issueId: issue.id });\n        return props.onClose({ projectId: props.match.params.projectId, issueId: issue.id });\n    }\n\n    return (\n        <>\n            <IssueDetailNavBar title={issue.title} render={() => {\n                return (\n                    <> \n                        <Button\n                            className=\"stick-left\"\n                            onClick={() => { props.history.goBack() }\n                        }>Back to All Issues</Button>\n                        {editMode &&\n                            <>\n                                <Button\n                                    variant=\"outline-dark\" \n                                    className=\"mx-1\" \n                                    form=\"edit-issue-form\"\n                                    type=\"submit\"\n                                >\n                                    Save\n                                </Button>\n                            \n                                <Button\n                                    variant=\"outline-dark\" \n                                    className=\"mx-1\" \n                                    onClick={() => setEditMode(false)}\n                                >\n                                    Cancel\n                                </Button>\n                            </>\n                        }\n                        {!editMode &&\n                            <Button \n                                variant=\"outline-dark\" \n                                className=\"mx-1\" \n                                onClick={() => { setEditMode(true) }}\n                            >\n                                Edit\n                            </Button>\n                        }\n                    </>\n                )\n            }}/>\n            <Container className=\"IssueDetails\" fluid>\n                <DeleteCommentDialogBox \n                    heading=\"Delete Project\"\n                    closeButtonText=\"Cancel\"\n                    submitButtonText=\"Delete\"\n                    onSubmit={handleDeleteComment}\n                    render={({ data }) => 'Are you sure you would like to delete this comment: ' + data.commentId + '?'}\n                />\n                {editMode ?\n                    <EditIssueDetailsForm \n                        initialTitle={issue.title} \n                        initialDescription={issue.description}\n                        initialCategory={issue.category}\n                        initialPriority={issue.priority}\n                        onSubmit={handleEditIssue}\n                    /> \n                    : \n                    <>\n                        <Row className=\"justify-content-center title\">\n                            <h3>{issue.title}</h3>\n                        </Row>\n\n                        <Row>\n                            <Col lg={4} md={4} sm={4} xs={4}>Description</Col>\n                            <Col \n                                as=\"p\" lg={6} md={6} sm={6} xs={6}\n                                name=\"description\" \n                            >\n                                {issue.description}\n                            </Col>\n                        </Row>\n\n                        <Row>\n                            <Col lg={4} md={4} sm={4} xs={4}>Category</Col>\n                            <EditSelect \n                                as=\"p\" lg={6} md={6} sm={6} xs={6}\n                                value={issue.category} \n                                name=\"category\" \n                                onEdit={handleEditIssue} \n                                options={[\"bug\", \"feature\", \"task\", \"other\"]}\n                            >\n                                {issue.category}\n                            </EditSelect>\n                        </Row>\n\n                        <Row>\n                            <Col lg={4} md={4} sm={4} xs={4}>Priority</Col>\n                            <EditSelect \n                                as=\"p\" lg={6} md={6} sm={6} xs={6}\n                                value={issue.priority} \n                                name=\"priority\" \n                                onEdit={handleEditIssue} \n                                options={[\"critical\", \"high\", \"regular\", \"low\", \"trivial\"]}\n                            >\n                                {issue.priority}\n                            </EditSelect>\n                        </Row>\n                    </>\n                }\n\n                <Row>\n                    <Col lg={4} md={4} sm={4} xs={4}>Status</Col>\n                    <Col as=\"p\" lg={6} md={6} sm={6} xs={6}>\n                        {issue.status}\n                        {\n                            <Button \n                                className=\"mx-1\" size=\"sm\" \n                                hidden={issue.status === \"resolved\" || issue.status === \"closed\"}\n                                onClick={handleAdvanceIssue}\n                            >\n                                {advanceButtonText}\n                            </Button>\n                        } \n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col lg={4} md={4} sm={4} xs={4}>Created on</Col>\n                    <Col as=\"p\" lg={6} md={6} sm={6} xs={6}>{removeTimezoneFromDateString(new Date(issue.created_at).toString())}</Col>\n                </Row>\n\n                <Row>\n                    <Col lg={4} md={4} sm={4} xs={4}>Created by</Col>\n                    <Col as=\"p\" lg={6} md={6} sm={6} xs={6}>{issue.creator}</Col>\n                </Row>\n\n                <Row>\n                    <Col lg={4} md={4} sm={4} xs={4}>Assigned to</Col>\n                    <Col as=\"p\" lg={6} md={6} sm={6} xs={6}>{issue.assignee ? issue.assignee : \"Unassigned\"}</Col>\n                </Row>\n\n                <Row>\n                    <Col lg={4} md={4} sm={4} xs={4}>Assigned on</Col>\n                    <Col as=\"p\" lg={6} md={6} sm={6} xs={6}>{(issue.opened_at) ? removeTimezoneFromDateString(new Date(issue.opened_at).toString()) : \"N/A\"}</Col>\n                </Row>\n\n                <Row>\n                    <Col lg={4} md={4} sm={4} xs={4}>Resolved/Closed on</Col>\n                    <Col as=\"p\" lg={6} md={6} sm={6} xs={6}>{(issue.closed_at) ? removeTimezoneFromDateString(new Date(issue.closed_at).toString()) : \"N/A\"}</Col>\n                </Row>\n\n                <Row>\n                    <Col lg={4} md={4} sm={4} xs={4}>Attachments</Col>\n                    <Col lg={6} md={6} sm={6} xs={6} id=\"attachments-content\">\n                        <Attachments \n                            attachments={attachments.data}\n                            onCreate={(file, progressCb) => (\n                                props.onCreateAttachmentRequest(\n                                    props.match.params.projectId,\n                                    issue.id,\n                                    file,\n                                    progressCb\n                                )\n                            )}\n                            onComplete={(attachmentHandles) => {\n                                console.log(attachmentHandles);\n                                props.onAddAttachment(\n                                    props.match.params.projectId,\n                                    issue.id, \n                                    attachmentHandles\n                                )\n                                getAttachments();\n                            }}\n                        />\n                    </Col>\n                </Row>\n\n                <LinkButton to={`${issue.id}/log`} className=\"my-3\">View Issue Log</LinkButton>\n\n                <Row>\n                    <Col lg={4} md={4} sm={4} xs={4}>\n                        <Button variant=\"outline-primary\" type=\"submit\" form=\"add-comment\">Add Comment</Button>\n                    </Col>\n                    <Col lg={4} md={4} sm={4} xs={4}>\n                        <Form id=\"add-comment\" onSubmit={handleAddComment}>\n                            <Form.Group controlId=\"comment\">\n                                <Form.Control as=\"textarea\" placeholder=\"Enter comment\" />\n                            </Form.Group>\n                        </Form>\n                    </Col>\n                </Row>\n                \n                <Row>\n                    <Col lg={4} md={4} sm={4} xs={4}>Comments</Col>\n                    <CommentList \n                        comments={comments.data} \n                        onEdit={handleEditComment} \n                        onDelete={showDeleteCommentDialogBox}\n                    />\n                </Row>\n\n            </Container>\n        </>\n    );\n}\n\nexport default IssueDetails;","const paramKey = \"list_filter_params\";\n\nexport function setLocalParamStorage(params) {\n    localStorage.setItem(paramKey, JSON.stringify(params));\n}\n\nexport function getLocalParamStorage() {\n    return JSON.parse(localStorage.getItem(paramKey));\n}\n\nexport function removeLocalParamStorage() {\n    localStorage.removeItem(paramKey);\n}","import { useState, useEffect } from 'react';\nimport { setLocalParamStorage, getLocalParamStorage } from '../utility/local/paramStorage';\n\nfunction useListParams(initialParams) {\n    const [listParams, setListParams] = useState(initialParams);\n\n    // Check local storage for list params, if none then set to initialParams prop\n    useEffect(() => {\n        const store = getLocalParamStorage();\n        if(!store) {\n            setLocalParamStorage(initialParams);\n        } else {\n            setListParams(store);\n        }\n    // eslint-disable-next-line\n    }, []);\n\n    // Save updated list params to local storage\n    useEffect(() => {\n        setLocalParamStorage(listParams);\n    }, [listParams]);\n\n    function handleChange(param, value) {\n        setListParams(prev => ({ ...prev, [param]: value}));\n    }\n\n    return [listParams, handleChange];\n}\n\nexport default useListParams;","import React from 'react';\nimport { Formik, Form, Field } from 'formik';\n\nfunction SelectForm({ formId, fieldName, selectItems, itemKey, initialValues, onSubmit }) {\n    const selectOptions = selectItems.map((item, idx) => (\n        <option id={`option${idx}`} key={`option${idx}`} value={item.id}>{item[itemKey]}</option>\n    ));\n\n    return(\n        <Formik\n            initialValues={initialValues}\n            onSubmit={onSubmit}\n        >\n            {() => {\n                return (\n                    <Form id={formId}>\n                        <Field name={fieldName} as=\"select\">\n                            {selectOptions}\n                        </Field>\n                    </Form>\n                )\n        }}\n        </Formik>\n    )\n}\n\nexport default SelectForm;","import React from 'react'\nimport { Form, FormControl, Button } from 'react-bootstrap';\n\nfunction InlineSearch(props) {\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        props.onSubmit(e.target.firstChild.value);\n    }\n\n    return (\n        <Form inline noValidate onSubmit={handleSubmit} className={props.className}>\n            <FormControl type=\"text\" name=\"search\" placeholder=\"Search\" className=\"mr-sm-2\" />\n            <Button type=\"submit\" variant=\"outline-info\">Search</Button>\n        </Form>\n    )\n\n}\n\nexport default InlineSearch;","import React, { useState } from 'react';\nimport { ButtonGroup, ToggleButton as Toggle } from 'react-bootstrap';\n\nfunction ToggleButton({ radioValue, onSelect, ...props }) {\n    return (\n        <ButtonGroup toggle className=\"mx-2\">\n        {props.radios && props.radios.map((radio, idx) => (\n          <Toggle\n            key={idx}\n            type=\"radio\"\n            variant=\"secondary\"\n            name=\"radio\"\n            value={radio.value}\n            checked={radioValue === radio.value}\n            onChange={(e) => onSelect(e.currentTarget.value)}\n          >\n            {radio.name}\n          </Toggle>\n        ))}\n      </ButtonGroup>\n    )\n}\n\nexport default ToggleButton;","export default class CollabInfo {\n    constructor(collabArray) {\n        this.collaborators = collabArray;\n    }\n\n    get(collabId) {\n        if(this.collaborators.length === 0) return;\n        return this.collaborators.find(collab => collab.id === collabId);\n    }\n}","export const projectLogItemText = (logAction, logCreatedBy, logCollaborator, logDate, logData) => {\n    let text = \"\";\n    switch(logAction) {\n        case 'INSERT_ISSUE':\n            text += logCreatedBy.userName;\n            text += \" created an issue (#\";\n            text += logData.newData.issueId;\n            text += \") for this project - \";\n            break;\n        case 'RESOLVE_ISSUE':\n            text += logCreatedBy.userName;\n            text += \" resolved an issue (#\";\n            text += logData.newData.issueId;\n            text += \") for this project - \";\n            break;\n        case 'DELETE_ISSUE':\n            text += logCreatedBy.userName;\n            text += \" deleted an issue (#\";\n            text += logData.oldData.issueId;\n            text += \") for this project - \";\n            break;\n        case 'UPDATE':\n            text += logCreatedBy.userName;\n            text += \" updated the details of this project - \";\n            break;\n        case 'ADD_COLLAB':\n            text += logCreatedBy.userName;\n            text += \" added \";\n            text += logCollaborator.userName;\n            text += \" to this project - \";\n            break;\n        case 'REMOVE_COLLAB':\n            text += logCreatedBy.userName;\n            text += \" removed \";\n            text += logCollaborator.userName;\n            text += \" from this project - \";\n            break;\n        case 'INSERT':\n            text += logCreatedBy.userName;\n            text += \" created this project - \";\n            break;\n        case 'DELETE':\n            text += logCreatedBy.userName;\n            text += \" deleted this project - \";\n            break;\n        default:\n            break;\n    }\n    text += logDate;\n    return text;\n}\n\nconst getChanges = (oldData, newData) => {\n    const _oldData = JSON.parse(oldData);\n    const _newData = JSON.parse(newData)\n    const keys = Object.keys(_oldData);\n    const changes = {};\n    for(let key of keys) {\n        if(_oldData[key] !== _newData[key]) {\n            changes[key] = {\n                oldData: _oldData[key],\n                newData: _newData[key]\n            };\n        }\n    }\n    return changes;\n}\n\nexport const issueLogItemText = (logAction, logCreatedBy, logDate, logDataOld, logDataNew) => {\n    let text = \"\";\n    switch(logAction) {\n        case 'INSERT':\n            text += logCreatedBy.userName;\n            text += \" created this issue - \";\n            text += logDate;\n            break;\n        case 'UPDATE':\n            text += logCreatedBy.userName;\n            const changes = getChanges(logDataOld, logDataNew);\n            const changedKeys = Object.keys(changes).filter(key => key !== \"assigneeId\" || key !== \"creatorId\");\n            let i = 0;\n            for(let key of changedKeys) {\n                if(key === \"assignee\") text += \" assigned this issue \";\n                else text += \" changed the \" + key + \" of this issue\";\n                text += \" to '\" + changes[key].newData + \"'\";\n                text += (++i < changedKeys.length) ? \" and \" : \"\";\n            }\n            text += \" - \" + logDate;\n            break;\n        case 'DELETE':\n            text += logCreatedBy.userName;\n            text += \" deleted this issue - \";\n            text += logDate;\n            break;\n        default:\n            break;\n    }\n    return text;\n}","import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport { useAuth, useResource } from '../../hooks';\nimport List from '../../components/display/List/List';\nimport CollabInfo from '../../utility/CollabInfo';\nimport { removeTimezoneFromDateString } from '../../utility/strings';\nimport { issueLogItemText } from '../../utility/log';\n\nfunction IssueLog(props) {\n    const auth = useAuth();\n    const [log, ] = useResource(\n        `/api/projects/${props.match.params.projectId}/issues/${props.match.params.issueId}/reports`,\n        auth.user ? auth.user.token : null\n    )\n\n    const renderLogItem = (item) => {\n        if(!item || !props.collaborators || props.collaborators.length === 0) return null;\n        const date = removeTimezoneFromDateString(new Date(item.createdAt).toString());\n        const collabInfo = new CollabInfo(props.collaborators);\n        const createdBy = collabInfo.get(item.createdBy);\n        const text = issueLogItemText(item.action, createdBy, date, item.oldData, item.newData)\n        return <div>{text}</div>\n    }\n\n    return (\n        <Container fluid>\n            <List listItems={log.data} render={renderLogItem}/>\n        </Container>\n    )\n}\n\nexport default IssueLog;","import React, { useState } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\n\nimport useAuth from '../../hooks/useAuth';\nimport useResource from '../../hooks/useResource';\n\nimport IssueNavBar from '../../components/app/Navigation/IssueNavBar';\nimport IssueList from '../../components/app/IssueList/IssueList';\nimport IssueFilterControl from '../../components/app/IssueFilterControl/IssueFilterControl';\nimport IssueDetails from '../../pages/IssueDetails/IssueDetails';\n\nimport useDialogBox from '../../hooks/useDialogBox';\nimport useListParams from '../../hooks/useListParams';\nimport SelectForm from '../../components/form/SelectForm';\nimport InlineSearch from '../../components/form/InlineSearch';\nimport ToggleButton from '../../components/display/Button/ToggleButton';\nimport IssueDetailNavBar from '../../components/app/Navigation/IssueDetailNavBar';\nimport IssueLog from '../IssueLog/IssueLog';\nimport useNotificationBanner from '../../hooks/useNotificationBanner';\n\nconst initialFilterValue = {\n    category: {\n        bug: true, \n        feature: true,\n        task: true,\n        other: true\n    },\n    priority: {\n        critical: true,\n        high: true,\n        regular: true,\n        low: true,\n        trivial: true\n    },\n    status: {\n        unassigned: true,\n        open: true,\n        inprogress: true,\n        resolved: true,\n        closed: true\n    }\n}\n\nfunction IssueDashboard({ issues, ...props }) {\n    const auth = useAuth();\n    const notificationBanner = useNotificationBanner();\n    const [collaborators, ] = useResource(\n        `/api/projects/${props.match.params.projectId}/collaborators`,\n        auth.user ? auth.user.token : null\n    );\n    const { show: showDeleteIssueDialogBox, RenderDialogBox: DeleteIssueDialogBox } = useDialogBox();\n    const { show: showAssignIssueDialogBox, RenderDialogBox: AssignIssueDialogBox } = useDialogBox();\n    const { show: showStartIssueDialogBox, RenderDialogBox: StartIssueDialogBox } = useDialogBox();\n    const { show: showCloseIssueDialogBox, RenderDialogBox: CloseIssueDialogBox } = useDialogBox();\n    const [listParams, changeListParams] = useListParams({ order: \"desc\", group: \"category\", filter: initialFilterValue, search: \"\" });\n    const [issueView, setIssueView] = useState('1');\n\n    const handleSelectIssueView = (view) => {\n        setIssueView(view);\n    }\n\n    const handleDeleteIssue = async ({ data }) => {\n        await props.onDelete(data.projectId, data.issueId);\n        notificationBanner.showNotificationWithText(\"Issue Successfully Deleted!\");\n    }\n\n    const handleAssignIssue = async ({ data, values }) => {\n        await props.onAssign(data.projectId, data.issueId, values.collaboratorId);\n        notificationBanner.showNotificationWithText(\"Issue Successfully Assigned!\")\n    }\n\n    const handleStartIssue = async ({ data }) => {\n        await props.onStart(data.projectId, data.issueId);\n        notificationBanner.showNotificationWithText(\"Issue Successfully Advanced to In-Progress!\");\n    }\n\n    const handleCloseIssue = async ({ data, values }) => {\n        await props.onClose(data.projectId, data.issueId, values.status);\n        notificationBanner.showNotificationWithText(\"Issue Completed!\");\n    }\n    \n    return (\n        <>\n            <DeleteIssueDialogBox\n                heading=\"Delete Issue\"\n                submitButtonText=\"Delete\"\n                onSubmit={handleDeleteIssue}\n                render={({ data }) => (\n                    'Are you sure you would like to delete issue ' + data.issueId\n                )}\n            />\n            <AssignIssueDialogBox\n                heading=\"Assign Issue\"\n                submitButtonText=\"Assign\"\n                formId=\"project-collaborators\"  \n                onSubmit={handleAssignIssue}\n                render={() => (\n                    <SelectForm \n                        formId=\"project-collaborators\"  \n                        fieldName=\"collaboratorId\"\n                        initialValues={{ \"collaboratorId\": \"\"}} \n                        selectItems={collaborators.data} \n                        itemKey=\"userName\"\n                    />\n                )}\n            />\n            <StartIssueDialogBox\n                heading=\"Begin Issue\"\n                submitButtonText=\"Advance\"\n                onSubmit={handleStartIssue}\n                render={({ data }) => 'Are you sure you would like to begin issue ' + data.issueId + '? The status of this issue will be advanced to \"inprogress\".'}\n            />\n            <CloseIssueDialogBox\n                heading=\"Complete Issue\"\n                submitButtonText=\"Complete\"\n                formId=\"complete-status\"  \n                onSubmit={handleCloseIssue}\n                render={() => (\n                    <>\n                        <div>Please select how you would like to complete this issue? </div>\n                        <SelectForm \n                            formId=\"complete-status\"  \n                            fieldName=\"status\"\n                            initialValues={{ \"status\": \"\"}} \n                            selectItems={[{ status: \"closed\" }, { status: \"resolved\" }]} \n                            itemKey=\"status\"\n                        />\n                    </>\n                )}\n            />\n            <Switch>\n                <Route path={props.match.path} exact render={() => (\n                    <>\n                        <IssueNavBar render={() => (\n                            <>\n                                <Button \n                                    className=\"stick-left\" \n                                    variant=\"outline-primary\"\n                                    onClick={() => { props.history.push('/projects') }}\n                                >\n                                    Back to Projects\n                                </Button>\n                                <div>View style:</div>\n                                <ToggleButton \n                                    radioValue={issueView} \n                                    radios={[\n                                        { name: 'List', value: '1' },\n                                        { name: 'Table', value: '2' }\n                                    ]}\n                                    onSelect={handleSelectIssueView}\n                                />\n                                <InlineSearch \n                                    className=\"search-bar\"\n                                    onSubmit={(searchText) => { changeListParams(\"search\", searchText) }}\n                                />\n                                <IssueFilterControl \n                                    className=\"filter-controls\"\n                                    filters={listParams.filter}\n                                    onSelect={changeListParams}\n                                />\n                            </>\n                        )}/>\n                        <IssueList \n                            projectId={props.match.params.projectId} \n                            collaborators={collaborators.data}\n                            issueList={issues}\n                            viewAs={issueView}\n\n                            groupBy={listParams.group}\n                            orderBy={listParams.order}\n                            filter={listParams.filter}\n                            searchText={listParams.search}\n                            searchKeys={[\"title\", \"description\"]}\n\n                            onDelete={showDeleteIssueDialogBox}\n                            onAssign={showAssignIssueDialogBox}\n                            onStart={showStartIssueDialogBox}\n                            onClose={showCloseIssueDialogBox}\n                        />\n                    </>\n                )}/>\n                <Route path={`${props.match.path}/:issueId`} exact render={(routerProps) => {\n                    const issueIdx = issues.findIndex(iss => iss.id === Number(routerProps.match.params.issueId));\n                    const issue = (issueIdx !== -1) ? issues[issueIdx] : null; \n                    if(!issue) return;\n                    return (\n                        <>\n                            <IssueDetails \n                                {...routerProps} \n                                issue={issue}\n                                collaborators={collaborators.data}\n                                onEdit={props.onEdit}\n                                onDelete={showDeleteIssueDialogBox}\n                                onAssign={showAssignIssueDialogBox}\n                                onStart={showStartIssueDialogBox}\n                                onClose={showCloseIssueDialogBox}\n                                onCreateAttachmentRequest={props.onCreateAttachmentRequest}\n                                onAddAttachment={props.onAddAttachment}\n                            />\n                        </>\n                    )\n                }} />\n                <Route path={`${props.match.path}/:issueId/log`} exact render={(routerProps) => {\n                    const issueIdx = issues.findIndex(iss => iss.id === Number(routerProps.match.params.issueId));\n                    const issue = (issueIdx !== -1) ? issues[issueIdx] : null; \n                    const urlParts = routerProps.match.url.split('/');\n                    urlParts.pop(); urlParts.pop(); // Remove last two elements( ':issueId/log' ) from url\n                    if(!issue) return;\n                    return (\n                        <>\n                            <IssueDetailNavBar title={issue.title} linkUrl={urlParts.join(\"/\")} render={() => {\n                                return (\n                                    <Button \n                                        className=\"stick-left\" \n                                        onClick={() => { props.history.goBack() }}\n                                    >Back to Issue Details</Button>\n                                )\n                            }}/>\n                            <IssueLog collaborators={collaborators.data} {...routerProps} />\n                        </>\n                    )\n                }} />\n            </Switch>\n        </>\n    )\n}\n\nexport default IssueDashboard;","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport useResource from '../../hooks/useResource';\nimport useAuth from '../../hooks/useAuth';\nimport projectsApi from '../../api/projects';\nimport withEdit from '../../components/hocs/withEdit/withEdit';\nimport List from '../../components/display/List/List';\nimport CollabInfo from '../../utility/CollabInfo';\nimport { removeTimezoneFromDateString } from '../../utility/strings';\nimport { projectLogItemText } from '../../utility/log';\n\nfunction ProjectDetails({project, ...props}) {\n    const auth = useAuth();\n    const [collaborators, ] = useResource(\n        `/api/projects/${props.match.params.projectId}/collaborators`,\n        auth.user ? auth.user.token : null\n    );\n    const [log, ] = useResource(\n        `/api/projects/${props.match.params.projectId}/reports`,\n        auth.user ? auth.user.token : null\n    )\n\n    const EditBox = withEdit(Col, \"text\");\n    const EditArea = withEdit(Col, \"textarea\");\n\n    const handleEdit = async (value) => {\n        const result = await projectsApi.updateProject(props.match.params.projectId, auth.user.token, value);\n        console.log(result);\n    }\n\n    const renderLogItem = (item) => {\n        if(!item || !props.collaborators || props.collaborators.length === 0) return null;\n        const date = removeTimezoneFromDateString(new Date(item.createdAt).toString());\n        const collabInfo = new CollabInfo(collaborators.data);\n        const createdBy = collabInfo.get(item.createdBy);\n        const { collaboratorId } = JSON.parse(item.newData || item.oldData);\n        const oldData = JSON.parse(item.oldData);\n        const newData = JSON.parse(item.newData);\n        const collaborator = collabInfo.get(collaboratorId);\n        const text = projectLogItemText(item.action, createdBy, collaborator, date, { oldData, newData });\n        return <div>{text}</div>\n    }\n\n    return (\n        <Container fluid>\n                <Row className=\"justify-content-center\">\n                    <EditBox as=\"h3\" value={project.name} name=\"name\" onEdit={handleEdit}>\n                        {project.name}\n                    </EditBox>\n                </Row>\n                \n                <Row className=\"justify-content-center\">\n                    <EditArea as=\"p\" value={project.description} name=\"description\" onEdit={handleEdit}>\n                        {project.description}\n                    </EditArea>\n                </Row>\n\n                <Row>\n                    <Col as=\"h5\">Collaborators:</Col>\n                </Row>\n                \n                {\n                    collaborators && collaborators.data.map((collab, key) => {\n                        return (\n                            <Row key={key}>\n                                <Col style={{ textAlign: \"right\" }}>{`${collab.firstName} ${collab.lastName}`}</Col>\n                                <Col style={{ textAlign: \"left\" }}>{collab.userName}</Col>\n                            </Row>\n                        )\n                    })\n                }\n\n                <Row>\n                    <Col as=\"h5\">Issues:</Col>\n                </Row>\n                <Row style={{ justifyContent: \"center\" }}>{`There are ${project.issues && project.issues.length} issues related to this project`}</Row>\n\n                <Row style={{ justifyContent: \"center\" }}>\n                    <Col as=\"h5\">Project Log:</Col>\n                </Row>\n                <Row style={{ justifyContent: \"center\" }}>\n                    <List listItems={log.data} render={renderLogItem}/>\n                </Row>\n                <Row>{}</Row>\n        </Container>\n    );\n}\n\nexport default ProjectDetails;","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport useAuth from '../../hooks/useAuth';\nimport useProjects from '../../hooks/useProjects';\nimport useResource from '../../hooks/useResource';\n\nimport ProjectsNavBar from '../../components/app/Navigation/ProjectsNavBar';\nimport ProjectList from '../../components/app/ProjectList/ProjectList';\n\nimport NewProjectPage from '../../pages/NewProjectPage/NewProjectPage';\nimport NewIssuePage from '../../pages/NewIssuePage/NewIssuePage';\nimport IssueDashboard from '../../pages/IssueDashboard/IssueDashboard';\nimport ProjectDetails from '../../pages/ProjectDetails/ProjectDetails';\n\nimport useDialogBox from '../../hooks/useDialogBox';\nimport SelectForm from '../../components/form/SelectForm';\nimport useNotificationBanner from '../../hooks/useNotificationBanner';\n\nfunction ProjectDashboard({ match }) {\n    const auth = useAuth();\n    const projects = useProjects();\n    const notificationBanner = useNotificationBanner();\n    const [collaborators, ] = useResource('/api/user/all', auth.user ? auth.user.token : null);\n    const { show: showDeleteProjectDialogBox, RenderDialogBox: DeleteDialogBox } = useDialogBox(); \n    const { show: showAddCollaboratorDialogBox, RenderDialogBox: AddCollaboratorDialogBox } = useDialogBox(); \n\n    return (\n        <>\n            <DeleteDialogBox\n                heading=\"Delete Project\"\n                closeButtonText=\"Cancel\"\n                submitButtonText=\"Delete\"\n                onSubmit={async (project) => {\n                    await projects.handleDeleteProject(project);\n                    notificationBanner.showNotificationWithText(\"Project Successfully Deleted!\");\n                }}\n                render={({ data }) => 'Are you sure you would like to delete project with id ' + data.projectId + '?'}\n            />\n            <AddCollaboratorDialogBox\n                heading=\"Add Collaborator\"\n                submitButtonText=\"Add\"\n                formId=\"collaborator-select-form\"\n                onSubmit={async (data) => {\n                    await projects.handleAddCollaborator(data);\n                    notificationBanner.showNotificationWithText(\"Collaborator Successfully Added to Project!\");\n                }}\n                render={() => (\n                    <SelectForm \n                        formId=\"collaborator-select-form\"\n                        fieldName=\"collaboratorId\"\n                        initialValues={{ \"collaboratorId\": \"\" }}\n                        selectItems={collaborators.data} \n                        itemKey=\"userName\"\n                    />\n                )}\n            />\n            <Switch>\n                <Route path={match.url} exact render={() => (\n                    <>\n                        <ProjectsNavBar />\n                        <ProjectList \n                            projectList={projects.data} \n                            onDelete={showDeleteProjectDialogBox} \n                            onEdit={projects.handleEditProject} \n                            onAddCollaborator={showAddCollaboratorDialogBox} \n                        />\n                    </>\n                )}/>\n                <Route path={`${match.url}/:projectId/issues/new`} exact render={(routerProps) => \n                    <NewIssuePage \n                        {...routerProps} \n                        onSubmit={projects.handleCreateIssue} \n                        onCreateAttachmentRequest={projects.handleIssueAttachmentRequest}\n                        onAddAttachment={projects.addIssueAttachmentHandles}\n                    />\n                }/>\n                <Route path={`${match.url}/:projectId/issues`} render={(routerProps) => {\n                    const projectIdx = projects.data.findIndex(proj => proj.id === Number(routerProps.match.params.projectId));\n                    const issues = (projectIdx !== -1) ? projects.data[projectIdx].issues : []; \n                    return (\n                        <IssueDashboard \n                            {...routerProps} \n                            issues={issues} \n                            onDelete={projects.handleDeleteIssue} \n                            onAssign={projects.handleAssignIssue}\n                            onStart={projects.handleStartIssue} \n                            onClose={projects.handleCloseIssue}\n                            onEdit={projects.handleEditIssue}\n                            onCreateAttachmentRequest={projects.handleIssueAttachmentRequest}\n                            onAddAttachment={projects.addIssueAttachmentHandles}\n                        />\n                    )\n                }}/>\n                <Route path={`${match.url}/new`} exact render={(routerProps) => \n                    <NewProjectPage {...routerProps} onSubmit={projects.handleAddProject} />\n                }/>\n                <Route path={`${match.url}/:projectId/`} exact render={(routerProps) => {\n                    const project = projects.data.find(proj => proj.id === Number(routerProps.match.params.projectId));\n                    if(!project) return;\n                    return <ProjectDetails project={project} {...routerProps} />\n                }}/>\n            </Switch>\n        </>\n    )\n}\n\nexport default ProjectDashboard;","import { useContext } from \"react\";\nimport { projectsContext } from \"../contexts/ProjectsContext\";\n\nexport default function useProjects() {\n    return useContext(projectsContext);\n}","import React from 'react';\nimport { Row, Col } from 'react-bootstrap';\n\nimport './UserInfo.css';\n\nexport default function UserInfo(props) {\n    return (\n        <div className=\"user-info\">\n            <Row>\n                <Col lg={6} md={6} s={4} xs={12} className=\"label\">First Name: </Col>\n                <Col lg={6} md={6} s={8} xs={12} className=\"user-detail\">{ props.user.firstName }</Col>\n            </Row>\n\n            <Row>\n                <Col lg={6} md={6} s={4} xs={12} className=\"label\">Last Name: </Col>\n                <Col lg={6} md={6} s={8} xs={12} className=\"user-detail\">{ props.user.lastName }</Col>\n            </Row>\n\n            <Row>\n                <Col lg={6} md={6} s={4} xs={12} className=\"label\">User Name: </Col>\n                <Col lg={6} md={6} s={8} xs={12} className=\"user-detail\">{ props.user.userName }</Col>\n            </Row>\n\n            <Row>\n                <Col lg={6} md={6} s={4} xs={12}className=\"label\">Email: </Col>\n                <Col lg={6} md={6} s={8} xs={12}className=\"user-detail\">{ props.user.email }</Col>\n            </Row>\n\n        </div>\n    )\n}","import React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { Row, Col, Button } from 'react-bootstrap';\n\nimport { ChangePasswordSchema } from '../../utility/schema/validation';\n\nexport default function ChangePasswordForm(props) {\n    return (\n        <Formik\n            initialValues={{\n                currentPassword: \"\",\n                newPassword: \"\",\n                confirmNewPassword: \"\"\n            }}\n            onSubmit={async (values, { setSubmitting }) => {\n                setSubmitting(true);\n                await props.onSubmit(values.currentPassword, values.newPassword);\n                setSubmitting(false);\n            }}\n            validationSchema={ChangePasswordSchema}\n        >\n            {({ isSubmitting }) => (\n                <Form className=\"form\">\n                    <Row>\n                        <Col>\n                            <label htmlFor=\"currentPassword\">Current Password</label>\n                        </Col>\n                        <Col>\n                            <Field name=\"currentPassword\" type=\"password\" autoComplete=\"new-password\"/>\n                            <span className=\"form-error\">\n                                {props.error && <div>{props.error.message}</div>}\n                                <ErrorMessage name=\"currentPassword\"/>\n                            </span>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col>\n                            <label htmlFor=\"newPassword\">New Password</label>\n                        </Col>\n                        <Col>\n                            <Field name=\"newPassword\" type=\"password\" autoComplete=\"new-password\" />\n                            <span className=\"form-error\">\n                                <ErrorMessage name=\"newPassword\" />\n                            </span>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col>\n                            <label htmlFor=\"confirmNewPassword\">Confirm New Password</label>\n                        </Col>\n                        <Col>\n                            <Field name=\"confirmNewPassword\" type=\"password\" autoComplete=\"off\" />\n                            <span className=\"form-error\">\n                                <ErrorMessage name=\"confirmNewPassword\" />\n                            </span>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Button variant=\"primary\" type=\"submit\" disabled={isSubmitting}>Submit</Button>\n                    </Row>\n\n                </Form>\n            )}\n        </Formik>\n    )\n}","import React from 'react';\nimport { Container, Row } from 'react-bootstrap';\n\nimport { useAuth } from '../../hooks';\n\nimport UserInfo from '../../components/app/UserInfo/UserInfo';\n\nimport '../page.css';\nimport './UserAccountPage.css';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport ChangePasswordForm from '../../components/form/ChangePasswordForm';\n\nexport default function UserAccountPage(props) {\n    const auth = useAuth();\n\n    const handlePasswordChange = async (currentPassword, newPassword) => {\n        auth.changePassword(currentPassword, newPassword, async (err) => {\n            if(!err) {\n                await auth.logout(() => props.history.push('/dashboard'));\n            } else console.log(err);\n         });\n        \n    }\n\n    return (\n        <Switch>\n            <Route path={props.match.url} exact render={() => (\n                <Container fluid className=\"page\" id=\"user-account\">\n                    <Row as=\"h4\">Account Information</Row>\n                    <Row>\n                        <UserInfo user={auth.user} />\n                    </Row>\n                    <Row>\n                        <div>To change your password, click&nbsp;</div>\n                        <Link to=\"account/changePassword\">here</Link>{\".\"}\n                    </Row>\n                </Container>\n            )}/>\n\n            <Route path={props.match.url + \"/changePassword\"} exact render={() => (\n                <Container fluid className=\"page\" id=\"change-password\">\n                    <div> Change Password </div>\n                    <ChangePasswordForm onSubmit={handlePasswordChange} error={auth.error} />\n                </Container>\n            )}/>\n        </Switch>\n    )\n};","import React from 'react';\nimport useNotificationBanner from '../../../hooks/useNotificationBanner';\nimport './NotificationBanner.css';\n\nexport default function NotificationBanner(props) {\n    const banner = useNotificationBanner();\n    return (\n        <div className={'notification-banner-container ' + (banner.show ? \"show\" : \"\")}>\n            <div className=\"notification-banner\">\n                {banner.text}\n            </div>\n        </div>\n    );\n};","import React from 'react';\nimport { Switch, Route, BrowserRouter as Router } from 'react-router-dom';\n\nimport ProvideAuth from './contexts/AuthContext';\nimport ProvideProjects from './contexts/ProjectsContext';\n\nimport PrivateRoute from './utility/route/PrivateRoute';\nimport TopNavBar from './components/app/Navigation/TopNavBar';\n\nimport LoginPage from './pages/LoginPage/LoginPage';\nimport SignupPage from './pages/SignupPage/SignupPage';\nimport Dashboard from './pages/Dashboard/Dashboard';\nimport ProjectDashboard from './pages/ProjectDashboard/ProjectDashboard';\nimport UserAccountPage from './pages/UserAccountPage/UserAccountPage';\nimport NotificationBanner from './components/display/NotificationBanner/NotificationBanner';\nimport ProvideNotificationBanner from './contexts/NotificationBannerContext';\n\nfunction IssueTracker() {\n\n    return (\n        <Router>\n            <ProvideAuth>\n                <ProvideProjects>\n                    <ProvideNotificationBanner>\n                        <NotificationBanner />\n                        <TopNavBar />\n                        <Switch>\n                            <Route path=\"/login\" component={LoginPage} />\n                            <Route path=\"/signup\" component={SignupPage} />\n                            <PrivateRoute path=\"/dashboard\" component={Dashboard} />\n                            <PrivateRoute path=\"/projects\" component={ProjectDashboard} />\n                            <PrivateRoute path=\"/account\" component={UserAccountPage} />\n                            <PrivateRoute path=\"/\" component={Dashboard} />\n                        </Switch>\n                    </ProvideNotificationBanner>\n                </ProvideProjects>\n            </ProvideAuth>\n        </Router>\n    )\n\n\n}\n\nexport default IssueTracker;","import './App.css';\n\nimport IssueTracker from './IssueTracker';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <IssueTracker></IssueTracker>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}