{"version":3,"sources":["utility/local/authStorage.js","api/auth.js","contexts/AuthContext.js","hooks/useAuth.js","hooks/useResource.js","api/util.js","api/issues.js","api/projects.js","contexts/ProjectsContext.js","utility/route/PrivateRoute.js","components/display/Button/LinkButton.js","components/display/NavBar/NavBar.js","logo.svg","components/app/Navigation/TopNavBar.js","components/form/inputs/TextInput/TextInput.js","utility/schema/validation.js","components/form/LoginForm.js","pages/LoginPage/LoginPage.js","components/form/SignupForm.js","pages/SignupPage/SignupPage.js","pages/Dashboard/Dashboard.js","components/app/Navigation/ProjectsNavBar.js","components/display/List/ListItem.js","components/display/List/ListItemGroup.js","components/display/List/List.js","hooks/useFilteredItems.js","hooks/useGroupedItems.js","components/app/ProjectList/ProjectListOverviewCard.js","components/app/ProjectList/ProjectList.js","components/form/NewProjectForm.js","contexts/NotificationBannerContext.js","hooks/useNotificationBanner.js","pages/NewProjectPage/NewProjectPage.js","components/form/inputs/Dropzone/Dropzone.js","components/form/inputs/Upload/Upload.js","components/form/inputs/SelectInput/SelectInput.js","components/form/NewIssueForm.js","pages/NewIssuePage/NewIssuePage.js","components/app/Navigation/IssueNavBar.js","components/app/IssueList/IssueListButtonToolbar.js","components/app/IssueList/IssueListOverviewCard.js","components/app/IssueList/IssueList.js","components/app/IssueFilterControl/IssueFilterControl.js","components/hocs/withEdit/withEdit.js","utility/strings.js","images/edit-icon-png-small.png","components/app/CommentList/CommentList.js","components/display/DialogBox/DialogBox.js","hooks/useDialogBox.js","components/app/Navigation/IssueDetailNavBar.js","components/app/Attachments/Attachments.js","components/form/EditIssueDetailsForm.js","pages/IssueDetails/IssueDetails.js","utility/local/paramStorage.js","hooks/useListParams.js","components/form/SelectForm.js","components/form/InlineSearch.js","utility/CollabInfo.js","utility/log.js","pages/IssueLog/IssueLog.js","pages/IssueDashboard/IssueDashboard.js","pages/ProjectDetails/ProjectDetails.js","pages/ProjectDashboard/ProjectDashboard.js","hooks/useProjects.js","components/app/UserInfo/UserInfo.js","components/form/ChangePasswordForm.js","pages/UserAccountPage/UserAccountPage.js","components/display/NotificationBanner/NotificationBanner.js","IssueTracker.js","App.js","reportWebVitals.js","index.js"],"names":["authTokenKey","auth","isAuthenticated","login","credentials","cb","axios","post","userName","password","response","token","data","localStorage","setItem","user","message","tokenLogin","getItem","console","log","get","headers","signup","logout","removeItem","changePassword","currentPassword","newPassword","patch","authContext","createContext","ProvideAuth","props","useState","setUser","isLoading","setIsLoading","error","setError","useEffect","loginWithToken","a","authApi","userInfo","err","useProvideAuth","Provider","value","children","useAuth","useContext","useResource","path","authToken","forkedPaths","isError","resource","setResource","refresh","setRefresh","getResource","prev","fetchResource","length","promises","forEach","fork","push","Promise","all","responseData","map","res","id","filename","authHeader","projectId","issueInfo","issue","issueId","update","delete","assigneeId","status","comment","result","commentId","config","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","attachmentId","issuesApi","createIssue","updateIssue","deleteIssue","assignIssue","advanceIssue","addComment","updateComment","deleteComment","createAttachment","getAttachment","deleteAttachment","projectInfo","project","collaboratorId","projectsApi","createProject","updateProject","deleteProject","addProjectCollaborator","removeProjectCollaborator","projectsContext","ProvideProjects","projects","setProjects","handleDeleteProject","slice","index","findIndex","elem","splice","handleAddProject","newProject","issues","handleEditProject","updates","handleAddCollaborator","values","handleCreateIssue","issueDetails","newIssue","projectIdx","proj","Number","handleDeleteIssue","issueIdx","handleEditIssue","issueUpdates","Object","keys","updatedIssue","handleAssignIssue","handleStartIssue","handleCloseIssue","handleIssueAttachmentRequest","addIssueAttachmentHandles","attachmentHandles","currHandles","concat","handleRemoveIssueAttachment","useProvideProjects","PrivateRoute","component","Component","render","to","pathname","state","from","location","LinkButton","text","Button","as","Link","variant","NavBar","title","logo","Navbar","className","Brand","href","alt","src","Toggle","Collapse","TopNavBar","bg","expand","Nav","onClick","InputComponent","FormControl","name","type","TextInput","htmlFor","label","SignupSchema","Yup","shape","firstName","min","max","required","lastName","email","confirmPassword","oneOf","LoginSchema","ChangePasswordSchema","confirmNewPassword","ProjectSchema","description","IssueSchema","LoginForm","onSubmit","initialValues","validationSchema","setSubmitting","isSubmitting","Row","disabled","LoginPage","fromState","Container","fluid","Col","xs","sm","md","lg","SignupForm","form","autoComplete","SignupPage","redirect","setRedirect","xl","Dashboard","ProjectsNavBar","ListItem","item","ListItemGroup","items","collapse","setCollapse","idx","List","listItems","groupKey","groupValues","orderBy","filter","searchText","searchKeys","filteredItems","allowedValues","mapValues","obj","selectedFilters","pickBy","isAllowed","key","includes","toLowerCase","useFilteredItems","groupedItems","groupBy","useGroupedItems","listComponentArray","groupComponents","reverse","keyValue","listComponents","ProjectListOverviewCard","onDelete","onAddCollaborator","Card","Body","Title","size","Text","ButtonGroup","totalCollaborators","totalAssignedIssues","ProjectList","projectList","NewProjectForm","notificationBannerContext","ProvideNotificationBanner","notificationBanner","setText","show","setShow","showNotificationWithText","setTimeout","useProvideNotificationBanner","useNotificationBanner","NewProjectPage","createNewProject","Dropzone","onFilesAdded","highlight","setHighlight","fileInputRef","useRef","fileListToArray","fileList","array","i","onDragOver","e","preventDefault","onDragLeave","onDrop","files","dataTransfer","current","click","style","cursor","ref","multiple","onChange","target","initialUpload","isUploading","progress","successful","Upload","sendRequest","onClose","setUploadCallbacks","upload","setUpload","uploadCallbacks","uploadFiles","file","callbacks","FormData","append","progressCb","then","responses","successCb","catch","failureCb","onComplete","copy","percentage","uploading","renderProgress","uploadProgress","ProgressBar","now","opacity","updatedFiles","fileIndex","display","SelectInput","NewIssueForm","collaborators","category","priority","setFieldValue","submitForm","resetForm","val","NewIssuePage","match","params","addIssueAttachment","attachmentData","onCreateAttachmentRequest","addNewIssue","attachments","createAnother","onAddAttachment","IssueNavBar","IssueListButtonToolbar","onAssign","onStart","ButtonToolbar","DropdownButton","Dropdown","Item","IssueListOverviewCard","Subtitle","assignee","groups","IssueList","issueList","Checkmark","checked","IssueFilterControl","isOpen","setOpen","setAllFiltersTo","newValue","filterKeys","filters","filterKey","onSelect","checkAllFilters","uncheckAllFilters","isCleared","cleared","handleToggleFilterKey","group","eventKey","order","menuAlign","split","filterValue","newValues","onToggle","open","event","meta","source","Header","bug","feature","task","other","ItemText","critical","high","regular","low","trivial","unassigned","inprogress","resolved","closed","withEdit","WrappedComponent","onEdit","isEditing","editing","setEditing","setValue","inputRef","focus","handleKeyPress","handleSubmit","handleChange","onBlur","defaultValue","rows","cols","onKeyPress","options","opt","removeTimezoneFromDateString","dateString","string","searchTerm","n","indexOf","getNthIndexOf","commentBoxStyle","width","height","margin","CustomToggle","React","forwardRef","editIcon","CommentList","editId","setEditId","EditArea","showEditArea","handleEditComment","comments","creator","Date","created_at","toString","evt","Menu","body","DialogBox","heading","closeButtonText","submitButtonText","renderData","formId","Modal","onHide","closeButton","Footer","useDialogBox","visible","setVisible","setData","hide","RenderDialogBox","nodeList","input","extractInputValues","childNodes","IssueDetailNavBar","linkUrl","sticky","Attachments","setUploading","attachment","download","renderAttachmentItems","onCreate","EditIssueDetailsForm","initialTitle","initialDescription","initialCategory","initialPriority","IssueDetails","setAttachments","getAttachments","setComments","editMode","setEditMode","showDeleteCommentDialogBox","DeleteCommentDialogBox","EditSelect","handleAddComment","commentData","newComment","document","querySelector","handleDeleteComment","commentIdx","handleRemoveAttachment","onRemoveAttachment","attachmentIdx","advanceButtonText","history","goBack","hidden","opened_at","closed_at","Form","Group","controlId","Control","placeholder","paramKey","setLocalParamStorage","JSON","stringify","useListParams","initialParams","listParams","setListParams","store","parse","param","SelectForm","fieldName","selectItems","itemKey","selectOptions","InlineSearch","inline","noValidate","firstChild","alignItems","paddingTop","flexWrap","CollabInfo","collabArray","this","collabId","find","collab","issueLogItemText","logAction","logCreatedBy","logDate","logDataOld","logDataNew","changes","oldData","newData","_oldData","_newData","getChanges","changedKeys","IssueLog","date","createdAt","createdBy","action","initialFilterValue","IssueDashboard","showDeleteIssueDialogBox","DeleteIssueDialogBox","showAssignIssueDialogBox","AssignIssueDialogBox","showStartIssueDialogBox","StartIssueDialogBox","showCloseIssueDialogBox","CloseIssueDialogBox","search","changeListParams","exact","routerProps","iss","urlParts","url","pop","join","ProjectDetails","EditBox","handleEdit","textAlign","justifyContent","collabInfo","collaborator","logCollaborator","logData","projectLogItemText","ProjectDashboard","showDeleteProjectDialogBox","DeleteDialogBox","showAddCollaboratorDialogBox","AddCollaboratorDialogBox","UserInfo","s","ChangePasswordForm","UserAccountPage","handlePasswordChange","NotificationBanner","banner","IssueTracker","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e67b5edd.chunk.js","sourcesContent":["const authTokenKey = \"track_app_auth_token\";\n\nexport function setLocalAuthToken(token) {\n    localStorage.setItem(authTokenKey, token);\n}\n\nexport function getLocalAuthToken() {\n    return localStorage.getItem(authTokenKey);\n}\n\nexport function removeLocalAuthToken() {\n    localStorage.removeItem(authTokenKey);\n}","import axios from 'axios';\nimport { setLocalAuthToken, getLocalAuthToken, removeLocalAuthToken } from '../utility/local/authStorage';\n\nconst auth = {\n    isAuthenticated: false, \n    async login(credentials, cb) {\n        try{\n            const response = await axios.post(\n                '/api/auth/login', \n                { \n                    userName: credentials.userName, \n                    password: credentials.password \n                }\n            );\n            auth.isAuthenticated = true;\n            setLocalAuthToken(response.data.token);\n            cb({ ...response.data.user, token: response.data.token }, null);\n            return response.data;\n        } catch(err) {\n            auth.isAuthenticated = false;\n            cb(null, { message: err.response.data.message });\n        }\n    },\n    async tokenLogin(cb) {\n        const token = getLocalAuthToken();\n\n        if(!token) {\n            auth.isAuthenticated = false;\n            console.log(\"Token not found\");\n            cb(null);\n            return;\n        }\n\n        console.log(\"Token found\");\n        let response = null;\n        try {\n            response = await axios.get(\n                '/api/user/login',\n                { headers: { 'Authorization': `Bearer ${token}` } }\n            );\n            auth.isAuthenticated = true;\n            cb({ ...response.data, token }, null);\n        } catch(err) {\n            auth.isAuthenticated = false;\n            cb(null, { message: err.message });\n        }\n\n        return response;\n    },\n    async signup(user, cb) {\n        try {\n            const response = await axios.post(\n                '/api/auth/register',\n                { ...user }\n            );\n            console.log(response);\n            cb(response.data, null);\n            return response.data;\n        } catch(err) {\n            cb(null, { message: err.message });\n        }\n    },\n    async logout(cb) {\n        auth.isAuthenticated = false;\n        removeLocalAuthToken();\n        cb();\n    }, \n    async changePassword(currentPassword, newPassword, token, cb) {\n        try {\n            console.log(\"authApi\", { currentPassword, newPassword });\n            const response = await axios.patch(\n                '/api/user/changePassword',\n                { currentPassword, newPassword },\n                { headers: { 'Authorization': `Bearer ${token}` } }\n            );\n            console.log(response);\n            cb(null);\n            return response.data;\n        } catch(err) {\n            cb({ message: err.response.data.message });\n        }\n    }\n}\n\nexport default auth;","import React, { useState, useEffect, createContext } from 'react';\nimport authApi from '../api/auth';\n\nexport const authContext = createContext({ });\n\nexport default function ProvideAuth(props) {\n    const auth = useProvideAuth();\n\n    return (\n        <authContext.Provider value={auth}>\n            {props.children}\n        </authContext.Provider>\n    )\n}\n\nfunction useProvideAuth() {\n    const [user, setUser] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const loginWithToken = async () => {\n            await authApi.tokenLogin((user) => {\n                user ? console.log(\"Logged in as \" + user.userName) : console.log(\"Not logged in\");\n                setUser(user);\n                setError(null);\n                setIsLoading(false);\n            });\n        }\n        console.log(\"Logging in with token\");\n        setIsLoading(true);\n        loginWithToken();\n\n    }, []);\n\n    const signup = (userInfo, cb) => {\n        return authApi.signup(userInfo, (data) => {\n            console.log(data);\n            cb(data);\n        })\n    }\n\n    const login = (credentials, cb) => {\n        console.log(\"logging in\");\n        setIsLoading(true);\n        authApi.login(credentials, (user, error) => {\n            if(error) setError(error);\n            else {\n                setUser(user);\n                setError(null);\n                cb(user);\n            }\n        })\n        setIsLoading(false);\n    }\n\n    const logout = cb => {\n        return authApi.logout(() => {\n            setUser(null);\n            setError(null);\n            cb && cb();\n        });\n    }\n\n    const changePassword = (currentPassword, newPassword, cb) => {\n        return authApi.changePassword(currentPassword, newPassword, user.token, (err) => {\n            if(err) {\n                setError(err);\n                cb(err);\n            } else {\n                setError(null);\n                cb(null);\n            }\n        });\n    }\n\n    return {\n        user,\n        isLoading,\n        error,\n        signup,\n        login, \n        logout,\n        changePassword\n    }\n}","import { useContext } from \"react\";\nimport { authContext } from \"../contexts/AuthContext\";\n\nexport default function useAuth() {\n    return useContext(authContext);\n}","import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction useResource(path, authToken, forkedPaths = null) {\n    const [resource, setResource] = useState({\n        data: [],\n        isLoading: false,\n        isError: false\n    });\n\n    const [refresh, setRefresh] = useState(false);\n\n    const getResource = () => setRefresh(prev => !prev);\n\n    useEffect(() => {\n\n        const fetchResource = async () => {\n            setResource({ data: [], isLoading: true, isError: false });\n            try {\n                const headers = authToken ? { 'Authorization': `Bearer ${authToken}` } : {}\n                let response;\n                if(forkedPaths) {\n                    if(forkedPaths.length === 0) return setResource({ data: [], isLoading: false, isError: false });\n                    \n                    const promises = [];\n                    forkedPaths.forEach(fork => {\n                        promises.push(axios.get(path + \"/\" + fork, { headers }));\n                    });\n\n                    response = await Promise.all(promises);\n\n                    const responseData = response.map(res => ({\n                        id: res.headers['content-fileid'],\n                        filename: res.headers['content-filename'],\n                        data: res.data\n                    }));\n\n                    setResource({ data: responseData, isLoading: false, isError: false });\n                } else {\n                    response = await axios.get(path, { headers });\n                    setResource({ data: response.data, isLoading: false, isError: false });\n                }\n\n            } catch(err) {\n                console.log(err);\n                setResource({ data: err, isLoading: false, isError: true })\n            }\n        }\n\n        fetchResource();\n\n    }, [path, authToken, refresh]);\n\n    return [resource, setResource, getResource];\n}\n\nexport default useResource;","export function authHeader(authToken) {\n    return { 'Authorization': `Bearer ${authToken}`}\n}","import axios from 'axios';\nimport { authHeader } from './util';\n\nasync function createIssue(projectId, issueInfo, authToken) {\n    try {\n        const headers = authHeader(authToken)\n        const issue = await axios.post(`/api/projects/${projectId}/issues`, issueInfo, { headers });\n        return issue.data;\n    } catch(err) {\n        console.error(err);\n        throw err;\n    }\n}\n\nasync function updateIssue(projectId, issueId, update, authToken) {\n    try {\n        const headers = authHeader(authToken);\n        const issue = await axios.patch(`/api/projects/${projectId}/issues/${issueId}`, update, { headers });\n        return issue.data;\n    } catch(err) {\n        console.error(err);\n        throw err;\n    }\n}\n\nasync function deleteIssue(projectId, issueId, authToken) {\n    try {\n        const headers = authHeader(authToken);\n        const issue = await axios.delete(`/api/projects/${projectId}/issues/${issueId}`, { headers });\n        return issue.data;\n    } catch(err) {\n        console.error(err);\n        throw err;\n    }\n}\n\nasync function assignIssue(projectId, issueId, assigneeId, authToken) {\n    try {\n        const headers = authHeader(authToken);\n        const issue = await axios.patch(\n            `/api/projects/${projectId}/issues/${issueId}/assign`,\n            { assigneeId },\n            { headers }\n        )\n        return issue.data;\n    } catch(err) {\n        console.error(err);\n        throw err;\n    }\n}\n\nasync function advanceIssue(projectId, issueId, status, authToken) {\n    try {\n        const headers = authHeader(authToken);\n        const issue = await axios.patch(\n            `/api/projects/${projectId}/issues/${issueId}/advance`,\n            { status },\n            { headers }\n        )\n        return issue.data;\n    } catch(err) {\n        console.error(err);\n        throw err;\n    }\n}\n\nasync function addComment(projectId, issueId, comment, authToken) {\n    try {\n        const headers = authHeader(authToken);\n        const result = await axios.post(\n            `/api/projects/${projectId}/issues/${issueId}/comments`,\n            { comment },\n            { headers }\n        )\n        console.log(result);\n        return result.data;\n    } catch(err) {\n        console.error(err);\n        throw err;\n    }\n}\n\nasync function updateComment(projectId, issueId, commentId, comment, authToken) {\n    try {\n        const headers = authHeader(authToken);\n        const result = await axios.patch(\n            `/api/projects/${projectId}/issues/${issueId}/comments/${commentId}`,\n            { comment },\n            { headers }\n        )\n        console.log(result);\n        return result.data;\n    } catch(err) {\n        console.error(err);\n        throw err;\n    }\n}\n\nasync function deleteComment(projectId, issueId, commentId, authToken) {\n    try {\n        const headers = authHeader(authToken);\n        const result = await axios.delete(\n            `/api/projects/${projectId}/issues/${issueId}/comments/${commentId}`,\n            { headers }\n        )\n        console.log(result);\n        return result.data;\n    } catch(err) {\n        console.error(err);\n        throw err;\n    }\n}\n\n// This function returns a promise instead of waiting for it to resolve. \n// The callback is passed the current percentage of the upload\nasync function createAttachment(projectId, issueId, data, authToken, cb) {\n    try {\n        const headers = authHeader(authToken);\n        let config = {\n            onUploadProgress: function(progressEvent) {\n                let percentCompleted = Math.round( (progressEvent.loaded * 100) / progressEvent.total );\n                cb && (typeof cb === \"function\") && cb(percentCompleted);\n            },\n            headers\n        };\n        return axios.post(\n            `/api/projects/${projectId}/issues/${issueId}/attachments`,\n            data,\n            config\n        )\n    } catch(err) {\n        console.error(err);\n        throw err;\n    }\n}\n\nasync function getAttachment(projectId, issueId, attachmentId, authToken) {\n    try {\n        const headers = authHeader(authToken);\n        return axios.get(\n            `/api/projects/${projectId}/issues/${issueId}/attachments/${attachmentId}`,\n            { headers }            \n        );\n    } catch(err) {\n        console.error(err);\n        throw err;\n    }\n}\n\nasync function deleteAttachment(projectId, issueId, attachmentId, authToken) {\n    try {\n        const headers = authHeader(authToken);\n        const result = axios.delete(\n            `/api/projects/${projectId}/issues/${issueId}/attachments/${attachmentId}`,\n            { headers }\n        )\n        console.log(result);\n        return result;\n    } catch(err) {\n        console.error(err);\n        throw err;\n    }\n}\n\nconst issuesApi = {\n    createIssue, updateIssue, deleteIssue, assignIssue, advanceIssue, \n    addComment, updateComment, deleteComment, \n    createAttachment, getAttachment, deleteAttachment\n}\n\nexport default issuesApi;","import axios from 'axios';\nimport { authHeader } from './util';\n\nasync function createProject(projectInfo, authToken) {\n    try {\n        const headers = authHeader(authToken)\n        const project = await axios.post(\"/api/projects\", projectInfo, { headers });\n        return project;\n    } catch(err) {\n        console.error(err);\n        throw err;\n    }\n}\n\nasync function updateProject(projectId, authToken, update) {\n    try {\n        const headers = authHeader(authToken);\n        const project = await axios.patch(`/api/projects/${projectId}`, update, { headers });\n        return project;\n    } catch(err) {\n        console.error(err);\n        throw err;\n    }\n}\n\nasync function deleteProject(projectId, authToken) {\n    try {\n        const headers = authHeader(authToken);\n        const project = await axios.delete(`/api/projects/${projectId}`, { headers });\n        return project;\n    } catch(err) {\n        console.error(err);\n        throw err;\n    }\n}\n\nasync function addProjectCollaborator(projectId, collaboratorId, authToken) {\n    try {\n        const headers = authHeader(authToken);\n        const result = await axios.post(`/api/projects/${projectId}/collaborators`, { collaboratorId }, { headers })\n        return result;\n    } catch(err) {\n        console.error(err);\n        throw err;\n    }\n}\n\nasync function removeProjectCollaborator(projectId, collaboratorId, authToken) {\n    try {\n        const headers = authHeader(authToken);\n        const result = await axios.delete(`/api/projects/${projectId}/collaborators`, { collaboratorId }, { headers })\n        return result;\n    } catch(err) {\n        console.error(err);\n        throw err;\n    }\n}\n\nconst projectsApi = {\n    createProject, updateProject, deleteProject, addProjectCollaborator, removeProjectCollaborator\n}\n\nexport default projectsApi;","import React, { createContext } from 'react';\n\nimport useAuth from '../hooks/useAuth';\nimport useResource from '../hooks/useResource';\nimport issuesApi from '../api/issues';\nimport projectsApi from '../api/projects';\n\nexport const projectsContext = createContext({ });\n\nexport default function ProvideProjects(props) {\n    const projects = useProvideProjects();\n\n    return (\n        <projectsContext.Provider value={projects}>\n            {props.children}\n        </projectsContext.Provider>\n    );\n}\n\nfunction useProvideProjects() {\n    const auth = useAuth();\n    const [projects, setProjects] = useResource('/api/projects', auth.user ? auth.user.token : null);\n\n    const handleDeleteProject = async ({ data }) => {\n        await projectsApi.deleteProject(data.projectId, auth.user.token);\n        setProjects(prev => {\n            const projects = prev.data.slice();\n            const index = projects.findIndex(elem => elem.id === data.projectId);\n            projects.splice(index, 1);\n            return { ...prev, data: projects };\n        });\n    }\n\n    const handleAddProject = async (newProject) => {\n        const project = await projectsApi.createProject(newProject, auth.user.token);\n        setProjects(prev => {\n            const projects = prev.data.slice();\n            projects.push({ ...project.data, issues: [] }); // TODO: Modify backend to init empty array instead of here\n            return { ...prev, data: projects };\n        });\n    }\n\n    const handleEditProject = async (projectId, updates) => {\n\n    }\n\n    const handleAddCollaborator = async ({ data, values }) => {\n        await projectsApi.addProjectCollaborator(data.projectId, values.collaboratorId, auth.user.token);\n    }\n\n    const handleCreateIssue = async (projectId, issueDetails) => {\n        const newIssue = await issuesApi.createIssue(projectId, issueDetails, auth.user.token);\n        setProjects(prev => {\n            const projects = prev.data.slice();\n            const projectIdx = projects.findIndex(proj => proj.id === Number(projectId));\n            projects[projectIdx].issues.push(newIssue);\n            return { ...prev, data: projects}\n        });\n        return newIssue;\n    }\n\n    const handleDeleteIssue = async (projectId, issueId) => {\n        await issuesApi.deleteIssue(projectId, issueId, auth.user.token);\n        setProjects(prev => {\n            const projects = prev.data.slice();\n            const projectIdx = projects.findIndex(proj => proj.id === Number(projectId));\n            const issueIdx = projects[projectIdx] \n                && projects[projectIdx].issues \n                && projects[projectIdx].issues.length > 0 \n                && projects[projectIdx].issues.findIndex(issue => issue.id === Number(issueId));\n            projects[projectIdx].issues.splice(issueIdx, 1);\n            return { ...prev, data: projects }\n        });\n    }\n    \n    const handleEditIssue = async (projectId, issueId, issueUpdates) => {\n        //Do not fire request if there are no changes to the issue\n        if(Object.keys(issueUpdates).length === 0) return;\n\n        const updatedIssue = await issuesApi.updateIssue(projectId, issueId, issueUpdates, auth.user.token);\n        setProjects(prev => {\n            const projects = prev.data.slice();\n            const projectIdx = projects.findIndex(proj => proj.id === Number(projectId));\n            const issueIdx = projects[projectIdx] \n                && projects[projectIdx].issues \n                && projects[projectIdx].issues.length > 0 \n                && projects[projectIdx].issues.findIndex(issue => issue.id === Number(issueId));\n            projects[projectIdx].issues[issueIdx] = updatedIssue;\n            return { ...prev, data: projects }\n        });\n    }\n\n    const handleAssignIssue = async (projectId, issueId, collaboratorId) => {\n        const updatedIssue = await issuesApi.assignIssue(projectId, issueId, collaboratorId, auth.user.token);\n        setProjects(prev => {\n            const projects = prev.data.slice();\n            const projectIdx = projects.findIndex(proj => proj.id === Number(projectId));\n            const issueIdx = projects[projectIdx] \n                && projects[projectIdx].issues \n                && projects[projectIdx].issues.length > 0 \n                && projects[projectIdx].issues.findIndex(issue => issue.id === Number(issueId));\n            projects[projectIdx].issues[issueIdx] = updatedIssue;\n            return { ...prev, data: projects }\n        });\n    }\n\n    const handleStartIssue = async (projectId, issueId) => {\n        const updatedIssue = await issuesApi.advanceIssue(projectId, issueId, \"inprogress\", auth.user.token);\n        setProjects(prev => {\n            const projects = prev.data.slice();\n            const projectIdx = projects.findIndex(proj => proj.id === Number(projectId));\n            const issueIdx = projects[projectIdx] \n                && projects[projectIdx].issues \n                && projects[projectIdx].issues.length > 0 \n                && projects[projectIdx].issues.findIndex(issue => issue.id === Number(issueId));\n            projects[projectIdx].issues[issueIdx] = updatedIssue;\n            return { ...prev, data: projects }\n        });\n    } \n\n    const handleCloseIssue = async (projectId, issueId, status) => {\n        const updatedIssue = await issuesApi.advanceIssue(projectId, issueId, status, auth.user.token);\n        setProjects(prev => {\n            const projects = prev.data.slice();\n            const projectIdx = projects.findIndex(proj => proj.id === Number(projectId));\n            const issueIdx = projects[projectIdx] \n                && projects[projectIdx].issues \n                && projects[projectIdx].issues.length > 0 \n                && projects[projectIdx].issues.findIndex(issue => issue.id === Number(issueId));\n            projects[projectIdx].issues[issueIdx] = updatedIssue;\n            return { ...prev, data: projects }\n        });\n    }\n\n    const handleIssueAttachmentRequest = async (projectId, issueId, data, cb) => {\n        return issuesApi.createAttachment(projectId, issueId, data, auth.user.token, cb);\n    }\n\n    const addIssueAttachmentHandles = (projectId, issueId, attachmentHandles) => {\n        setProjects(prev => {\n            const projects = prev.data.slice();\n            const projectIdx = projects.findIndex(proj => proj.id === Number(projectId));\n            const issueIdx = projects[projectIdx] \n                && projects[projectIdx].issues \n                && projects[projectIdx].issues.length > 0 \n                && projects[projectIdx].issues.findIndex(issue => issue.id === Number(issueId));\n            const currHandles = projects[projectIdx].issues[issueIdx].attachmentHandles || [];\n            projects[projectIdx].issues[issueIdx].attachmentHandles = currHandles.concat(attachmentHandles);\n            return { ...prev, data: projects }\n        });\n    }\n\n    const handleRemoveIssueAttachment = async (projectId, issueId, attachmentId) => {\n        await issuesApi.deleteAttachment(projectId, issueId, attachmentId, auth.user.token);\n    }\n\n    return {\n        data: projects.data,\n        handleDeleteProject,\n        handleEditProject,\n        handleAddProject,\n        handleAddCollaborator,\n        handleDeleteIssue,\n        handleEditIssue,\n        handleCreateIssue,\n        handleAssignIssue,\n        handleStartIssue,\n        handleCloseIssue,\n        handleIssueAttachmentRequest,\n        handleRemoveIssueAttachment,\n        addIssueAttachmentHandles,\n    }\n}","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport useAuth from '../../hooks/useAuth';\n\n// A wrapper for <Route> that redirects to the login\n// screen if you're not yet authenticated.\nfunction PrivateRoute({ children, component, ...props }) {\n    let auth = useAuth();\n    const Component = component;\n    return (\n        <Route\n            {...props}\n            render={(props) =>\n            auth.user ? (\n                children || <Component {...props}/>\n            ) : (\n                <Redirect\n                    to={{\n                        pathname: \"/login\",\n                        state: { from: props.location }\n                    }}\n                />\n            )}\n        />\n    );\n}\n\nexport default PrivateRoute;","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { Link } from 'react-router-dom';\n\nfunction LinkButton({ to, text, ...props }) {\n    return (\n        <Button as={Link} to={to ? to : \"#\"} variant=\"outline-primary\" {...props}>\n            {text || props.children}\n        </Button>\n    );\n}\n\nexport default LinkButton;","import { Navbar } from 'react-bootstrap'\nimport './NavBar.css';\n\nfunction NavBar({ title, logo, render, ...props }) {\n    return (\n        <Navbar className=\"NavBar\" {...props}>\n            <Navbar.Brand id=\"brand\" href=\"/\">\n                {logo ? \n                    <img \n                        alt=\"\"\n                        src={logo}\n                        className=\"logo\"\n                    /> : \n                    null\n                }\n                {title}\n            </Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\" className=\"justify-content-end\">\n                {render()}\n            </Navbar.Collapse>\n        </Navbar>\n    )\n}\n\nexport default NavBar;","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React from 'react';\nimport { Nav } from 'react-bootstrap';\n\nimport LinkButton from '../../display/Button/LinkButton';\nimport NavBar from '../../display/NavBar/NavBar';\nimport useAuth from '../../../hooks/useAuth';\n\nimport logo from '../../../logo.svg';\n\nfunction TopNavBar(props) {\n    const auth = useAuth();\n\n    const logout = () => {\n        auth.logout(() => {\n            console.log(\"Logged out\")\n        })\n    }\n    \n    return (\n        <NavBar title=\"Issue Tracker\" logo={logo} bg=\"dark\" expand=\"sm\" render={() => (\n            <Nav >\n                { !auth.user ? <LinkButton className=\"m-sm-1\" to=\"login\">Login</LinkButton> : null }\n                { !auth.user ? <LinkButton className=\"m-sm-1\" to=\"signup\">Signup</LinkButton> : null }\n                { auth.user ? <LinkButton className=\"m-sm-1\" to=\"/dashboard\">Dashboard</LinkButton> : null }\n                { auth.user ? <LinkButton className=\"m-sm-1\" to=\"/account\">Account</LinkButton> : null }\n                { auth.user ? <LinkButton className=\"m-sm-1\" onClick={logout}>Logout</LinkButton> : null }\n            </Nav>\n        )} />\n    )\n}\n\nexport default TopNavBar;","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormControl } from 'react-bootstrap';\n\nimport './TextInput.css';\n\nconst InputComponent = (props) => (\n    <FormControl \n        name={props.name} \n        as={props.type === \"textarea\" ? \"textarea\" : \"input\"} \n        {...props}\n        className=\"form-input\"\n    />\n);\n\nexport default function TextInput(props) {\n    return (\n        <span className=\"text-input-container my-2\">\n            <label htmlFor={props.name}>{props.label}</label>\n            <span  className=\"form-error\">\n                <ErrorMessage {...props} />\n            </span>\n            <Field as={InputComponent} {...props} className=\"form-input\" />\n        </span>\n    )\n}","import * as Yup from 'yup';\n\nexport const SignupSchema = Yup.object().shape({\n    firstName: Yup.string()\n        .min(3, 'Too Short!')\n        .max(20, 'Too Long!')\n        .required('Required'),\n    lastName: Yup.string()\n        .min(3, 'Too Short!')\n        .max(20, 'Too Long!')\n        .required('Required'),\n    userName: Yup.string()\n        .min(3, 'Too Short!')\n        .max(20, 'Too Long!')\n        .required('Required'),\n    email: Yup.string()\n        .email('Invalid email')\n        .required('Required'),\n    password: Yup.string()\n        .min(6, 'Too Short!')\n        .max(20, 'Too Long!')\n        .required('Required'),\n    confirmPassword: Yup.string().oneOf([Yup.ref('password'), ''], 'Passwords do not match')\n});\n\nexport const LoginSchema = Yup.object().shape({\n    userName: Yup.string()\n        .min(3, 'Too Short!')\n        .max(20, 'Too Long!')\n        .required('Required'),\n    password: Yup.string()\n        .min(6, 'Too Short!')\n        .max(20, 'Too Long!')\n        .required('Required'),\n});\n\nexport const ChangePasswordSchema = Yup.object().shape({\n    currentPassword: Yup.string()\n        .min(6, 'Too Short!')\n        .max(20, 'Too Long!')\n        .required('Required'),\n    newPassword: Yup.string()\n        .min(6, 'Too Short!')\n        .max(20, 'Too Long!')\n        .required('Required'),\n    confirmNewPassword: Yup.string()\n        .oneOf([Yup.ref('newPassword'), null], 'Passwords must match')\n})\n\nexport const ProjectSchema = Yup.object().shape({\n    name: Yup.string()\n        .min(3, \"Too Short!\")\n        .max(30, \"Too Long!\")\n        .required(\"Required\"),\n    description: Yup.string()\n        .min(3, \"Too Short!\")\n        .max(512, \"Too Long!\")\n        .required(\"Required\")\n});\n\nexport const IssueSchema = Yup.object().shape({\n    title: Yup.string()\n        .min(3, \"Too Short!\")\n        .max(30, \"Too Long!\")\n        .required(\"Required\"),\n    description: Yup.string()\n        .min(3, \"Too Short!\")\n        .max(512, \"Too Long!\")\n        .required(\"Required\")\n});","import React from 'react';\nimport { Formik, Form } from 'formik';\nimport { Link } from 'react-router-dom';\nimport { Row, Button } from 'react-bootstrap';\n\nimport TextInput from './inputs/TextInput/TextInput';\nimport { LoginSchema } from '../../utility/schema/validation'\n\nfunction LoginForm({ onSubmit, ...props }) {\n    return (\n        <Formik\n            initialValues={{ userName: \"\", password: \"\" }}\n            validationSchema={LoginSchema}\n            onSubmit={async (values, { setSubmitting }) => {\n                setSubmitting(true);\n                try {\n                    await onSubmit(values)\n                } catch (err) {\n                    console.log(err);\n                }\n                setSubmitting(false);\n            }}\n        >\n            {({ isSubmitting }) => (\n                <Form className=\"form\">\n                    <Row as=\"h3\" className=\"center-align heading\">Login</Row>\n\n                    <Row as=\"h5\" className=\"left-align subheading\">Login to your account</Row>\n                    <Row as=\"p\" className=\"left-align message\">Welcome! You must log in to your account to view and manage your projects with [insert issue tracker name here]!</Row>\n\n                    <Row className=\"mx-4\">\n                        <TextInput name=\"userName\" type=\"text\" label=\"Username\" />\n                    </Row>\n\n                    <Row className=\"mx-4\">\n                        <TextInput name=\"password\" type=\"password\" label=\"Password\" />\n                    </Row>\n\n                    {props.error && <div className=\"form-error\">{props.error.message}</div>}\n\n                    <Row className=\"my-3\">\n                        <Button variant=\"primary\" type=\"submit\" disabled={isSubmitting}>\n                            Login\n                        </Button>\n                    </Row>\n\n                    <Row as=\"p\" className=\"center-align message\">Don't have an account yet? Please <Link to=\"signup\">&nbsp;Sign up&nbsp;</Link> to continue.</Row>\n                </Form>\n            )}\n        </Formik>\n    )\n}\n\nexport default LoginForm;","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Container, Col, Row } from 'react-bootstrap';\nimport useAuth from '../../hooks/useAuth';\nimport LoginForm from '../../components/form/LoginForm';\n\nimport '../page.css';\n\nfunction LoginPage(props) {\n    const auth = useAuth();\n\n    const login = (credentials) => (\n        auth.login(credentials, (user) => {\n            console.log(\"Signed in as \" + user.userName + \"!\");\n        })\n    );\n\n    const fromState = props.location.state ? props.location.state.from : null;\n\n    if (auth.isLoading) return <div>Loading...</div>;\n    if (auth.user) return <Redirect to={fromState ? fromState.pathname : \"/\"} />;\n\n    return (\n        <Container fluid className=\"page\">\n            <Row className=\"form-container\">\n                <Col xs={12} sm={8} md={6} lg={5}>\n                    <LoginForm onSubmit={login} error={auth.error} />\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default LoginPage;","import React from 'react';\nimport { Formik, Form } from 'formik';\nimport { Link } from 'react-router-dom';\nimport { Row, Button, Col } from 'react-bootstrap';\nimport { SignupSchema } from '../../utility/schema/validation';\nimport TextInput from './inputs/TextInput/TextInput';\n\nimport './form.css';\n\nfunction SignupForm(props) {\n    return (\n        <Formik\n            initialValues={{ firstName: \"\", lastName: \"\", email: \"\", userName: \"\", password: \"\", confirmPassword: \"\" }}\n            validationSchema={SignupSchema}\n            onSubmit={async (values, form) => {\n                form.setSubmitting(true);\n                try {\n                    await props.onSubmit(values);\n                } catch (err) {\n                    console.log(err);\n                }\n                form.setSubmitting(false);\n            }}\n        >\n            {({ isSubmitting }) => (\n                <Form className=\"form\" autoComplete=\"false\">\n                    <Row as=\"h3\" lg={1} className=\"center-align heading\">Sign Up</Row>\n\n                    <Row as=\"h5\" className=\"left-align subheading\">Sign up for an account</Row>\n                    <Row as=\"p\" className=\"left-align message\">Sign up today and you can begin keeping track of all tasks and issues related to your projects with [insert issue tracker name here]!</Row>\n\n                    <Row className=\"mx-4\">\n                        <Col xs={12} md={6}>\n                            <TextInput name=\"firstName\" type=\"text\" label=\"First name\" />\n                        </Col>\n                        <Col xs={12} md={6}>\n                            <TextInput name=\"lastName\" type=\"text\" label=\"Last name\" />\n                        </Col>\n                    </Row>\n\n                    <Row className=\"mx-4\">\n                        <Col xs={12} md={6}>\n                            <TextInput name=\"userName\" type=\"text\" label=\"User name\" />\n                        </Col>\n                        <Col xs={12} md={6}>\n                            <TextInput name=\"email\" type=\"text\" label=\"Email\" />\n                        </Col>\n                    </Row>\n\n                    <Row className=\"mx-4\">\n                        <Col xs={12} md={6}>\n                            <TextInput name=\"password\" type=\"password\" label=\"Password\" />\n                        </Col>\n                        <Col xs={12} md={6}>\n                            <TextInput name=\"confirmPassword\" type=\"password\" label=\"Confirm Password\" />\n                        </Col>\n                    </Row>\n\n                    <Row className=\"my-3\">\n                        <Button variant=\"primary\" type=\"submit\" disabled={isSubmitting}>Sign up</Button>\n                    </Row>\n                    \n                    <Row as=\"p\" className=\"center-align message\">Already have an account? Please <Link to=\"login\">&nbsp;Log in&nbsp;</Link> to continue.</Row>\n                </Form>\n            )}\n        </Formik>\n    )\n}\n\nexport default SignupForm;","import React, { useState } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { Redirect } from 'react-router-dom';\n\nimport SignupForm from '../../components/form/SignupForm';\nimport useAuth from '../../hooks/useAuth';\n\nimport '../page.css';\n\nfunction SignupPage() {\n    const auth = useAuth();\n    const [redirect, setRedirect] = useState(false); \n\n    const signup = async (userInfo) => {\n        await auth.signup(userInfo, (data) => {\n            console.log(data)\n        });\n        setRedirect(true);\n    }\n\n    return (\n        auth.isLoading ? \n            <div>Loading...</div> :\n            (auth.user || redirect) ?\n                <Redirect to=\"/\" /> :\n                <Container fluid className=\"page\">\n                    <Row className=\"form-container\">\n                        <Col  xs={12} sm={10} md={8} xl={6}>\n                            <SignupForm onSubmit={signup} />\n                        </Col>\n                    </Row>\n                </Container>\n    )\n}\n\nexport default SignupPage;","import React from 'react';\nimport { Button, Container } from 'react-bootstrap';\n\nimport LinkButton from '../../components/display/Button/LinkButton';\nimport './Dashboard.css';\n\nfunction Dashboard() {\n\n    return (\n        <Container className=\"tile-container\">\n            <LinkButton to=\"/projects\" className=\"tile\">Projects&Issues</LinkButton>\n            <Button className=\"tile\">Reports (Coming Soon)</Button>\n        </Container>       \n    )\n}\n\nexport default Dashboard;","import React from 'react';\nimport { Nav } from 'react-bootstrap';\n\nimport LinkButton from '../../display/Button/LinkButton';\nimport NavBar from '../../display/NavBar/NavBar';\n\nfunction ProjectsNavBar() {\n    return (\n        <NavBar title=\"Projects\" bg=\"light\" render={() => (\n            <Nav>\n                <LinkButton to=\"/projects/new\" className=\"m-sm-1\">Add New Project</LinkButton>\n            </Nav>\n        )}/>\n    )\n}\n\nexport default ProjectsNavBar;","import React from 'react';\n\nfunction ListItem({ item, render }) {\n    return (\n        <div className=\"list-item\" >{render(item)}</div>\n    )\n}\n\nexport default ListItem;","import React, { useState } from 'react';\nimport ListItem from './ListItem';\n\nfunction ListItemGroup({ name, value, items, render }) {\n    const [collapse, setCollapse] = useState(false);\n    return (\n        <div className={\"list-item-group \" + name }>\n            <div className={\"group-header \" + (collapse ? \"collapsed\" : \"\")} onClick={() => setCollapse(prev => !prev)}>{value}</div>\n            {\n                collapse ? null :\n                (items && items.length > 0) ? \n                    items.map((item, idx) => <ListItem key={`${value}-${idx}`} item={item} render={render} />)\n                :\n                    <div className=\"empty-group-message\">There are no items to display for this group</div>\n            }\n        </div>\n    )\n}\n\nexport default ListItemGroup;","import React from 'react';\n\nimport ListItem from './ListItem'\nimport ListItemGroup from './ListItemGroup';\nimport './List.css';\nimport { useFilteredItems } from '../../../hooks/useFilteredItems';\nimport { useGroupedItems } from '../../../hooks/useGroupedItems';\n\n\nfunction List({ listItems, groupKey = null, groupValues = null, orderBy = 'asc', filter = null, searchText = \"\", searchKeys = [], render }) {\n\n    const filteredItems = useFilteredItems(listItems, filter, searchText, searchKeys);\n    const groupedItems = useGroupedItems(filteredItems, groupKey);\n\n    const listComponents = () => {\n        let listComponentArray;\n        if(groupKey && groupValues) {\n            const groupComponents = [];\n            groupValues.forEach(value => {\n                const values = groupedItems[value];\n                groupComponents.push(<ListItemGroup key={`${groupKey}=${value}`} name={groupKey} value={value} items={values} render={render}/>);\n            })\n            listComponentArray = orderBy === 'desc' ? groupComponents.reverse() : groupComponents;\n        } else {\n            listComponentArray = filteredItems && filteredItems.map((item, idx) => <ListItem item={item} key={idx} keyValue={idx} render={render} />);\n        }\n\n        return listComponentArray;\n    }\n\n    return (\n        <div className=\"list-container\">\n            { listComponents() }\n        </div>\n    )\n}\n\nexport default List;","import { mapValues, pickBy, includes } from 'lodash';\n\nexport const useFilteredItems = (items, filter = null, searchText = \"\", searchKeys = []) => {\n    if(!filter) return items;\n    \n    // Maps property keys of 'filter' prop to an array containing the values that are not being filtered out\n    const allowedValues = mapValues(filter, (obj) => {\n        const selectedFilters = pickBy(obj, (value) => value === true);\n        return Object.keys(selectedFilters);\n    });\n    \n    const filteredItems = items && items.length > 0 && items.filter(item => {\n        const allowedKeys = Object.keys(allowedValues);\n        let isAllowed = true;\n        // Filter out items based on the current filter\n        for(let key of allowedKeys) {\n            if(includes(allowedValues[key], item[key]) === false) {\n                isAllowed = false;\n            }\n        }\n        // Also, filter out items not matching the current search (item['searchKeys'] !== 'searchText')\n        if(isAllowed && searchText !== \"\") {\n            for(let key of searchKeys) {\n                if(includes(item[key].toLowerCase(), searchText.toLowerCase()) === true) {\n                    isAllowed = true;\n                    break;\n                } else isAllowed = false;\n            }\n        }\n        return isAllowed;\n    });\n\n    return filteredItems ? filteredItems : items;\n}","import { groupBy } from 'lodash';\n\nexport const useGroupedItems = (items, groupKey = null) => {\n    if(!groupKey) return items;\n    const groupedItems = groupBy(items, (value) => value[groupKey]);\n    return groupedItems;\n}\n","import React from 'react';\nimport { Card, Button, ButtonGroup, Row, Col } from 'react-bootstrap';\nimport LinkButton from '../../display/Button/LinkButton';\n\nfunction ProjectListOverviewCard({ project, onDelete, onAddCollaborator }) {\n    return (\n        <Card className=\"project-list-card\">\n            <Card.Body className=\"left-side\">\n                <Row>\n                    <Col className=\"my-1\" xs={12} sm={6} xl={6}>\n                        <Card.Title>{project.name}</Card.Title>\n                    </Col>\n                    <Col className=\"my-1\" sm={6} xl={6}>\n                        <LinkButton size=\"sm\" className=\"\" to={`/projects/${project.id}`}>Details</LinkButton>\n                        <Button size=\"sm\" className=\"m-1\" onClick={() => onDelete({ projectId: project.id })}>Delete</Button>\n                    </Col>\n                    <Col className=\"my-1\" xs={12} xl={12}>\n                        <Card.Text>\n                            {project.description}\n                        </Card.Text>\n                    </Col>\n                </Row>\n            </Card.Body>\n\n            <Card.Body className=\"right-side\">\n                <Row>                    \n                    <Col xs={12} xl={3} className=\"content-group\">\n                        <Card.Title className=\"content-group-title\">Collaborators</Card.Title>\n                        <ButtonGroup className=\"buttons mx-2\">\n                            <LinkButton size=\"sm\">View</LinkButton>\n                            <Button variant=\"primary\" size=\"sm\" onClick={() => onAddCollaborator({projectId: project.id})}>Add</Button>\n                        </ButtonGroup>\n                        <Card.Text>\n                            {\"There are \" + project.totalCollaborators + \" collaborators\"}\n                        </Card.Text>\n                    </Col>\n\n                    <Col sm={12} xl={4}  className=\"content-group\">\n                        <Card.Title className=\"content-group-title\">Your Issues</Card.Title>\n                        <LinkButton className=\"mx-2\" size=\"sm\">View My Issues</LinkButton>\n                        <Card.Text>\n                            {\"You have \" + project.totalAssignedIssues + \" issues assigned to you\"}\n                        </Card.Text>\n                    </Col>\n\n                    <Col sm={12} xl={5}  className=\"content-group\">\n                        <Card.Title className=\"content-group-title\">All Issues</Card.Title>\n                        <ButtonGroup className=\"buttons mx-2\">\n                            <LinkButton variant=\"outline-primary\" to={`/projects/${project.id}/issues`} size=\"sm\">View Issues</LinkButton>\n                            <LinkButton variant=\"primary\" to={`/projects/${project.id}/issues/new`} size=\"sm\">Create Issue</LinkButton>\n                        </ButtonGroup>\n                        <Card.Text>\n                            {\"There are \" + project.issues.length + \" issues related to this project\"}\n                        </Card.Text>\n                    </Col>\n                </Row>\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default ProjectListOverviewCard;","import React from 'react';\n\nimport List from '../../display/List/List';\nimport ProjectListOverviewCard from './ProjectListOverviewCard';\nimport './ProjectList.css';\n\nfunction ProjectList({ projectList, ...props }) {\n    return (\n        projectList ? \n        <List listItems={projectList} render={item => (\n            <ProjectListOverviewCard project={item} {...props} />\n        )}/> : \n        \"No projects\"\n    );\n};\n\nexport default ProjectList;","import React from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport { Row, Col, Button } from 'react-bootstrap';\nimport TextInput from './inputs/TextInput/TextInput';\nimport { ProjectSchema } from '../../utility/schema/validation';\n\nfunction NewProjectForm({ onSubmit }) {\n    return (\n        <Formik\n            initialValues={{ name: \"\", description: \"\" }}\n            validationSchema={ProjectSchema}\n            onSubmit={async (values, { setSubmitting }) => {\n                setSubmitting(true);\n                try {\n                    await onSubmit(values)\n                } catch (err) {\n                    console.log(err);\n                }\n                setSubmitting(false);\n            }}\n        >\n            {({ isSubmitting }) => (\n                <Form className=\"form\">\n                    <Row as=\"h3\">Create New Project</Row>\n\n                    <TextInput name=\"name\" type=\"text\" label=\"Project name\"/>\n\n                    <TextInput name=\"description\" type=\"textarea\" label=\"Project description\"/>\n\n                    <Row className=\"my-4\">\n                        <Button variant=\"primary\" type=\"submit\" disabled={isSubmitting}>\n                            Create Project\n                        </Button>\n                    </Row>\n\n                </Form>\n            )}\n        </Formik>\n    )\n}\n\nexport default NewProjectForm;","import React, { useState, createContext } from 'react';\n\nexport const notificationBannerContext = createContext({ });\n\nexport default function ProvideNotificationBanner(props) {\n    const notificationBanner = useProvideNotificationBanner();\n\n    return (\n        <notificationBannerContext.Provider value={notificationBanner}>\n            {props.children}\n        </notificationBannerContext.Provider>\n    )\n}\n\nfunction useProvideNotificationBanner() {\n    const [text, setText] = useState(\"Notification Banner\");\n    const [show, setShow] = useState(false);\n\n    const showNotificationWithText = (value) => {\n        setText(value);\n        setShow(true);\n        setTimeout(() => { \n            setShow(false);\n            setText(\"\");\n        }, 5000);\n    }\n\n    return {\n        text,\n        show,\n        showNotificationWithText\n    }\n}","import { useContext } from \"react\";\nimport { notificationBannerContext } from \"../contexts/NotificationBannerContext\";\n\nexport default function useNotificationBanner() {\n    return useContext(notificationBannerContext);\n}","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nimport useAuth from '../../hooks/useAuth';\nimport NewProjectForm from '../../components/form/NewProjectForm';\nimport useNotificationBanner from '../../hooks/useNotificationBanner';\n\nfunction NewProjectPage(props) {\n    const auth = useAuth();\n    const notificationBanner = useNotificationBanner();\n    const [redirect, setRedirect] = useState(false);\n\n    const createNewProject = async (newProject) => {\n        try {\n            await props.onSubmit(newProject);\n            notificationBanner.showNotificationWithText(\"Project successfully created!\");\n            setRedirect(true);\n        } catch(err) {\n            notificationBanner.showNotificationWithText(err.message);\n        }\n    }\n\n    return (\n        redirect === true ?\n            <Redirect to=\"/projects\" /> :\n            <Container fluid className=\"page\">\n                <Row className=\"form-container\">\n                    <Col xs={12} sm={8} md={5} xl={4}>\n                        <NewProjectForm onSubmit={createNewProject} />\n                    </Col>\n                </Row>\n            </Container>\n    )\n}\n\nexport default NewProjectPage;","import React, { useState, useRef } from 'react';\nimport './Dropzone.css';\n\nfunction Dropzone({ name, disabled, onFilesAdded }) {\n    const [highlight, setHighlight] = useState(false);\n    const fileInputRef = useRef(null);\n\n    const openFileDialog = () => {\n        if(disabled) return;\n        fileInputRef.current.click();\n    }\n\n    const handleFilesAdded = (e) => {\n        if(disabled) return;\n        const files = e.target.files;\n        if(onFilesAdded) {\n            const array = fileListToArray(files);\n            onFilesAdded(array);\n        }\n    }\n\n    const handleDragOver = (e) => {\n        e.preventDefault();\n        setHighlight(true);\n    }\n\n    const handleDragLeave = () => {\n        setHighlight(false);\n    }\n\n    const handleDrop = (e) => {\n        e.preventDefault();\n        if(disabled) return;\n\n        const files = e.dataTransfer.files;\n        if(onFilesAdded) {\n            const array = fileListToArray(files);\n            onFilesAdded(array);\n        }\n\n        setHighlight(false);\n    }\n\n    const fileListToArray = (fileList) => {\n        const array = [];\n        for (let i = 0; i < fileList.length; i++) {\n            array.push(fileList.item(i));\n        }\n        return array;\n    }\n\n    return (\n        <div \n            className={`dropzone ${highlight ? 'highlight' : ''}`}\n            onDragOver={handleDragOver}\n            onDragLeave={handleDragLeave}\n            onDrop={handleDrop}\n            onClick={openFileDialog}\n            style={{ cursor: disabled ? 'default' : 'pointer' }}\n        >\n            <input \n                ref={fileInputRef}\n                name={name}\n                className=\"file-input\"\n                type=\"file\"\n                multiple\n                onChange={handleFilesAdded}\n            />\n            <img \n                alt=\"upload\"\n                className=\"icon\"\n                src=\"/upload_file_black_24dp.svg\"\n            />\n            <span>Upload Files</span>\n        </div>\n    )\n}\n\nexport default Dropzone;","import React, { useEffect, useState } from 'react';\nimport { Button, ProgressBar } from 'react-bootstrap';\nimport Dropzone from '../Dropzone/Dropzone';\n\nimport './Upload.css';\n\nconst initialUpload = {\n    files: [],\n    isUploading: false,\n    progress: {},\n    successful: false\n};\n\nfunction Upload({ onChange, sendRequest, onClose, setUploadCallbacks, ...props }) {\n    const [upload, setUpload] = useState(initialUpload);\n\n    useEffect(() => {\n        setUploadCallbacks && setUploadCallbacks(() => uploadCallbacks);\n    }, [setUploadCallbacks])\n\n    const handleFilesAdded = (files) => {\n        setUpload(prev => {\n            const updatedFiles = prev.files.concat(files);\n            onChange && onChange(updatedFiles);\n            return {\n                ...prev,\n                files: updatedFiles\n            }\n        });\n    }\n\n    const handleFilesRemoved = (fileIndex) => {\n        setUpload(prev => {\n            console.log(\"removing file:\", fileIndex)\n            const updatedFiles = prev.files.slice();\n            updatedFiles.splice(fileIndex, 1);\n            return {\n                ...prev,\n                files: updatedFiles\n            };\n        });\n    }\n\n    // Only when clicking the upload button in renderActions, else upload handled externally\n    const uploadFiles = async () => {\n        setUpload(prev => ({ ...prev, progress: {}, isUploading: true }));\n\n        const promises = [];\n        console.log(upload);\n        let callbacks;\n        upload.files && upload.files.forEach(file => {\n            console.log(\"sending request from upload\")\n            callbacks = uploadCallbacks(file);\n            const data = new FormData();\n            data.append('attachments', file);\n            promises.push(sendRequest(data, callbacks.progressCb));\n        });\n\n        try {\n            const attachmentHandles = await Promise.all(promises)\n                .then(responses => responses.map(response => response.data.id))\n                .then(data => {\n                    callbacks.successCb();\n                    return data;\n                })\n                .catch(err => callbacks.failureCb(err));\n\n            props.onComplete(attachmentHandles);\n        } catch(err) {\n            callbacks.failureCb(err);\n        }\n    }\n\n    const renderActions = () => {\n        if(!sendRequest) return null;\n\n        if(upload.successful) {\n            return (\n                <Button\n                    onClick={() => setUpload(initialUpload)}\n                >\n                    Clear\n                </Button>\n            )\n        } else {\n            return (\n                <Button \n                    disabled={!upload.files || upload.files.length < 0 || upload.isUploading}\n                    onClick={uploadFiles}\n                >\n                    Upload\n                </Button>\n            )\n        }\n    }\n\n    const uploadCallbacks = (file) => {\n        setUpload(prev => ({ ...prev, progress: {}, isUploading: true }));\n        return {\n            progressCb: (percentCompleted) => {\n                if(percentCompleted && percentCompleted !== 100) {\n                    console.log(\"isuploading\")\n                    setUpload(prev=> {\n                        const copy = { ...prev.progress }\n                        copy[file.name] = {\n                            state: \"pending\",\n                            percentage: percentCompleted\n                        }\n                        return { ...prev, progress: copy };\n                    });\n                } else if(percentCompleted) {\n                    console.log(\"issuccessful\")\n                    setUpload(prev=> {\n                        const copy = { ...prev.progress }\n                        copy[file.name] = {\n                            state: \"done\",\n                            percentage: percentCompleted\n                        }\n                        return { ...prev, progress: copy }\n                    });\n                }\n            },\n            successCb: () => { \n                console.log(\"calling success\");\n                setUpload(prev => ({...prev, successful: true, uploading: false }))\n            },\n            failureCb: (err) => { \n                console.log(\"calling failure\", err);\n                setUpload(prev=> ({ ...prev, successful: false, uploading: false }))\n            }\n        }\n    }\n\n    const renderProgress = (file) => {\n        const uploadProgress = upload.progress && upload.progress[file.name];\n        if(upload.isUploading || upload.successful) {\n            return (\n                <div className=\"progress-wrapper\">\n                    <ProgressBar now={uploadProgress ? uploadProgress.percentage : 0} />\n                    <img \n                        className=\"successful-icon\"\n                        alt=\"successful\"\n                        src=\"/file_download_done_black_24dp.svg\"\n                        style={{\n                            opacity:\n                                uploadProgress && uploadProgress.state === \"done\" ? 0.5 : 0\n                        }}\n                    />\n                </div>\n            )\n        }\n    }\n\n    return (\n        <div className=\"upload\">\n            <div className=\"header\">\n                <span className=\"title\">Upload Files</span>\n                { onClose &&\n                    <button \n                        className=\"close-upload link\"\n                        onClick={() => onClose()}\n                    >\n                        X\n                    </button>\n                }\n            </div>\n            <div className=\"content\">\n                <div>\n                    <Dropzone \n                        name={props.name}\n                        onFilesAdded={handleFilesAdded}\n                        disabled={upload.isUploading || upload.successful}\n                    />\n                </div>\n                <div className=\"files\">\n                    {\n                        upload.files && upload.files.map((file, idx) => (\n                            <div className=\"file-progress\" key={`file.name-${idx}`}>\n                                <span className=\"filename\">{file.name}</span>\n                                {renderProgress(file)}{\" \"}\n                                <button \n                                    className=\"remove-attachment link\"\n                                    onClick={() => handleFilesRemoved(idx)}\n                                    style={{ \n                                        display: upload.isUploading || upload.successful ? \"none\" : \"inline\"\n                                    }}\n                                >\n                                    X\n                                </button>\n                            </div>\n                        ))\n                    }\n                </div>\n            </div>\n            <div className=\"actions\">{renderActions()}</div>\n        </div>\n    );\n}\n\nexport default Upload;","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\n\nimport './SelectInput.css';\n\nexport default function SelectInput(props) {\n    return (\n        <span className=\"input-container my-2\">\n            <label htmlFor={props.name}>{props.label}</label>\n            <span className=\"form-error\">\n                <ErrorMessage {...props} />\n            </span>\n            \n            <Field as=\"select\" {...props} className=\"form-input\">\n                {props.children}\n            </Field>\n        </span>\n    )\n}","import React, { useState } from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport { Row, Col, Button } from 'react-bootstrap';\n\nimport Upload from './inputs/Upload/Upload';\nimport TextInput from './inputs/TextInput/TextInput';\nimport SelectInput from './inputs/SelectInput/SelectInput';\nimport { IssueSchema } from '../../utility/schema/validation';\n\nfunction NewIssueForm({ onSubmit, collaborators }) {\n    const [uploadCallbacks, setUploadCallbacks] = useState({\n        progressCb: (percentCompleted) => { console.log(percentCompleted) },\n        successCb: () => { console.log(\"Successful upload\") },\n        failureCb: () => { console.log(\"Failed upload\") }\n    });\n\n    return (\n        <Formik\n            initialValues={{ title: \"\", description: \"\", category: \"other\", priority: \"regular\", status: \"unassigned\", assigneeId: \"\" }}\n            validationSchema={IssueSchema}\n            onSubmit={async (values, { setSubmitting }) => {\n                setSubmitting(true);\n                try {\n                    const newIssue = values;\n\n                    await onSubmit(newIssue, uploadCallbacks);\n\n                } catch (err) {\n                    console.log(err);\n                }\n                setSubmitting(false);\n            }}\n        >\n            {({ isSubmitting, setFieldValue, submitForm, resetForm }) => (\n                <Form className=\"form\" id=\"new-issue-form\">\n                    <Row as=\"h3\">Add New Issue</Row>\n\n                    <TextInput name=\"title\" type=\"text\" label=\"Issue Title\" />\n\n                    <TextInput name=\"description\" type=\"textarea\" label=\"Description\" />\n\n                    <SelectInput name=\"category\" label=\"Category\">\n                        <option value=\"bug\">Bug</option>\n                        <option value=\"feature\">Feature</option>\n                        <option value=\"task\">Task</option>\n                        <option value=\"other\">Uncategorized</option>\n                    </SelectInput>\n\n                    <SelectInput name=\"priority\" label=\"Priority\">\n                        <option value=\"trivial\">Trivial</option>\n                        <option value=\"low\">Low</option>\n                        <option value=\"regular\">Regular</option>\n                        <option value=\"high\">High</option>\n                        <option value=\"critical\">Critical</option>\n                    </SelectInput>\n\n                    <Row className=\"input-container\">\n                        <label htmlFor=\"attachments\">Attachments</label>\n                        <Col xl={6}>\n                            <Field\n                                name=\"attachments\"\n                                as={Upload}\n                                onChange={val => setFieldValue('attachments', val)}\n                                setUploadCallbacks={setUploadCallbacks}\n                                className=\"form-input\"\n                            />\n                        </Col>\n                    </Row>\n\n                    <SelectInput name=\"assign\" label=\"Assign\">\n                        <option value=\"\">Unassigned</option>\n                        {\n                            collaborators.map(user => <option key={user.id} value={user.id}>{user.userName}</option>)\n                        }\n                    </SelectInput>\n\n                    <Field name=\"createAnother\" type=\"checkbox\" style={{ display: \"none\" }}></Field>\n\n                    <Row>\n                        <Button variant=\"primary\" type=\"submit\" disabled={isSubmitting}>\n                            Add Issue\n                        </Button>\n                        <Button\n                            variant=\"outline-primary\"\n                            className=\"mx-1\"\n                            disabled={isSubmitting}\n                            onClick={async () => {\n                                setFieldValue(\"createAnother\", true);\n                                await submitForm();\n                                resetForm();\n                            }}\n                        >\n                            Add And Create Another\n                        </Button>\n                    </Row>\n\n                </Form>\n            )}\n        </Formik>\n    )\n}\n\nexport default NewIssueForm;","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nimport NewIssueForm from '../../components/form/NewIssueForm';\nimport useResource from '../../hooks/useResource';\nimport useAuth from '../../hooks/useAuth';\nimport useNotificationBanner from '../../hooks/useNotificationBanner';\n\nfunction NewIssuePage(props) {\n    const auth = useAuth();\n    const notificationBanner = useNotificationBanner();\n    const [collaborators, setCollaborators] = useResource(\n        `/api/projects/${props.match.params.projectId}/collaborators`,\n        auth.user ? auth.user.token : null\n    );\n    const [redirect, setRedirect] = useState(false);\n\n    const addIssueAttachment = async (issueId, attachmentData, cb) => {\n        console.log(\"in new issue page\")\n        return props.onCreateAttachmentRequest(props.match.params.projectId, issueId, attachmentData, cb);\n    }\n\n    const addNewIssue = async (newIssue, cb) => {\n        try {\n            const attachments = newIssue.attachments;\n            delete newIssue.attachments;\n\n            const createAnother = newIssue.createAnother;\n            delete newIssue.createAnother;\n\n            const issue = await props.onSubmit(props.match.params.projectId, newIssue);\n\n            let callbacks = cb(null);\n            const promises = [];\n            attachments && attachments.forEach(file => {\n                callbacks = cb(file);\n                const data = new FormData();\n                data.append('attachments', file);\n                promises.push(addIssueAttachment(issue.id, data, callbacks.progressCb));\n            })\n\n            const attachmentHandles = await Promise.all(promises)\n                .then(responses => responses.map(response => response.data.id))\n                .then(data => {\n                    callbacks.successCb();\n                    return data;\n                })\n                .catch(err => callbacks.failureCb(err));\n\n            props.onAddAttachment(props.match.params.projectId, issue.id, attachmentHandles);\n\n            notificationBanner.showNotificationWithText(\"Issue successfully added!\");\n\n            setRedirect(createAnother ? false : true);\n        } catch(err) {\n            notificationBanner.showNotificationWithText(err.message);\n        }\n    }\n\n    return (\n        redirect === true ?\n            <Redirect to={`/projects/${props.match.params.projectId}/issues`} /> :\n            <Container fluid className=\"page\">\n                <Row className=\"form-container\">\n                    <Col xs={12} sm={6}>\n                        <NewIssueForm onSubmit={addNewIssue} collaborators={collaborators.data} />\n                    </Col>\n                </Row>\n            </Container >\n    )\n}\n\nexport default NewIssuePage;","import React from 'react';\nimport { Nav } from 'react-bootstrap';\n\nimport LinkButton from '../../display/Button/LinkButton';\nimport NavBar from '../../display/NavBar/NavBar';\n\nfunction IssueNavBar({ render }) {\n    return (\n        <NavBar title=\"Issues\" bg=\"light\" expand=\"lg\" render={() => (\n            <Nav>\n                {render()}\n                <LinkButton to=\"issues/new\" variant=\"outline-secondary\" className=\"m-sm-1\">Add New Issue</LinkButton>\n            </Nav>\n        )}/>\n    )\n}\n\nexport default IssueNavBar;","import React from 'react';\nimport { Button, Dropdown, DropdownButton, ButtonGroup, ButtonToolbar } from 'react-bootstrap';\nimport LinkButton from '../../display/Button/LinkButton';\n\nconst IssueListButtonToolbar = ({ projectId, issue, onDelete, onAssign, onStart, onClose }) => {\n    const handleDeleteIssue = () => onDelete({ projectId: projectId, issueId: issue.id });\n    const handleAssignIssue = () => onAssign({ projectId: projectId, issueId: issue.id });\n    const handleStartIssue = () => onStart({ projectId: projectId, issueId: issue.id });\n    const handleCloseIssue = () => onClose({ projectId: projectId, issueId: issue.id });\n    const handleAdvanceIssueClick = (e) => {\n        if(issue.status === \"unassigned\") return handleAssignIssue(e);\n        if(issue.status === \"open\") return handleStartIssue(e);\n        if(issue.status === \"inprogress\") return handleCloseIssue(e);\n    }\n\n    const advanceIssueButtonText = () => {\n        if(issue.status === \"unassigned\") return \"Assign\"\n        if(issue.status === \"open\" || issue.status === \"inprogress\") return \"Advance\"\n        if(issue.status === \"resolved\") return \"Resolved\";\n        return \"Closed\";\n    }\n\n    return (\n        <ButtonToolbar className=\"issue-list-button-toolbar\">\n            <ButtonGroup className=\"issue-list-button-group\">\n                <LinkButton variant=\"primary\" to={`/projects/${projectId}/issues/${issue.id}`} size=\"sm\">View</LinkButton>\n                <Button \n                    variant=\"primary\"\n                    size=\"sm\"\n                    onClick={handleAdvanceIssueClick}\n                    disabled={issue.status === \"resolved\" || issue.status === \"closed\"}\n\n                >\n                    {advanceIssueButtonText()}\n                </Button>\n                <DropdownButton as={ButtonGroup} variant=\"secondary\" size=\"sm\" title=\"Settings\">\n                    <Dropdown.Item>Edit Issue</Dropdown.Item>\n                    <Dropdown.Item onClick={handleDeleteIssue}>Delete Issue</Dropdown.Item>\n                </DropdownButton>\n            </ButtonGroup>\n        </ButtonToolbar>\n    )\n}\n\nexport default IssueListButtonToolbar;","import React from 'react';\nimport { Card, Row, Col } from 'react-bootstrap';\nimport IssueListButtonToolbar from './IssueListButtonToolbar';\n\nfunction IssueListOverviewCard({ projectId, issue, ...props }) {\n    return (\n        <Card className=\"issue-list-card-container\">\n            <Card.Body className=\"issue-list-card-body\">\n                <Row className=\"issue-list-row\">\n                    <Col sm={5} xl={2}>\n                        <Card.Title>{issue.title}</Card.Title>\n                    </Col>\n                    <Col sm={7} xl={3}>\n                        <Card.Text>\n                            {issue.description.slice(0, 64) + \" ...\"}\n                        </Card.Text>\n                    </Col>\n                    \n                    <Col xs={6} sm={2} xl={1} className=\"py-2\">\n                        <Card.Subtitle>Category</Card.Subtitle>\n                        <Card.Text>\n                            {issue.category}\n                        </Card.Text>\n                    </Col>\n\n\n                    <Col xs={6} sm={2} xl={1} className=\"py-2\">\n                        <Card.Subtitle>Priority</Card.Subtitle>\n                        <Card.Text>\n                            {issue.priority}\n                        </Card.Text>\n                    </Col>\n\n                    <Col xs={6} sm={2} xl={1} className=\"py-2\">\n                        <Card.Subtitle>Status</Card.Subtitle>\n                        <Card.Text>\n                            {issue.status}\n                        </Card.Text>\n                    </Col>\n\n\n                    <Col xs={6} sm={2} xl={1} className=\"py-2\">\n                        <Card.Subtitle>Assigned</Card.Subtitle>\n                        <Card.Text>\n                            {issue.assignee ? issue.assignee : \"None\"}\n                        </Card.Text>\n                    </Col>\n\n                    <Col xs={12} sm={4} xl={1} className=\"py-2\">\n                        <IssueListButtonToolbar \n                            projectId={projectId} issue={issue} {...props}\n                        />\n                    </Col>\n                </Row>\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default IssueListOverviewCard;","import React from 'react';\nimport List from '../../display/List/List';\nimport IssueListOverviewCard from './IssueListOverviewCard';\nimport './IssueList.css';\n\nconst groups = { \n    priority: ['trivial', 'low', 'regular', 'high', 'critical'],\n    category: ['other', 'task', 'feature', 'bug'],\n    status: ['closed', 'resolved', 'inprogresss', 'open', 'unassigned'] \n}\n\nfunction IssueList({ projectId, issueList, groupBy, orderBy, filter, searchText, searchKeys, ...props }) {\n    return issueList && issueList.length > 0 ?\n        <List\n            listItems={issueList} \n            groupKey={groupBy}\n            groupValues={groups[groupBy]}\n            orderBy={orderBy}\n            filter={filter}\n            searchText={searchText}\n            searchKeys={searchKeys}\n            render={item => <IssueListOverviewCard projectId={projectId} issue={item} {...props} />}\n        />\n        : \n        <div className=\"empty-list-message\">\n            <span>There are currently no issues to display for this project. </span> \n            <a href=\"issues/new\">Click here </a> \n            <span>to create an issue.</span>\n        </div>\n}\n\nexport default IssueList;","import React, { useState } from 'react';\nimport { Dropdown, DropdownButton, ButtonGroup } from 'react-bootstrap';\nimport './IssueFilterControl.css';\n\nfunction Checkmark({ checked, name, id, onClick }) {\n    return (\n        <div className=\"checkmark\" id={id} name={name} onClick={onClick}>\n            {checked ? \"\\u2713\" : \"\"}\n        </div>\n    )\n}\n\nfunction IssueFilterControl(props) {\n    const [isOpen, setOpen] = useState(false);\n\n    const toggleShow = (open, event, meta) => {\n        if(meta.source !== \"select\") setOpen(open);\n    }\n\n    const handleSelectGroup = (group) => {\n        props.onSelect(\"group\", group);\n    }\n\n    const handleSelectOrder = (order) => {\n        props.onSelect(\"order\", order);\n    }\n\n    const handleSelectFilter = (filter) => {\n        const [filterKey, filterValue] = filter.split(\" \");\n        const newValues = { ...props.filters[filterKey] };\n        newValues[filterValue] = !newValues[filterValue];\n        const filters = { ...props.filters, [filterKey]: newValues };\n        props.onSelect(\"filter\", filters);\n    }\n\n    const setAllFiltersTo = (key, newValue) => {\n        const filterKeys = Object.keys(props.filters);\n        const filters = { ...props.filters };\n        if(key === \"\") {\n            filterKeys.forEach(filterKey => {\n                Object.keys(props.filters[filterKey]).forEach(value => {\n                    filters[filterKey][value] = newValue;\n                });\n            });\n        } else {\n            Object.keys(props.filters[key]).forEach(value => {\n                filters[key][value] = newValue;\n            });\n        }\n        props.onSelect(\"filter\", filters);\n    }\n\n    const checkAllFilters = (key = \"\") => { setAllFiltersTo(key, true); }\n    const uncheckAllFilters = (key = \"\") => { setAllFiltersTo(key, false); }\n\n    const isCleared = (key = \"\") => {\n        const filters = { ...props.filters };\n        let cleared = true;\n        if(key === \"\") {\n            const filterKeys = Object.keys(props.filters);\n            filterKeys.forEach(filterKey => {\n                Object.keys(props.filters[filterKey]).forEach(value => {\n                    if(filters[filterKey][value] === true) cleared = false;\n                });\n            });\n        } else {\n            Object.keys(props.filters[key]).forEach(value => {\n                if(filters[key][value] === true) cleared = false;\n            });\n        }\n        return cleared;\n    }\n\n    const handleToggleAll = () => {\n        isCleared() ? checkAllFilters() : uncheckAllFilters()\n    }\n\n    const handleToggleFilterKey = (key) => {\n        isCleared(key) ? checkAllFilters(key) : uncheckAllFilters(key)\n    }\n\n    return (\n        <ButtonGroup className={props.className}>\n            <DropdownButton className=\"m-1\" variant=\"outline-primary\" title=\"Group by\" onSelect={handleSelectGroup}>\n                <Dropdown.Item eventKey=\"none\">None</Dropdown.Item>\n                <Dropdown.Item eventKey=\"category\">Category</Dropdown.Item>\n                <Dropdown.Item eventKey=\"status\">Status</Dropdown.Item>\n                <Dropdown.Item eventKey=\"priority\">Priority</Dropdown.Item>\n            </DropdownButton>\n\n            <DropdownButton className=\"m-1\" variant=\"outline-primary\" title=\"Order\" onSelect={handleSelectOrder}>\n                <Dropdown.Item eventKey=\"asc\">Ascending</Dropdown.Item>\n                <Dropdown.Item eventKey=\"desc\">Desccending</Dropdown.Item>\n            </DropdownButton>\n\n            <DropdownButton show={isOpen} className=\"filterDropdown m-1\" variant=\"outline-primary\" title=\"Filter\" menuAlign=\"right\" onSelect={handleSelectFilter} onToggle={toggleShow}>\n                <div className=\"filters\">\n                    <div className=\"dropdown-item-group\">\n                        <Dropdown.Header>Category</Dropdown.Header>\n                        <Dropdown.Item eventKey=\"category bug\">\n                            <Checkmark name=\"bug\" id=\"checkbox-bug\" checked={props.filters.category.bug} />\n                            <label htmlFor=\"checkbox-bug\">Bug</label>\n                        </Dropdown.Item>\n                        <Dropdown.Item eventKey=\"category feature\">\n                            <Checkmark name=\"feature\" id=\"checkbox-feature\" checked={props.filters.category.feature} />\n                            <label htmlFor=\"checkbox-feature\">Feature</label>\n                        </Dropdown.Item>\n                        <Dropdown.Item eventKey=\"category task\">\n                            <Checkmark name=\"task\" id=\"checkbox-task\" checked={props.filters.category.task} />\n                            <label htmlFor=\"checkbox-task\">Task</label>\n                        </Dropdown.Item>\n                        <Dropdown.Item eventKey=\"category other\">\n                            <Checkmark name=\"other\" id=\"checkbox-other\" checked={props.filters.category.other} />\n                            <label htmlFor=\"checkbox-other\">Other</label>\n                        </Dropdown.Item>\n                        <Dropdown.ItemText onClick={() => { handleToggleFilterKey(\"category\") }}>{isCleared() ? \"All\" : \"Clear\"}</Dropdown.ItemText>\n                    </div>\n                    \n                    <div className=\"dropdown-item-group\">\n                        <Dropdown.Header>Priority</Dropdown.Header>\n                        <Dropdown.Item eventKey=\"priority critical\">\n                            <Checkmark name=\"critical\" id=\"checkbox-critical\" checked={props.filters.priority.critical} />\n                            <label htmlFor=\"checkbox-critical\">Critical</label>\n                        </Dropdown.Item>\n                        <Dropdown.Item eventKey=\"priority high\">\n                            <Checkmark name=\"high\" id=\"checkbox-high\" checked={props.filters.priority.high} />\n                            <label htmlFor=\"checkbox-high\">High</label>\n                        </Dropdown.Item>\n                        <Dropdown.Item eventKey=\"priority regular\">\n                            <Checkmark name=\"regular\" id=\"checkbox-regular\" checked={props.filters.priority.regular} />\n                            <label htmlFor=\"checkbox-regular\">Regular</label>\n                        </Dropdown.Item>\n                        <Dropdown.Item eventKey=\"priority low\">\n                            <Checkmark name=\"low\" id=\"checkbox-low\" checked={props.filters.priority.low} />\n                            <label htmlFor=\"checkbox-low\">Low</label>\n                        </Dropdown.Item>\n                        <Dropdown.Item eventKey=\"priority trivial\">\n                            <Checkmark name=\"trivial\" id=\"checkbox-trivial\" checked={props.filters.priority.trivial} />\n                            <label htmlFor=\"checkbox-trivial\">Trivial</label>\n                        </Dropdown.Item>\n                        <Dropdown.ItemText onClick={() => { handleToggleFilterKey(\"priority\") }}>{isCleared() ? \"All\" : \"Clear\"}</Dropdown.ItemText>\n                    </div>\n\n                    <div className=\"dropdown-item-group\">\n                        <Dropdown.Header>Status</Dropdown.Header>\n                        <Dropdown.Item eventKey=\"status unassigned\">\n                            <Checkmark name=\"unassigned\" id=\"checkbox-unassigned\" checked={props.filters.status.unassigned} />\n                            <label htmlFor=\"checkbox-unassigned\">Unassigned</label>\n                        </Dropdown.Item>\n                        <Dropdown.Item eventKey=\"status open\">\n                            <Checkmark name=\"open\" id=\"checkbox-open\" checked={props.filters.status.open} />\n                            <label htmlFor=\"checkbox-open\">Open</label>\n                        </Dropdown.Item>\n                        <Dropdown.Item eventKey=\"status inprogress\">\n                            <Checkmark name=\"inprogress\" id=\"checkbox-inprogress\" checked={props.filters.status.inprogress} />\n                            <label htmlFor=\"checkbox-inprogress\">In-progress</label>\n                        </Dropdown.Item>\n                        <Dropdown.Item eventKey=\"status resolved\">\n                            <Checkmark name=\"resolved\" id=\"checkbox-resolved\" checked={props.filters.status.resolved} />\n                            <label htmlFor=\"checkbox-resolved\">Resolved</label>\n                        </Dropdown.Item>\n                        <Dropdown.Item eventKey=\"status closed\">\n                            <Checkmark name=\"closed\" id=\"checkbox-closed\" checked={props.filters.status.closed} />\n                            <label htmlFor=\"checkbox-closed\">Closed</label>\n                        </Dropdown.Item>\n                        <Dropdown.ItemText onClick={() => { handleToggleFilterKey(\"status\") }}>{isCleared() ? \"All\" : \"Clear\"}</Dropdown.ItemText>\n                    </div>\n                    <Dropdown.ItemText onClick={handleToggleAll}>{isCleared() ? \"Check All\" : \"Clear All\"}</Dropdown.ItemText>\n                </div>\n            </DropdownButton>\n        </ButtonGroup>\n    )\n}\n\nexport default IssueFilterControl;","import React, { useState, useRef, useEffect } from 'react';\nimport { Col } from 'react-bootstrap';\nimport './withEdit.css';\n\nconst withEdit = (WrappedComponent, type) => (\n    ({ onEdit, name, isEditing = false, ...props }) => { // isEditing prop is used to force editing mode from outside\n        const [editing, setEditing] = useState(isEditing);\n        const [value, setValue] = useState(props.value);\n        const inputRef = useRef();\n\n        useEffect(() => {\n            inputRef && inputRef.current && inputRef.current.focus();\n        }, [editing, isEditing]);\n\n        const handleClick = () => {\n            if(isEditing) return;\n            setEditing(true);\n        }\n\n        const handleKeyPress = (e) => {\n            if(e.key === \"Enter\") {\n                handleSubmit(e);\n            }\n        }\n\n        const handleChange = (e) => {\n            setValue(e.target.value);\n        }\n\n        const handleBlur = () => {\n            (props.onBlur && props.onBlur()) || setEditing(false);\n        }\n\n        const handleSubmit = (e) => {\n            e.preventDefault();\n            onEdit({ [inputRef.current.name]: value });\n            setEditing(false);\n        }\n\n        const inputComponent = () => {\n            if(type === \"text\") {\n                return (\n                    <input \n                        ref={inputRef} \n                        name={name}\n                        type={type} \n                        defaultValue={value} \n                        onChange={handleChange} \n                    />\n                )\n            } else if(type === \"textarea\") {\n                return (\n                    <textarea \n                        ref={inputRef}\n                        name={name} \n                        defaultValue={value} \n                        rows={5}\n                        cols={75}\n                        onChange={handleChange} \n                        onKeyPress={handleKeyPress}\n                    />\n                )\n            } else if(type === \"select\") {\n                return (\n                    <select\n                        ref={inputRef}\n                        name={name}\n                        defaultValue={value}\n                        onChange={handleChange}\n                        onKeyPress={handleKeyPress}\n                    >\n                        {\n                            props.options && props.options.map((opt, idx) => (\n                                <option key={idx} value={opt}>\n                                    {opt}\n                                </option>\n                            ))\n                        }\n                    </select>\n                )\n            }\n            return null;\n        }\n\n        return editing ? (\n            <Col xs={props.xs} sm={props.sm} md={props.md} lg={props.lg}>\n                <form onBlur={handleBlur} onSubmit={handleSubmit}>\n                    {inputComponent()}\n                </form>\n            </Col>\n        ) : (\n            <div className=\"component-wrapper\">\n                <WrappedComponent {...props} onClick={handleClick}>\n                    {props.children}\n                </WrappedComponent>\n            </div>\n        )\n    }\n)\n\nexport default withEdit;","const getNthIndexOf = (string, searchTerm, n) => {\n    let i = 0, index = 0;\n\n    while(i < n && index >= 0) {\n        index = string.indexOf(searchTerm, index + 1);\n        i++;\n    }\n\n    return index;\n}\n\nexport const removeTimezoneFromDateString = (dateString) => {\n    const index = getNthIndexOf(dateString, \" \", 5);\n    const res = dateString.slice(0, index);\n    return res;\n} \n","export default __webpack_public_path__ + \"static/media/edit-icon-png-small.4aeb2e4d.png\";","import React, { useState } from 'react';\nimport { Row, Col, Dropdown } from 'react-bootstrap';\nimport List from '../../display/List/List';\nimport withEdit from '../../hocs/withEdit/withEdit';\nimport { removeTimezoneFromDateString } from '../../../utility/strings';\nimport editIcon from '../../../images/edit-icon-png-small.png';\n\n\nconst commentBoxStyle = {\n    width: \"50vw\",\n    height: \"100%\",\n    margin: \"1em\",\n};\n\nconst CustomToggle = React.forwardRef(({ onClick }, ref) => (\n    <img \n        alt=\"\"\n        src={editIcon}\n        width=\"25\"\n        height=\"25\"\n\n        ref={ref}\n        onClick={onClick}\n    />\n));\n\nfunction CommentList(props) {\n    const [editId, setEditId] = useState(null);\n\n    const EditArea = withEdit(Col, 'textarea');\n\n    const handleDropdownSelect = (e, id) => {\n        if(e === \"delete\") return props.onDelete({ commentId: id });\n        if(e === \"edit\") return showEditArea(id);\n    }\n\n    const showEditArea = (commentId) => {\n        setEditId(commentId);\n    } \n\n    const handleEditComment = (comment) => {\n        props.onEdit(editId, comment);\n        setEditId(null);\n    }\n\n    return (\n        <List listItems={props.comments} render={(item) => (\n            <Row style={commentBoxStyle} key={item.id}>\n                <Col lg={11} md={11} sm={10} xs={9}>\n                {\n                    \"Posted By: \" + \n                    item.creator + \n                    \" on \" + \n                    removeTimezoneFromDateString(new Date(item.created_at).toString()) \n                }\n                </Col>\n                <Col lg={1} md={1} sm={2} xs={3}>\n                    <Dropdown onSelect={evt => handleDropdownSelect(evt, item.id)}>\n                        <Dropdown.Toggle as={CustomToggle} />\n\n                        <Dropdown.Menu>\n                            <Dropdown.Item eventKey=\"edit\">Edit</Dropdown.Item>\n                            <Dropdown.Item eventKey=\"delete\">Delete</Dropdown.Item>\n                        </Dropdown.Menu>\n                    </Dropdown>\n                </Col>\n                <EditArea \n                    lg={11} md={11} sm={11} xs={11}\n                    name=\"body\"\n                    value={item.body}\n                    isEditing={editId === item.id}\n                    onEdit={handleEditComment}\n                    onBlur={() => setEditId(null)}\n                >\n                    {item.body}\n                </EditArea>\n            </Row>\n        )}/>\n    )\n}\n\nexport default CommentList;","import React from 'react';\nimport { Modal, Button } from 'react-bootstrap';\n\nfunction DialogBox({\n    show,\n    heading,\n    closeButtonText,\n    submitButtonText,\n    onSubmit,\n    onClose,\n    render,\n    renderData,\n    formId = null,\n}) {\n    return (\n        <Modal show={show} onHide={onClose}>\n            <Modal.Header closeButton>\n                <Modal.Title>{heading ? heading : \"\"}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>{render({ data: renderData })}</Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={onClose}>\n                    {closeButtonText ? closeButtonText : \"Close\"}\n                </Button>\n                <Button variant=\"primary\" type=\"submit\" form={formId} onClick={onSubmit}>\n                    {submitButtonText ? submitButtonText : \"Submit\"}\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    )\n}\n\n\nexport default DialogBox;","import { useState } from 'react';\nimport DialogBox from '../components/display/DialogBox/DialogBox';\n\nfunction extractInputValues(nodeList) {\n    if(nodeList.length === 0) return {};\n    const values = {};\n    \n    nodeList.forEach(input => { \n        values[input.name] = input.value;\n    });\n\n    return values;\n}\n\nfunction useDialogBox() {\n    const [visible, setVisible] = useState(false);\n    const [data, setData] = useState({});\n\n    const show = (data) => {\n        setData(data);\n        setVisible(true);\n    }\n\n    const hide = () => {\n        setVisible(false);\n    }\n\n    const RenderDialogBox = (props) => {\n        const handleSubmit = (event) => {\n            const evt = event;\n            evt.preventDefault();\n            const values = evt.target.form && extractInputValues(evt.target.form.childNodes);\n            typeof props.onSubmit === \"function\" && props.onSubmit({ data, values });\n            hide();\n        }\n\n        return <DialogBox {...props} onSubmit={handleSubmit} show={visible} renderData={data} onClose={hide}/>\n    };\n\n    return {\n        show, RenderDialogBox\n    }\n}\n\nexport default useDialogBox;","import React from 'react';\nimport { Nav, Button } from 'react-bootstrap';\n\nimport LinkButton from '../../display/Button/LinkButton';\nimport NavBar from '../../display/NavBar/NavBar';\nimport './Navigation.css';\n\nfunction IssueDetailNavBar({ title, linkUrl, ...props }) {\n    return (\n        <NavBar title={\"Issue: \" + title} {...props} bg=\"light\" sticky=\"top\" render={() => (\n            <Nav>\n                {props.render && typeof props.render === \"function\" && props.render()}\n                <LinkButton variant=\"outline-dark\" to={linkUrl ? linkUrl + \"/new\" : \"./new\"}>Add New Issue</LinkButton>\n            </Nav>\n        )}/>    \n    )\n}\n\n\n\n\nexport default IssueDetailNavBar;","import React, { useState } from 'react';\nimport Upload from '../../form/inputs/Upload/Upload';\nimport './Attachments.css'\n\nfunction Attachments(props) {\n    const [uploading, setUploading] = useState(false);\n    const renderAttachmentItems = () => {\n        const items = [];\n        props.attachments && props.attachments.forEach((attachment, idx) => {\n            items.push(\n                <li key={`attachment-${idx}`}>\n                    <span>{attachment.filename}</span>{\" \"}\n                    <a href={attachment.data} download={attachment.filename}>Download</a>{\" \"}\n                    <button className=\"link\" onClick={() => {\n                        props.onDelete(attachment.id)\n                    }}>Remove</button>\n                </li>\n            )\n        });\n        return items;\n    }\n\n    return (\n        <>\n            <ul className=\"attachments-list\">\n                {\n                    renderAttachmentItems()\n                }   \n            </ul>\n            {uploading ? \n                <Upload \n                    sendRequest={props.onCreate}\n                    onComplete={props.onComplete}\n                    onClose={() => { setUploading(false) }}\n                /> \n                : <button \n                    className=\"link\" \n                    onClick={() => { setUploading(true) }}\n                >\n                    Add Attachment\n                </button>\n            }\n        </>\n    );\n}\n\nexport default Attachments;","import React from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport { Row, Col } from 'react-bootstrap';\nimport { IssueSchema } from '../../utility/schema/validation';\n\nfunction EditIssueDetailsForm(props) {\n    return(\n        <Formik\n            initialValues={{ \n                title: props.initialTitle,\n                description: props.initialDescription,\n                category: props.initialCategory,\n                priority: props.initialPriority\n            }}\n            onSubmit={(values) => {\n                props.onSubmit(values);\n            }}\n            validationSchema={IssueSchema}\n        >\n            {() => (\n                <Form id=\"edit-issue-form\" >\n                    <Row className=\"justify-content-center title\">\n                        <Col>\n                            <Field name=\"title\" type=\"text\" className=\"form-input\" />\n                            <span className=\"form-error\">\n                                <ErrorMessage name=\"title\" />\n                            </span>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col lg={4} md={4} sm={4} xs={4}>\n                            <label htmlFor=\"description\">Description</label>\n                        </Col>\n                        <Col lg={6} md={6} sm={6} xs={6}>\n                            <Field name=\"description\" as=\"textarea\" className=\"form-input\" />\n                            <span className=\"form-error\">\n                                <ErrorMessage name=\"description\" className=\"form-error\" />\n                            </span>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col lg={4} md={4} sm={4} xs={4}>\n                            <label htmlFor=\"category\">Category</label>\n                        </Col>\n                        <Col lg={6} md={6} sm={6} xs={6}>\n                            <Field name=\"category\" as=\"select\" className=\"form-input\">\n                                <option value=\"bug\">Bug</option>\n                                <option value=\"feature\">Feature</option>\n                                <option value=\"task\">Task</option>\n                                <option value=\"other\">Other</option>\n                            </Field>\n                            <span className=\"form-error\">\n                                <ErrorMessage name=\"category\" className=\"form-error\" />\n                            </span>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col lg={4} md={4} sm={4} xs={4}>\n                            <label htmlFor=\"priority\">Priority</label>\n                        </Col>\n                        <Col lg={6} md={6} sm={6} xs={6}>\n                            <Field name=\"priority\" as=\"select\" className=\"form-input\">\n                                <option value=\"trivial\">Trivial</option>\n                                <option value=\"low\">Low</option>\n                                <option value=\"regular\">Regular</option>\n                                <option value=\"high\">High</option>\n                                <option value=\"critical\">Critical</option>\n                            </Field>\n                            <span className=\"form-error\">\n                                <ErrorMessage name=\"priority\" className=\"form-error\" />\n                            </span>\n                        </Col>\n                    </Row>\n                </Form>\n            )}\n        </Formik>\n    )\n}\n\nexport default EditIssueDetailsForm;","import React, { useState } from 'react';\nimport { Container, Row, Col, Button, Form } from 'react-bootstrap';\nimport CommentList from '../../components/app/CommentList/CommentList';\nimport useResource from '../../hooks/useResource';\nimport useAuth from '../../hooks/useAuth';\nimport useDialogBox from '../../hooks/useDialogBox';\nimport withEdit from '../../components/hocs/withEdit/withEdit';\nimport issuesApi from '../../api/issues';\nimport IssueDetailNavBar from '../../components/app/Navigation/IssueDetailNavBar';\nimport Attachments from '../../components/app/Attachments/Attachments';\nimport LinkButton from '../../components/display/Button/LinkButton';\nimport { removeTimezoneFromDateString } from '../../utility/strings';\nimport './IssueDetails.css';\nimport EditIssueDetailsForm from '../../components/form/EditIssueDetailsForm';\nimport useNotificationBanner from '../../hooks/useNotificationBanner';\n\nfunction IssueDetails({ issue, onEdit, ...props }) {\n    const auth = useAuth();\n    const [attachments, setAttachments, getAttachments] = useResource(\n        `/api/projects/${props.match.params.projectId}/issues/${props.match.params.issueId}/attachments`,\n        auth.user ? auth.user.token : null,\n        issue.attachmentHandles\n    )\n    const [comments, setComments] = useResource(\n        `/api/projects/${props.match.params.projectId}/issues/${props.match.params.issueId}/comments`,\n        auth.user ? auth.user.token : null\n    );\n    const [editMode, setEditMode] = useState(false);\n    const notificationBanner = useNotificationBanner();\n    const { show: showDeleteCommentDialogBox, RenderDialogBox: DeleteCommentDialogBox } = useDialogBox();\n\n    const EditSelect = withEdit(Col, \"select\");\n\n    const handleEditIssue = async (values) => {\n        //Remove the fields that have not been changed\n        for(let key in values) \n            if(values[key] === issue[key]) delete values[key];\n\n        await onEdit(props.match.params.projectId, issue.id, values);\n\n        setEditMode(false);\n    }\n\n    const handleAddComment = async (e) => {\n        e.preventDefault();\n        const commentData = e.target[1].value\n        try {\n            const newComment = await issuesApi.addComment(props.match.params.projectId, issue.id, commentData, auth.user.token);\n            setComments(prev => {\n                const comments = prev.data.slice();\n                comments.push(newComment);\n                return { ...prev, data: comments }\n            });\n            const commentBox = document.querySelector(\"textarea#comment\");\n            commentBox.value = \"\";\n            notificationBanner.showNotificationWithText(\"Comment successfully added\");\n        } catch(err) {\n            notificationBanner.showNotificationWithText(err.message);\n        }\n    }\n\n    const handleDeleteComment = async ({ data }) => {\n        try {\n            await issuesApi.deleteComment(props.match.params.projectId, issue.id, data.commentId, auth.user.token)\n            setComments(prev => {\n                    const comments = prev.data.slice();\n                    const commentIdx = comments.findIndex(comment => comment.id === data.commentId);\n                    if(commentIdx !== -1) comments.splice(commentIdx, 1);\n                    return { ...prev, data: comments };\n                });\n                notificationBanner.showNotificationWithText(\"Comment successfully deleted\");\n        } catch(err) {\n            notificationBanner.showNotificationWithText(err.message);\n        }\n    }\n\n    const handleEditComment = async (commentId, commentData) => {\n        try {\n            const comment = await issuesApi.updateComment(\n                props.match.params.projectId, \n                issue.id, \n                commentId, \n                commentData.body, \n                auth.user.token\n            );\n            setComments(prev => {\n                const comments = prev.data.slice();\n                const commentIdx = comments.findIndex(comment => comment.id === commentId);\n                comments[commentIdx] = comment;\n                return { ...prev, data: comments };\n            });\n            notificationBanner.showNotificationWithText(\"Comment successfully edited\");\n        } catch(err) {\n            notificationBanner.showNotificationWithText(err.message);\n        }\n    }\n\n    const handleRemoveAttachment = async (attachmentId) => {\n        try {\n            await props.onRemoveAttachment(props.match.params.projectId, issue.id, attachmentId, auth.user.token);\n            setAttachments(prev => {\n                const attachments = prev.data.slice();\n                const attachmentIdx = attachments.findIndex(attachment => attachment.id === attachmentId);\n                if(attachmentIdx !== -1) attachments.splice(attachmentIdx, 1);\n                return { ...prev, data: attachments };\n            });\n        } catch(err) {\n            console.error(err);\n        }\n    }\n\n    const advanceButtonText = (issue.status === \"unassigned\") ? \"Assign Issue\" :\n        (issue.status === \"open\") ? \"Advance Issue\" :\n        (issue.status === \"inprogress\") ? \"Close Issue\" : \n        issue.status;\n\n    const handleAdvanceIssue = () => {\n        if(issue.status === \"unassigned\") return props.onAssign({ projectId: props.match.params.projectId, issueId: issue.id });\n        if(issue.status === \"open\") return props.onStart({ projectId: props.match.params.projectId, issueId: issue.id });\n        return props.onClose({ projectId: props.match.params.projectId, issueId: issue.id });\n    }\n\n    return (\n        <>\n            <IssueDetailNavBar title={issue.title} render={() => {\n                return (\n                    <> \n                        <Button\n                            className=\"stick-left\"\n                            variant=\"outline-dark\"\n                            onClick={() => { props.history.goBack() }\n                        }>Back to All Issues</Button>\n                        {editMode &&\n                            <>\n                                <Button\n                                    variant=\"outline-dark\" \n                                    className=\"mx-1\" \n                                    form=\"edit-issue-form\"\n                                    type=\"submit\"\n                                >\n                                    Save\n                                </Button>\n                            \n                                <Button\n                                    variant=\"outline-dark\" \n                                    className=\"mx-1\" \n                                    onClick={() => setEditMode(false)}\n                                >\n                                    Cancel\n                                </Button>\n                            </>\n                        }\n                        {!editMode &&\n                            <Button \n                                variant=\"outline-dark\" \n                                className=\"mx-1\" \n                                onClick={() => { setEditMode(true) }}\n                            >\n                                Edit\n                            </Button>\n                        }\n                    </>\n                )\n            }}/>\n            <Container className=\"IssueDetails\" fluid>\n                <DeleteCommentDialogBox \n                    heading=\"Delete Project\"\n                    closeButtonText=\"Cancel\"\n                    submitButtonText=\"Delete\"\n                    onSubmit={handleDeleteComment}\n                    render={({ data }) => 'Are you sure you would like to delete this comment: ' + data.commentId + '?'}\n                />\n                {editMode ?\n                    <EditIssueDetailsForm \n                        initialTitle={issue.title} \n                        initialDescription={issue.description}\n                        initialCategory={issue.category}\n                        initialPriority={issue.priority}\n                        onSubmit={handleEditIssue}\n                    /> \n                    : \n                    <>\n                        <Row className=\"justify-content-center title\">\n                            <h3>{issue.title}</h3>\n                        </Row>\n\n                        <Row>\n                            <Col lg={4} md={4} sm={4} xs={4}>Description</Col>\n                            <Col \n                                as=\"p\" lg={6} md={6} sm={6} xs={6}\n                                name=\"description\" \n                            >\n                                {issue.description}\n                            </Col>\n                        </Row>\n\n                        <Row>\n                            <Col lg={4} md={4} sm={4} xs={4}>Category</Col>\n                            <EditSelect \n                                as=\"p\" lg={6} md={6} sm={6} xs={6}\n                                value={issue.category} \n                                name=\"category\" \n                                onEdit={handleEditIssue} \n                                options={[\"bug\", \"feature\", \"task\", \"other\"]}\n                            >\n                                {issue.category}\n                            </EditSelect>\n                        </Row>\n\n                        <Row>\n                            <Col lg={4} md={4} sm={4} xs={4}>Priority</Col>\n                            <EditSelect \n                                as=\"p\" lg={6} md={6} sm={6} xs={6}\n                                value={issue.priority} \n                                name=\"priority\" \n                                onEdit={handleEditIssue} \n                                options={[\"critical\", \"high\", \"regular\", \"low\", \"trivial\"]}\n                            >\n                                {issue.priority}\n                            </EditSelect>\n                        </Row>\n                    </>\n                }\n\n                <Row>\n                    <Col lg={4} md={4} sm={4} xs={4}>Status</Col>\n                    <Col as=\"p\" lg={6} md={6} sm={6} xs={6}>\n                        {issue.status}\n                        {\n                            <Button \n                                className=\"mx-1\" size=\"sm\" \n                                hidden={issue.status === \"resolved\" || issue.status === \"closed\"}\n                                onClick={handleAdvanceIssue}\n                            >\n                                {advanceButtonText}\n                            </Button>\n                        } \n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col lg={4} md={4} sm={4} xs={4}>Created on</Col>\n                    <Col as=\"p\" lg={6} md={6} sm={6} xs={6}>{removeTimezoneFromDateString(new Date(issue.created_at).toString())}</Col>\n                </Row>\n\n                <Row>\n                    <Col lg={4} md={4} sm={4} xs={4}>Created by</Col>\n                    <Col as=\"p\" lg={6} md={6} sm={6} xs={6}>{issue.creator}</Col>\n                </Row>\n\n                <Row>\n                    <Col lg={4} md={4} sm={4} xs={4}>Assigned to</Col>\n                    <Col as=\"p\" lg={6} md={6} sm={6} xs={6}>{issue.assignee ? issue.assignee : \"Unassigned\"}</Col>\n                </Row>\n\n                <Row>\n                    <Col lg={4} md={4} sm={4} xs={4}>Assigned on</Col>\n                    <Col as=\"p\" lg={6} md={6} sm={6} xs={6}>{(issue.opened_at) ? removeTimezoneFromDateString(new Date(issue.opened_at).toString()) : \"N/A\"}</Col>\n                </Row>\n\n                <Row>\n                    <Col lg={4} md={4} sm={4} xs={4}>Resolved/Closed on</Col>\n                    <Col as=\"p\" lg={6} md={6} sm={6} xs={6}>{(issue.closed_at) ? removeTimezoneFromDateString(new Date(issue.closed_at).toString()) : \"N/A\"}</Col>\n                </Row>\n\n                <Row>\n                    <Col lg={4} md={4} sm={4} xs={4}>Attachments</Col>\n                    <Col lg={6} md={6} sm={6} xs={6} id=\"attachments-content\">\n                        <Attachments \n                            attachments={attachments.data}\n                            onCreate={(file, progressCb) => (\n                                props.onCreateAttachmentRequest(\n                                    props.match.params.projectId,\n                                    issue.id,\n                                    file,\n                                    progressCb\n                                )\n                            )}\n                            onComplete={(attachmentHandles) => {\n                                console.log(attachmentHandles);\n                                props.onAddAttachment(\n                                    props.match.params.projectId,\n                                    issue.id, \n                                    attachmentHandles\n                                )\n                                getAttachments();\n                            }}\n                            onDelete={(id) => {\n                                console.log(id);\n                                handleRemoveAttachment(id)\n                            }}\n                        />\n                    </Col>\n                </Row>\n\n                <LinkButton to={`${issue.id}/log`} className=\"my-3\">View Issue Log</LinkButton>\n\n                <Row>\n                    <Col lg={4} md={4} sm={4} xs={4}>\n                        <Button variant=\"outline-primary\" type=\"submit\" form=\"add-comment\">Add Comment</Button>\n                    </Col>\n                    <Col lg={4} md={4} sm={4} xs={4}>\n                        <Form id=\"add-comment\" onSubmit={handleAddComment}>\n                            <Form.Group controlId=\"comment\">\n                                <Form.Control as=\"textarea\" placeholder=\"Enter comment\" />\n                            </Form.Group>\n                        </Form>\n                    </Col>\n                </Row>\n                \n                <Row>\n                    <Col lg={4} md={4} sm={4} xs={4}>Comments</Col>\n                    <CommentList \n                        comments={comments.data} \n                        onEdit={handleEditComment} \n                        onDelete={showDeleteCommentDialogBox}\n                    />\n                </Row>\n\n            </Container>\n        </>\n    );\n}\n\nexport default IssueDetails;","const paramKey = \"list_filter_params\";\n\nexport function setLocalParamStorage(params) {\n    localStorage.setItem(paramKey, JSON.stringify(params));\n}\n\nexport function getLocalParamStorage() {\n    return JSON.parse(localStorage.getItem(paramKey));\n}\n\nexport function removeLocalParamStorage() {\n    localStorage.removeItem(paramKey);\n}","import { useState, useEffect } from 'react';\nimport { setLocalParamStorage, getLocalParamStorage } from '../utility/local/paramStorage';\n\nfunction useListParams(initialParams) {\n    const [listParams, setListParams] = useState(initialParams);\n\n    // Check local storage for list params, if none then set to initialParams prop\n    useEffect(() => {\n        const store = getLocalParamStorage();\n        if(!store) {\n            setLocalParamStorage(initialParams);\n        } else {\n            setListParams(store);\n        }\n    // eslint-disable-next-line\n    }, []);\n\n    // Save updated list params to local storage\n    useEffect(() => {\n        setLocalParamStorage(listParams);\n    }, [listParams]);\n\n    function handleChange(param, value) {\n        setListParams(prev => ({ ...prev, [param]: value}));\n    }\n\n    return [listParams, handleChange];\n}\n\nexport default useListParams;","import React from 'react';\nimport { Formik, Form, Field } from 'formik';\n\nfunction SelectForm({ formId, fieldName, selectItems, itemKey, initialValues, onSubmit }) {\n    const selectOptions = selectItems.map((item, idx) => (\n        <option id={`option${idx}`} key={`option${idx}`} value={item.id}>{item[itemKey]}</option>\n    ));\n\n    return(\n        <Formik\n            initialValues={initialValues}\n            onSubmit={onSubmit}\n        >\n            {() => {\n                return (\n                    <Form id={formId}>\n                        <Field name={fieldName} as=\"select\">\n                            {selectOptions}\n                        </Field>\n                    </Form>\n                )\n        }}\n        </Formik>\n    )\n}\n\nexport default SelectForm;","import React from 'react'\nimport { Form, FormControl, Button } from 'react-bootstrap';\n\nfunction InlineSearch(props) {\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        props.onSubmit(e.target.firstChild.value);\n    }\n\n    return (\n        <Form inline noValidate onSubmit={handleSubmit} className={props.className} style={{ alignItems: \"flex-start\", paddingTop: \"0.25rem\", flexWrap: \"nowrap\" }}>\n            <FormControl type=\"text\" name=\"search\" placeholder=\"Search\" className=\"ml-2 mr-1\"/>\n            <Button type=\"submit\" variant=\"outline-info\" className=\"mx-1\">Search</Button>\n        </Form>\n    )\n\n}\n\nexport default InlineSearch;","export default class CollabInfo {\n    constructor(collabArray) {\n        this.collaborators = collabArray;\n    }\n\n    get(collabId) {\n        if(this.collaborators.length === 0) return;\n        return this.collaborators.find(collab => collab.id === collabId);\n    }\n}","export const projectLogItemText = (logAction, logCreatedBy, logCollaborator, logDate, logData) => {\n    let text = \"\";\n    switch(logAction) {\n        case 'INSERT_ISSUE':\n            text += logCreatedBy.userName;\n            text += \" created an issue (#\";\n            text += logData.newData.issueId;\n            text += \") for this project - \";\n            break;\n        case 'RESOLVE_ISSUE':\n            text += logCreatedBy.userName;\n            text += \" resolved an issue (#\";\n            text += logData.newData.issueId;\n            text += \") for this project - \";\n            break;\n        case 'DELETE_ISSUE':\n            text += logCreatedBy.userName;\n            text += \" deleted an issue (#\";\n            text += logData.oldData.issueId;\n            text += \") for this project - \";\n            break;\n        case 'UPDATE':\n            text += logCreatedBy.userName;\n            text += \" updated the details of this project - \";\n            break;\n        case 'ADD_COLLAB':\n            text += logCreatedBy.userName;\n            text += \" added \";\n            text += logCollaborator.userName;\n            text += \" to this project - \";\n            break;\n        case 'REMOVE_COLLAB':\n            text += logCreatedBy.userName;\n            text += \" removed \";\n            text += logCollaborator.userName;\n            text += \" from this project - \";\n            break;\n        case 'INSERT':\n            text += logCreatedBy.userName;\n            text += \" created this project - \";\n            break;\n        case 'DELETE':\n            text += logCreatedBy.userName;\n            text += \" deleted this project - \";\n            break;\n        default:\n            break;\n    }\n    text += logDate;\n    return text;\n}\n\nconst getChanges = (oldData, newData) => {\n    const _oldData = JSON.parse(oldData);\n    const _newData = JSON.parse(newData)\n    const keys = Object.keys(_oldData);\n    const changes = {};\n    for(let key of keys) {\n        if(_oldData[key] !== _newData[key]) {\n            changes[key] = {\n                oldData: _oldData[key],\n                newData: _newData[key]\n            };\n        }\n    }\n    return changes;\n}\n\nexport const issueLogItemText = (logAction, logCreatedBy, logDate, logDataOld, logDataNew) => {\n    let text = \"\";\n    switch(logAction) {\n        case 'INSERT':\n            text += logCreatedBy.userName;\n            text += \" created this issue - \";\n            text += logDate;\n            break;\n        case 'UPDATE':\n            text += logCreatedBy.userName;\n            const changes = getChanges(logDataOld, logDataNew);\n            const changedKeys = Object.keys(changes).filter(key => key !== \"assigneeId\" || key !== \"creatorId\");\n            let i = 0;\n            for(let key of changedKeys) {\n                if(key === \"assignee\") text += \" assigned this issue \";\n                else text += \" changed the \" + key + \" of this issue\";\n                text += \" to '\" + changes[key].newData + \"'\";\n                text += (++i < changedKeys.length) ? \" and \" : \"\";\n            }\n            text += \" - \" + logDate;\n            break;\n        case 'DELETE':\n            text += logCreatedBy.userName;\n            text += \" deleted this issue - \";\n            text += logDate;\n            break;\n        default:\n            break;\n    }\n    return text;\n}","import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport { useAuth, useResource } from '../../hooks';\nimport List from '../../components/display/List/List';\nimport CollabInfo from '../../utility/CollabInfo';\nimport { removeTimezoneFromDateString } from '../../utility/strings';\nimport { issueLogItemText } from '../../utility/log';\n\nfunction IssueLog(props) {\n    const auth = useAuth();\n    const [log, ] = useResource(\n        `/api/projects/${props.match.params.projectId}/issues/${props.match.params.issueId}/reports`,\n        auth.user ? auth.user.token : null\n    )\n\n    const renderLogItem = (item) => {\n        if(!item || !props.collaborators || props.collaborators.length === 0) return null;\n        const date = removeTimezoneFromDateString(new Date(item.createdAt).toString());\n        const collabInfo = new CollabInfo(props.collaborators);\n        const createdBy = collabInfo.get(item.createdBy);\n        const text = issueLogItemText(item.action, createdBy, date, item.oldData, item.newData)\n        return <div>{text}</div>\n    }\n\n    return (\n        <Container fluid>\n            <List listItems={log.data} render={renderLogItem}/>\n        </Container>\n    )\n}\n\nexport default IssueLog;","import React, { useState } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { Container, Button } from 'react-bootstrap';\n\nimport useAuth from '../../hooks/useAuth';\nimport useResource from '../../hooks/useResource';\n\nimport IssueNavBar from '../../components/app/Navigation/IssueNavBar';\nimport IssueList from '../../components/app/IssueList/IssueList';\nimport IssueFilterControl from '../../components/app/IssueFilterControl/IssueFilterControl';\nimport IssueDetails from '../../pages/IssueDetails/IssueDetails';\n\nimport useDialogBox from '../../hooks/useDialogBox';\nimport useListParams from '../../hooks/useListParams';\nimport SelectForm from '../../components/form/SelectForm';\nimport InlineSearch from '../../components/form/InlineSearch';\nimport IssueDetailNavBar from '../../components/app/Navigation/IssueDetailNavBar';\nimport IssueLog from '../IssueLog/IssueLog';\nimport useNotificationBanner from '../../hooks/useNotificationBanner';\n\nconst initialFilterValue = {\n    category: {\n        bug: true, \n        feature: true,\n        task: true,\n        other: true\n    },\n    priority: {\n        critical: true,\n        high: true,\n        regular: true,\n        low: true,\n        trivial: true\n    },\n    status: {\n        unassigned: true,\n        open: true,\n        inprogress: true,\n        resolved: true,\n        closed: true\n    }\n}\n\nfunction IssueDashboard({ issues, ...props }) {\n    const auth = useAuth();\n    const notificationBanner = useNotificationBanner();\n    const [collaborators, ] = useResource(\n        `/api/projects/${props.match.params.projectId}/collaborators`,\n        auth.user ? auth.user.token : null\n    );\n    const { show: showDeleteIssueDialogBox, RenderDialogBox: DeleteIssueDialogBox } = useDialogBox();\n    const { show: showAssignIssueDialogBox, RenderDialogBox: AssignIssueDialogBox } = useDialogBox();\n    const { show: showStartIssueDialogBox, RenderDialogBox: StartIssueDialogBox } = useDialogBox();\n    const { show: showCloseIssueDialogBox, RenderDialogBox: CloseIssueDialogBox } = useDialogBox();\n    const [listParams, changeListParams] = useListParams({ order: \"desc\", group: \"category\", filter: initialFilterValue, search: \"\" });\n\n    const handleDeleteIssue = async ({ data }) => {\n        try {\n            await props.onDelete(data.projectId, data.issueId)\n            notificationBanner.showNotificationWithText(\"Issue Successfully Deleted!\");\n        } catch(err) {\n            notificationBanner.showNotificationWithText(err.message);\n        }\n    }\n\n    const handleAssignIssue = async ({ data, values }) => {\n        try {\n            await props.onAssign(data.projectId, data.issueId, values.collaboratorId)\n            notificationBanner.showNotificationWithText(\"Issue Successfully Assigned!\");\n        } catch(err) {\n            notificationBanner.showNotificationWithText(err.message);\n        }\n    }\n\n    const handleStartIssue = async ({ data }) => {\n        try {\n            props.onStart(await data.projectId, data.issueId)\n            notificationBanner.showNotificationWithText(\"Issue Successfully Advanced to In-Progress!\");\n        } catch(err) {\n            notificationBanner.showNotificationWithText(err.message);\n        }\n    }\n\n    const handleCloseIssue = async ({ data, values }) => {\n        try {\n            await props.onClose(data.projectId, data.issueId, values.status)\n            notificationBanner.showNotificationWithText(\"Issue Completed!\");\n        } catch(err) {\n            notificationBanner.showNotificationWithText(err.message);\n        }\n    }\n    \n    return (\n        <>\n            <DeleteIssueDialogBox\n                heading=\"Delete Issue\"\n                submitButtonText=\"Delete\"\n                onSubmit={handleDeleteIssue}\n                render={({ data }) => (\n                    'Are you sure you would like to delete issue ' + data.issueId\n                )}\n            />\n            <AssignIssueDialogBox\n                heading=\"Assign Issue\"\n                submitButtonText=\"Assign\"\n                formId=\"project-collaborators\"  \n                onSubmit={handleAssignIssue}\n                render={() => (\n                    <SelectForm \n                        formId=\"project-collaborators\"  \n                        fieldName=\"collaboratorId\"\n                        initialValues={{ \"collaboratorId\": \"\"}} \n                        selectItems={collaborators.data} \n                        itemKey=\"userName\"\n                    />\n                )}\n            />\n            <StartIssueDialogBox\n                heading=\"Begin Issue\"\n                submitButtonText=\"Advance\"\n                onSubmit={handleStartIssue}\n                render={({ data }) => 'Are you sure you would like to begin issue ' + data.issueId + '? The status of this issue will be advanced to \"inprogress\".'}\n            />\n            <CloseIssueDialogBox\n                heading=\"Complete Issue\"\n                submitButtonText=\"Complete\"\n                formId=\"complete-status\"  \n                onSubmit={handleCloseIssue}\n                render={() => (\n                    <>\n                        <div>Please select how you would like to complete this issue? </div>\n                        <SelectForm \n                            formId=\"complete-status\"  \n                            fieldName=\"status\"\n                            initialValues={{ \"status\": \"\"}} \n                            selectItems={[{ status: \"closed\" }, { status: \"resolved\" }]} \n                            itemKey=\"status\"\n                        />\n                    </>\n                )}\n            />\n            <Switch>\n                <Route path={props.match.path} exact render={() => (\n                    <>\n                        <IssueNavBar render={() => (\n                            <>\n                                <Button \n                                    className=\"stick-left\" \n                                    variant=\"outline-secondary\"\n                                    onClick={() => { props.history.push('/projects') }}\n                                >\n                                    All Projects\n                                </Button>\n                                <InlineSearch \n                                    className=\"search-bar\"\n                                    onSubmit={(searchText) => { changeListParams(\"search\", searchText) }}\n                                />\n                                <IssueFilterControl \n                                    className=\"filter-controls\"\n                                    filters={listParams.filter}\n                                    onSelect={changeListParams}\n                                />\n                            </>\n                        )}/>\n                        <Container fluid className=\"page light\">\n                            <IssueList \n                                projectId={props.match.params.projectId} \n                                collaborators={collaborators.data}\n                                issueList={issues}\n\n                                groupBy={listParams.group}\n                                orderBy={listParams.order}\n                                filter={listParams.filter}\n                                searchText={listParams.search}\n                                searchKeys={[\"title\", \"description\"]}\n\n                                onDelete={showDeleteIssueDialogBox}\n                                onAssign={showAssignIssueDialogBox}\n                                onStart={showStartIssueDialogBox}\n                                onClose={showCloseIssueDialogBox}\n                            />\n                        </Container>\n                    </>\n                )}/>\n                <Route path={`${props.match.path}/:issueId`} exact render={(routerProps) => {\n                    const issueIdx = issues.findIndex(iss => iss.id === Number(routerProps.match.params.issueId));\n                    const issue = (issueIdx !== -1) ? issues[issueIdx] : null; \n                    if(!issue) return;\n                    return (\n                        <>\n                            <IssueDetails \n                                {...routerProps} \n                                issue={issue}\n                                collaborators={collaborators.data}\n                                onEdit={props.onEdit}\n                                onDelete={showDeleteIssueDialogBox}\n                                onAssign={showAssignIssueDialogBox}\n                                onStart={showStartIssueDialogBox}\n                                onClose={showCloseIssueDialogBox}\n                                onCreateAttachmentRequest={props.onCreateAttachmentRequest}\n                                onAddAttachment={props.onAddAttachment}\n                                onRemoveAttachment={props.onRemoveAttachment}\n                            />\n                        </>\n                    )\n                }} />\n                <Route path={`${props.match.path}/:issueId/log`} exact render={(routerProps) => {\n                    const issueIdx = issues.findIndex(iss => iss.id === Number(routerProps.match.params.issueId));\n                    const issue = (issueIdx !== -1) ? issues[issueIdx] : null; \n                    const urlParts = routerProps.match.url.split('/');\n                    urlParts.pop(); urlParts.pop(); // Remove last two elements( ':issueId/log' ) from url\n                    if(!issue) return;\n                    return (\n                        <>\n                            <IssueDetailNavBar title={issue.title} linkUrl={urlParts.join(\"/\")} render={() => {\n                                return (\n                                    <Button \n                                        className=\"stick-left\" \n                                        onClick={() => { props.history.goBack() }}\n                                    >Back to Issue Details</Button>\n                                )\n                            }}/>\n                            <IssueLog collaborators={collaborators.data} {...routerProps} />\n                        </>\n                    )\n                }} />\n            </Switch>\n        </>\n    )\n}\n\nexport default IssueDashboard;","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport useResource from '../../hooks/useResource';\nimport useAuth from '../../hooks/useAuth';\nimport projectsApi from '../../api/projects';\nimport withEdit from '../../components/hocs/withEdit/withEdit';\nimport List from '../../components/display/List/List';\nimport CollabInfo from '../../utility/CollabInfo';\nimport { removeTimezoneFromDateString } from '../../utility/strings';\nimport { projectLogItemText } from '../../utility/log';\n\nfunction ProjectDetails({project, ...props}) {\n    const auth = useAuth();\n    const [collaborators, ] = useResource(\n        `/api/projects/${props.match.params.projectId}/collaborators`,\n        auth.user ? auth.user.token : null\n    );\n    const [log, ] = useResource(\n        `/api/projects/${props.match.params.projectId}/reports`,\n        auth.user ? auth.user.token : null\n    )\n\n    const EditBox = withEdit(Col, \"text\");\n    const EditArea = withEdit(Col, \"textarea\");\n\n    const handleEdit = async (value) => {\n        const result = await projectsApi.updateProject(props.match.params.projectId, auth.user.token, value);\n        console.log(result);\n    }\n\n    const renderLogItem = (item) => {\n        if(!item || !props.collaborators || props.collaborators.length === 0) return null;\n        const date = removeTimezoneFromDateString(new Date(item.createdAt).toString());\n        const collabInfo = new CollabInfo(collaborators.data);\n        const createdBy = collabInfo.get(item.createdBy);\n        const { collaboratorId } = JSON.parse(item.newData || item.oldData);\n        const oldData = JSON.parse(item.oldData);\n        const newData = JSON.parse(item.newData);\n        const collaborator = collabInfo.get(collaboratorId);\n        const text = projectLogItemText(item.action, createdBy, collaborator, date, { oldData, newData });\n        return <div>{text}</div>\n    }\n\n    return (\n        <Container fluid>\n                <Row className=\"justify-content-center\">\n                    <EditBox as=\"h3\" value={project.name} name=\"name\" onEdit={handleEdit}>\n                        {project.name}\n                    </EditBox>\n                </Row>\n                \n                <Row className=\"justify-content-center\">\n                    <EditArea as=\"p\" value={project.description} name=\"description\" onEdit={handleEdit}>\n                        {project.description}\n                    </EditArea>\n                </Row>\n\n                <Row>\n                    <Col as=\"h5\">Collaborators:</Col>\n                </Row>\n                \n                {\n                    collaborators && collaborators.data.map((collab, key) => {\n                        return (\n                            <Row key={key}>\n                                <Col style={{ textAlign: \"right\" }}>{`${collab.firstName} ${collab.lastName}`}</Col>\n                                <Col style={{ textAlign: \"left\" }}>{collab.userName}</Col>\n                            </Row>\n                        )\n                    })\n                }\n\n                <Row>\n                    <Col as=\"h5\">Issues:</Col>\n                </Row>\n                <Row style={{ justifyContent: \"center\" }}>{`There are ${project.issues && project.issues.length} issues related to this project`}</Row>\n\n                <Row style={{ justifyContent: \"center\" }}>\n                    <Col as=\"h5\">Project Log:</Col>\n                </Row>\n                <Row style={{ justifyContent: \"center\" }}>\n                    <List listItems={log.data} render={renderLogItem}/>\n                </Row>\n                <Row>{}</Row>\n        </Container>\n    );\n}\n\nexport default ProjectDetails;","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\n\nimport useAuth from '../../hooks/useAuth';\nimport useProjects from '../../hooks/useProjects';\nimport useResource from '../../hooks/useResource';\n\nimport ProjectsNavBar from '../../components/app/Navigation/ProjectsNavBar';\nimport ProjectList from '../../components/app/ProjectList/ProjectList';\n\nimport NewProjectPage from '../../pages/NewProjectPage/NewProjectPage';\nimport NewIssuePage from '../../pages/NewIssuePage/NewIssuePage';\nimport IssueDashboard from '../../pages/IssueDashboard/IssueDashboard';\nimport ProjectDetails from '../../pages/ProjectDetails/ProjectDetails';\n\nimport useDialogBox from '../../hooks/useDialogBox';\nimport SelectForm from '../../components/form/SelectForm';\nimport useNotificationBanner from '../../hooks/useNotificationBanner';\n\nfunction ProjectDashboard({ match }) {\n    const auth = useAuth();\n    const projects = useProjects();\n    const notificationBanner = useNotificationBanner();\n    const [collaborators, ] = useResource('/api/user/all', auth.user ? auth.user.token : null);\n    const { show: showDeleteProjectDialogBox, RenderDialogBox: DeleteDialogBox } = useDialogBox(); \n    const { show: showAddCollaboratorDialogBox, RenderDialogBox: AddCollaboratorDialogBox } = useDialogBox(); \n\n    return (\n        <>\n            <DeleteDialogBox\n                heading=\"Delete Project\"\n                closeButtonText=\"Cancel\"\n                submitButtonText=\"Delete\"\n                onSubmit={async (project) => {\n                    try {\n                        await projects.handleDeleteProject(project)\n                        notificationBanner.showNotificationWithText(\"Project Successfully Deleted!\");\n                    } catch(err) {\n                         notificationBanner.showNotificationWithText(err.message);\n                    }\n                }}\n                render={({ data }) => 'Are you sure you would like to delete project with id ' + data.projectId + '?'}\n            />\n            <AddCollaboratorDialogBox\n                heading=\"Add Collaborator\"\n                submitButtonText=\"Add\"\n                formId=\"collaborator-select-form\"\n                onSubmit={async (data) => {\n                    try {\n                        await projects.handleAddCollaborator(data)\n                        notificationBanner.showNotificationWithText(\"Collaborator Successfully Added to Project!\");\n                    } catch(err) {\n                        notificationBanner.showNotificationWithText(err.message);\n                    }\n                }}\n                render={() => ( \n                    <SelectForm \n                        formId=\"collaborator-select-form\"\n                        fieldName=\"collaboratorId\"\n                        initialValues={{ \"collaboratorId\": \"\" }}\n                        selectItems={collaborators.data} \n                        itemKey=\"userName\"\n                    />\n                )}\n            />\n            <Switch>\n                <Route path={match.url} exact render={() => (\n                    <>\n                        <ProjectsNavBar />\n                        <Container className=\"page light\" fluid>\n                            <ProjectList \n                                projectList={projects.data} \n                                onDelete={showDeleteProjectDialogBox} \n                                onEdit={projects.handleEditProject} \n                                onAddCollaborator={showAddCollaboratorDialogBox} \n                            />\n                        </Container>\n                    </>\n                )}/>\n                <Route path={`${match.url}/:projectId/issues/new`} exact render={(routerProps) => \n                    <NewIssuePage \n                        {...routerProps} \n                        onSubmit={projects.handleCreateIssue} \n                        onCreateAttachmentRequest={projects.handleIssueAttachmentRequest}\n                        onAddAttachment={projects.addIssueAttachmentHandles}\n                    />\n                }/>\n                <Route path={`${match.url}/:projectId/issues`} render={(routerProps) => {\n                    const projectIdx = projects.data.findIndex(proj => proj.id === Number(routerProps.match.params.projectId));\n                    const issues = (projectIdx !== -1) ? projects.data[projectIdx].issues : []; \n                    return (\n                        <IssueDashboard \n                            {...routerProps} \n                            issues={issues} \n                            onDelete={projects.handleDeleteIssue} \n                            onAssign={projects.handleAssignIssue}\n                            onStart={projects.handleStartIssue} \n                            onClose={projects.handleCloseIssue}\n                            onEdit={projects.handleEditIssue}\n                            onCreateAttachmentRequest={projects.handleIssueAttachmentRequest}\n                            onAddAttachment={projects.addIssueAttachmentHandles}\n                            onRemoveAttachment={projects.handleRemoveIssueAttachment}\n                        />\n                    )\n                }}/>\n                <Route path={`${match.url}/new`} exact render={(routerProps) => \n                    <NewProjectPage {...routerProps} onSubmit={projects.handleAddProject} />\n                }/>\n                <Route path={`${match.url}/:projectId/`} exact render={(routerProps) => {\n                    const project = projects.data.find(proj => proj.id === Number(routerProps.match.params.projectId));\n                    if(!project) return;\n                    return <ProjectDetails project={project} {...routerProps} />\n                }}/>\n            </Switch>\n        </>\n    )\n}\n\nexport default ProjectDashboard;","import { useContext } from \"react\";\nimport { projectsContext } from \"../contexts/ProjectsContext\";\n\nexport default function useProjects() {\n    return useContext(projectsContext);\n}","import React from 'react';\nimport { Row, Col } from 'react-bootstrap';\n\nimport './UserInfo.css';\n\nexport default function UserInfo(props) {\n    return (\n        <div className=\"user-info\">\n            <Row>\n                <Col lg={6} md={6} s={4} xs={12} className=\"label\">First Name: </Col>\n                <Col lg={6} md={6} s={8} xs={12} className=\"user-detail\">{ props.user.firstName }</Col>\n            </Row>\n\n            <Row>\n                <Col lg={6} md={6} s={4} xs={12} className=\"label\">Last Name: </Col>\n                <Col lg={6} md={6} s={8} xs={12} className=\"user-detail\">{ props.user.lastName }</Col>\n            </Row>\n\n            <Row>\n                <Col lg={6} md={6} s={4} xs={12} className=\"label\">User Name: </Col>\n                <Col lg={6} md={6} s={8} xs={12} className=\"user-detail\">{ props.user.userName }</Col>\n            </Row>\n\n            <Row>\n                <Col lg={6} md={6} s={4} xs={12}className=\"label\">Email: </Col>\n                <Col lg={6} md={6} s={8} xs={12}className=\"user-detail\">{ props.user.email }</Col>\n            </Row>\n\n        </div>\n    )\n}","import React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { Row, Col, Button } from 'react-bootstrap';\n\nimport { ChangePasswordSchema } from '../../utility/schema/validation';\n\nexport default function ChangePasswordForm(props) {\n    return (\n        <Formik\n            initialValues={{\n                currentPassword: \"\",\n                newPassword: \"\",\n                confirmNewPassword: \"\"\n            }}\n            onSubmit={async (values, { setSubmitting }) => {\n                setSubmitting(true);\n                await props.onSubmit(values.currentPassword, values.newPassword);\n                setSubmitting(false);\n            }}\n            validationSchema={ChangePasswordSchema}\n        >\n            {({ isSubmitting }) => (\n                <Form className=\"form\">\n                    <Row>\n                        <Col>\n                            <label htmlFor=\"currentPassword\">Current Password</label>\n                        </Col>\n                        <Col>\n                            <Field name=\"currentPassword\" type=\"password\" autoComplete=\"new-password\"/>\n                            <span className=\"form-error\">\n                                {props.error && <div>{props.error.message}</div>}\n                                <ErrorMessage name=\"currentPassword\"/>\n                            </span>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col>\n                            <label htmlFor=\"newPassword\">New Password</label>\n                        </Col>\n                        <Col>\n                            <Field name=\"newPassword\" type=\"password\" autoComplete=\"new-password\" />\n                            <span className=\"form-error\">\n                                <ErrorMessage name=\"newPassword\" />\n                            </span>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col>\n                            <label htmlFor=\"confirmNewPassword\">Confirm New Password</label>\n                        </Col>\n                        <Col>\n                            <Field name=\"confirmNewPassword\" type=\"password\" autoComplete=\"off\" />\n                            <span className=\"form-error\">\n                                <ErrorMessage name=\"confirmNewPassword\" />\n                            </span>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Button variant=\"primary\" type=\"submit\" disabled={isSubmitting}>Submit</Button>\n                    </Row>\n\n                </Form>\n            )}\n        </Formik>\n    )\n}","import React from 'react';\nimport { Container, Row } from 'react-bootstrap';\n\nimport { useAuth } from '../../hooks';\n\nimport UserInfo from '../../components/app/UserInfo/UserInfo';\n\nimport '../page.css';\nimport './UserAccountPage.css';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport ChangePasswordForm from '../../components/form/ChangePasswordForm';\n\nexport default function UserAccountPage(props) {\n    const auth = useAuth();\n\n    const handlePasswordChange = async (currentPassword, newPassword) => {\n        auth.changePassword(currentPassword, newPassword, async (err) => {\n            if(!err) {\n                await auth.logout(() => props.history.push('/dashboard'));\n            } else console.log(err);\n         });\n        \n    }\n\n    return (\n        <Switch>\n            <Route path={props.match.url} exact render={() => (\n                <Container fluid className=\"page\" id=\"user-account\">\n                    <Row as=\"h4\">Account Information</Row>\n                    <Row>\n                        <UserInfo user={auth.user} />\n                    </Row>\n                    <Row>\n                        <div>To change your password, click&nbsp;</div>\n                        <Link to=\"account/changePassword\">here</Link>{\".\"}\n                    </Row>\n                </Container>\n            )}/>\n\n            <Route path={props.match.url + \"/changePassword\"} exact render={() => (\n                <Container fluid className=\"page\" id=\"change-password\">\n                    <div> Change Password </div>\n                    <ChangePasswordForm onSubmit={handlePasswordChange} error={auth.error} />\n                </Container>\n            )}/>\n        </Switch>\n    )\n};","import React from 'react';\nimport useNotificationBanner from '../../../hooks/useNotificationBanner';\nimport './NotificationBanner.css';\n\nexport default function NotificationBanner(props) {\n    const banner = useNotificationBanner();\n    return (\n        <div className={'notification-banner-container ' + (banner.show ? \"show\" : \"\")}>\n            <div className=\"notification-banner\">\n                {banner.text}\n            </div>\n        </div>\n    );\n};","import React from 'react';\nimport { Switch, Route, BrowserRouter as Router } from 'react-router-dom';\n\nimport ProvideAuth from './contexts/AuthContext';\nimport ProvideProjects from './contexts/ProjectsContext';\n\nimport PrivateRoute from './utility/route/PrivateRoute';\nimport TopNavBar from './components/app/Navigation/TopNavBar';\n\nimport LoginPage from './pages/LoginPage/LoginPage';\nimport SignupPage from './pages/SignupPage/SignupPage';\nimport Dashboard from './pages/Dashboard/Dashboard';\nimport ProjectDashboard from './pages/ProjectDashboard/ProjectDashboard';\nimport UserAccountPage from './pages/UserAccountPage/UserAccountPage';\nimport NotificationBanner from './components/display/NotificationBanner/NotificationBanner';\nimport ProvideNotificationBanner from './contexts/NotificationBannerContext';\n\nfunction IssueTracker() {\n\n    return (\n        <Router>\n            <ProvideAuth>\n                <ProvideProjects>\n                    <ProvideNotificationBanner>\n                        <NotificationBanner />\n                        <TopNavBar />\n                        <Switch>\n                            <Route path=\"/login\" component={LoginPage} />\n                            <Route path=\"/signup\" component={SignupPage} />\n                            <PrivateRoute path=\"/dashboard\" component={Dashboard} />\n                            <PrivateRoute path=\"/projects\" component={ProjectDashboard} />\n                            <PrivateRoute path=\"/account\" component={UserAccountPage} />\n                            <PrivateRoute path=\"/\" component={Dashboard} />\n                        </Switch>\n                    </ProvideNotificationBanner>\n                </ProvideProjects>\n            </ProvideAuth>\n        </Router>\n    )\n\n\n}\n\nexport default IssueTracker;","import './App.css';\n\nimport IssueTracker from './IssueTracker';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <IssueTracker></IssueTracker>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}